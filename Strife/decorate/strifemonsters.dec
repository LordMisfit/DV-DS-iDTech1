// ENTITY
ACTOR EntityBossNew : SpectralMonsterBase replaces EntityBoss
{
	Tag "The Entity: The One God"
	Health 2500
	PainChance 255
	Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor "Crush", 0.000125 // 0.001
	DamageFactor "PoisonBolt", 0.025
	DamageFactor "Normal", 0.0001 // 0.01% damage from most attacks. :P
	// After this, set all vulnerablities to what you want them to have to what you want. :P
	DamageFactor "Sceptre", 1
	DamageFactor "Magic", 1
	DamageFactor "Fire", 0.25
	DamageFactor "Ice", 0.25
	DamageFactor "Plasma", 0.625
	DamageFactor "Thunder", 0.25
	DamageFactor "Electric", 0.25
	DamageFactor "Lightning", 0.25
	DamageFactor "Holy", 1
	DamageFactor "Sigil", 2
	DamageFactor "ImpSoul", 1
	DamageFactor "DarkImpSoul", 1
	DamageFactor "CacodemonSoul", 1
	DamageFactor "CacolanternSoul", 1
	DamageFactor "AbaddonSoul", 1
	DamageFactor "KnightSoul", 1
	DamageFactor "BaronSoul", 1
	DamageFactor "BelphegorSoul", 1
	DamageFactor "BrusierFist", 1
	DamageFactor "ArchonSoul", 1
	DamageFactor "PyroDemonSoul", 1
	DamageFactor "IncarnateSoul", 1
	DamageFactor "DiabloistSoul", 1
	DamageFactor "BalrogSoul", 1
	DamageFactor "HElementalSoul", 1
	DamageFactor "HOverlordSoul", 1
	DamageFactor "Fist", 1
	DamageFactor "Kick", 1
	DamageFactor "Gauntlets", 1

	Speed 13
	Radius 130
	Height 200
	FloatSpeed 5
	Mass 500000000
	Monster
	+SPECIAL
	+NOGRAVITY
	+FLOAT
	+SHADOW
	+NOTDMATCH
	+DONTMORPH
	+NOTARGET
	+NOBLOCKMONST
	+INCOMBAT
	+LOOKALLAROUND
	+NOICEDEATH
	+NOFEAR
	-SPECTRAL
	MinMissileChance 150
	RenderStyle "Translucent"
	Alpha 0.5
	SeeSound "entity/sight"
	AttackSound "entity/melee"
	PainSound "entity/pain"
	DeathSound "entity/death"
	ActiveSound "entity/active"
	Obituary "$OB_ENTITY" // "%o felt the wrath of The One God."

	States
	{
		Spawn:
			ALN1 A 0 NoDelay 
			MNAM A 100
			MNAM B 60 Bright
			MNAM CDEFGHIJKL 4 Bright
			MNAL A 4 Bright A_Look
			MNAL B 4 Bright A_SentinelBob
			Goto Spawn+13
		See:
			MNAK A 0
			MNAL A 0 Thing_ChangeTID(0,1222)
			MNAL AB 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			MNAL C 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_SentinelBob;
			}
			MNAL DEF 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			MNAL G 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_SentinelBob;
			}
			MNAL HIJ 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			MNAL K 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_SentinelBob;
			}
			Loop
		Melee:
			TNT1 A 0
			MNAL J 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
			}
			MNAL I 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack((random(1,256) & 10) * 7);
			}
			MNAL C 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
			}
			Goto See+4
		Missile:
			TNT1 A 0
			MNAL F 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
			}
			MNAL I 4 Bright 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_EntityAttack;
			}
			MNAL E 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
			}
			Goto See+12
		Pain:
			MNAL J 2 Bright A_DVDSPain
			Goto See+8

		XDeath:
		Ice:
		Death:
			MNAL L 0 A_GiveGold(random(2250,3000))
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			TNT1 A 0 
			MNAL L 7 Bright A_SpectreChunkSmall
			MNAL M 7 Bright A_Scream
			MNAL NO 7 Bright A_SpectreChunkSmall
			MNAL P 7 Bright A_SpectreChunkLarge
			MNAL Q 64 Bright A_SpectreChunkSmall
			MNAL Q 6 Bright A_EntityDeath
			Stop
	}
}

ACTOR EntitySecondNew : SpectralMonsterBase replaces EntitySecond
{
	Tag "Miniature Entity"
	Health 990
	PainChance 255
	Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor "PoisonBolt", 0.025
	DamageFactor "Crush", 0.000125 // 0.001
	DamageFactor "Normal", 0.0001 // 0.01% damage from most attacks. :P
	// After this, set all vulnerablities to what you want them to have to what you want. :P
	DamageFactor "Sceptre", 1.5
	DamageFactor "Magic", 1
	DamageFactor "Fire", 0.25
	DamageFactor "Ice", 0.25
	DamageFactor "Plasma", 0.625
	DamageFactor "Thunder", 0.25
	DamageFactor "Electric", 0.25
	DamageFactor "Lightning", 0.25
	DamageFactor "Holy", 1
	DamageFactor "Sigil", 2
	DamageFactor "ImpSoul", 1
	DamageFactor "DarkImpSoul", 1
	DamageFactor "CacodemonSoul", 1
	DamageFactor "CacolanternSoul", 1
	DamageFactor "AbaddonSoul", 1
	DamageFactor "KnightSoul", 1
	DamageFactor "BaronSoul", 1
	DamageFactor "BelphegorSoul", 1
	DamageFactor "BrusierFist", 1
	DamageFactor "ArchonSoul", 1
	DamageFactor "PyroDemonSoul", 1
	DamageFactor "IncarnateSoul", 1
	DamageFactor "DiabloistSoul", 1
	DamageFactor "BalrogSoul", 1
	DamageFactor "HElementalSoul", 1
	DamageFactor "HOverlordSoul", 1
	DamageFactor "Fist", 1
	DamageFactor "Kick", 1
	DamageFactor "Gauntlets", 1

	Speed 14
	Radius 130
	Height 200
	FloatSpeed 5
	Mass 500000000
	Monster
	+SPECIAL
	+NOGRAVITY
	+FLOAT
	+SHADOW
	+NOTDMATCH
	+DONTMORPH
	+NOBLOCKMONST
	+INCOMBAT
	+LOOKALLAROUND
	+NOICEDEATH
	+NOFEAR
	-SPECTRAL
	MinMissileChance 150
	RenderStyle "Translucent"
	Alpha 0.25
	SeeSound "alienspectre/sight"
	AttackSound "alienspectre/blade"
	PainSound "alienspectre/pain"
	DeathSound "alienspectre/death"
	ActiveSound "alienspectre/active"
	Obituary "$OB_ENTITY" // "%o felt the wrath of The One God."

	States
	{
		Spawn:
			MNAL R 0 NoDelay 
			MNAL R 10 Bright A_Look
			goto Spawn+1
		See:
			MNAL R 0
			MNAL R 0 Thing_ChangeTID(0,1222)
			MNAL R 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 45) { A_SetTics(4); }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_SentinelBob;
			}
			MNAL ST 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 45) { A_SetTics(4); }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			MNAL U 5 Bright 
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 45) { A_SetTics(4); }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_SentinelBob;
			}
			MNAL V 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 45) { A_SetTics(4); }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			MNAL W 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 45) { A_SetTics(4); }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_SentinelBob;
			}
			Loop
		Melee:
			TNT1 A 0
			MNAL S 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
			}
			MNAL R 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack((random(1,256) & 9) * 6);
			}
			MNAL T 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_SentinelBob;
			}
			Goto See+3
		Missile:
			TNT1 A 0
			MNAL W 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
			}
			MNAL U 4 Bright 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }

				A_MonsterCrisisCheck; // Single Projectile / SpotLightning
				if (random(1,2) == 1)
				{
					A_SpotLightning("SpectralLightningSpotNew","SpectralLightningSpotCrisis");
				}
				else
				{
					A_CrisisSpawnProjectile("SpectralLightningH3Monster", "SpectralLightningH3MonsterCrisis", 32, 0);
				}
			}
			MNAL V 4 Bright 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_SentinelBob;
			}
			Goto See+6
		Pain:
			MNAL R 2 Bright A_DVDSPain
			Goto See

		Death:
			MDTH O 0 A_GiveGold(random(1350,1800))
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			TNT1 A 0 
			TNT1 A 0 A_JumpIfInventory("BestEndingFlag",1,"Asension",AAPTR_PLAYER1)
		TrueDeath:
			MDTH A 3 Bright A_Scream
			MDTH B 3 Bright A_TossGib
			MDTH C 3 Bright A_NoBlocking
			MDTH DEFGHIJKLMN 3 Bright A_TossGib
			MDTH O 3 Bright A_SubEntityDeath
			Stop
		Asension:
			MNAL P 0 A_Scream
			MNAL P 0 A_NoBlocking
			MNAL PONML 7
			MNAL L 0 Bright A_SpawnItemEx("EntityAscended", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
			Stop

		XDeath:
			goto Death
		Ice:
			goto Death
	}
}

ACTOR EntityAscended : EntityBossNew
{
	Tag "The Entity: The One God: Ascendant"
	Health 3250
	PainChance 64
	Painchance "Fist", 96 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 160 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 96 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor "PoisonBolt", 0.025
	DamageFactor "Crush", 0.000125 // 0.001
	DamageFactor "Normal", 0.0001 // 0.01% damage from most attacks. :P
	// After this, set all vulnerablities to what you want them to have to what you want. :P
	DamageFactor "Sceptre", 0.75
	DamageFactor "Magic", 0.75
	DamageFactor "Fire", 0.1875
	DamageFactor "Ice", 0.1875
	DamageFactor "Plasma", 0.59375
	DamageFactor "Thunder", 0.1875
	DamageFactor "Electric", 0.1875
	DamageFactor "Lightning", 0.1875
	DamageFactor "Holy", 0.75
	DamageFactor "Sigil", 1.5
	DamageFactor "ImpSoul", 0.75
	DamageFactor "DarkImpSoul", 0.75
	DamageFactor "CacodemonSoul", 0.75
	DamageFactor "CacolanternSoul", 0.75
	DamageFactor "AbaddonSoul", 0.75
	DamageFactor "KnightSoul", 0.75
	DamageFactor "BaronSoul", 0.75
	DamageFactor "BelphegorSoul", 0.75
	DamageFactor "BrusierFist", 0.75
	DamageFactor "ArchonSoul", 0.75
	DamageFactor "PyroDemonSoul", 0.75
	DamageFactor "IncarnateSoul", 0.75
	DamageFactor "DiabloistSoul", 0.75
	DamageFactor "BalrogSoul", 0.75
	DamageFactor "HElementalSoul", 0.75
	DamageFactor "HOverlordSoul", 0.75
	DamageFactor "Fist", 0.75
	DamageFactor "Kick", 0.75
	DamageFactor "Gauntlets", 0.75

	Speed 17
	Radius 130
	Height 200
	FloatSpeed 5
	Mass 500000000
	Monster
	+SPECIAL
	+NOGRAVITY
	+FLOAT
	+SHADOW
	+NOTDMATCH
	+DONTMORPH
	+NOTARGET
	+NOBLOCKMONST
	+INCOMBAT
	+LOOKALLAROUND
	+NOICEDEATH
	+MISSILEMORE
	+NOFEAR
	-SPECTRAL
	MinMissileChance 150
	RenderStyle "Translucent"
	Alpha 0.5
	SeeSound "entity/sight"
	AttackSound "entity/melee"
	PainSound "entity/pain"
	DeathSound "entity/death"
	ActiveSound "entity/active"
	Obituary "$OB_ENTITY" // "%o felt the truest wrath of The One God Ascended."

	States
	{
		Spawn:
			MNAL A 0 NoDelay 
			MNAL A 4 Bright A_Look
			MNAL B 4 Bright A_SentinelBob
			goto Spawn+1
		See:
			MNAL A 0
			MNAL A 0 Thing_ChangeTID(0,1222)
			MNAL AB 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			MNAL C 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_SentinelBob;
			}
			MNAL DEF 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			MNAL G 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_SentinelBob;
			}
			MNAL HIJ 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			MNAL K 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_SentinelBob;
			}
			Loop
		Melee:
			MNAL A 0
			MNAL J 4 Bright 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
			}
			MNAL I 4 Bright 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
				
				A_CrisisMeleeAttack((random(1,256) & 11) * 8);
			}
			MNAL C 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
			}
			Goto See+4
		Missile:
			TNT1 A 0
			MNAL F 4 Bright 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_FaceTarget;
			}
			MNAL I 4 Bright 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_EntityAttack;
			}
			MNAL E 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
			}
			Goto See+12
		Pain:
			MNAL J 2 Bright A_DVDSPain
			Goto See+8

		XDeath:
		Ice:
		Death:
			MNAL L 0 A_GiveGold(random(3000,4000))
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			TNT1 A 0 
			MNAL L 7 Bright A_SpectreChunkSmall
			MNAL M 7 Bright A_Scream
			MNAL NO 7 Bright A_SpectreChunkSmall
			MNAL P 7 Bright A_SpectreChunkLarge
			MNAL Q 6 Bright A_SpectreChunkSmall
			MDTH A 3 Bright A_Scream
			MDTH B 3 Bright A_TossGib
			MDTH C 3 Bright A_NoBlocking
			MDTH DEFGHIJKLMN 3 Bright A_TossGib
			MDTH O 3 { CallACS("MiscVarSetDECORATE",299,1,1); }
			Stop
	}
}

// The base actor for the NPC spectres that appear in Flora's best ending path only in MAP29.
actor AlienSpectreModel : AetheriusMonsterZSC
{
	Radius 64
	Height 64
	Health 1000000
	PainChance 0
	Speed 12
	FloatSpeed 5
	Mass 500000000
	RenderStyle "Translucent"
	Alpha 0.333
	//Monster
	-SOLID
	+NODAMAGE
	+NOBLOOD
	+NEVERTARGET
	+NOGRAVITY
	+FLOAT
	+SHADOW
	+NOTDMATCH
	+DONTMORPH
	+NOBLOCKMONST
	+LOOKALLAROUND
	+NOICEDEATH
	+NOFEAR
	-SPECTRAL

	States
	{
		Spawn:
			TNT1 A 0 NoDelay 
			TNT1 A 0 A_JumpIf(CallACS("CheckCharacterClass") == 2, "Check1")
			TNT1 A 0 A_FadeOut(1.0)
			stop
		Check1:
			TNT1 A 0 A_JumpIfInventory("BestEndingFlag",1,"StickAround",AAPTR_PLAYER1)
			TNT1 A 0 A_FadeOut(1.0)
			stop
		StickAround:
			ALN1 ABCDEFGHIJK 5
			{
				A_FadeIn(0.03,0);
				A_DVDSWander(0,1,3,1,1);
			}
			ALN1 ABCDEFGHIJK 5
			{
				A_FadeOut(0.03,0);
				A_DVDSWander(0,1,3,1,1);
			}
			loop
	}
}

actor AlienSpectre1Model : AlienSpectreModel
{
	//$NotAngled
	//$Color 12
	//$Category "DV-DS Strife Patch/Models"
	Tag "Ghost of The Programmer's Spectre"

	Health 1000
}

actor AlienSpectre2Model : AlienSpectreModel
{
	//$NotAngled
	//$Color 12
	//$Category "DV-DS Strife Patch/Models"
	Tag "Ghost of The Bishop's Spectre"

	Health 1200
}

actor AlienSpectre3Model : AlienSpectreModel
{
	//$NotAngled
	//$Color 12
	//$Category "DV-DS Strife Patch/Models"
	Tag "Ghost of The Oracle's Spectre"

	Health 1500
}

actor AlienSpectre4Model : AlienSpectreModel
{
	//$NotAngled
	//$Color 12
	//$Category "DV-DS Strife Patch/Models"
	Tag "Ghost of Macil's Spectre"

	Health 1700
}

actor AlienSpectre5Model : AlienSpectreModel
{
	//$NotAngled
	//$Color 12
	//$Category "DV-DS Strife Patch/Models"
	Tag "Ghost of The Loremaster's Spectre"

	Health 2000
}

// Barrels
ACTOR WoodenBarrelNew : WoodenBarrel replaces WoodenBarrel
{
	var int user_type;
	Health 10
	Radius 10
	Height 32
	+SOLID
	+SHOOTABLE
	+NOBLOOD
	+INCOMBAT
	DamageFactor "Dashing", 0
	Painchance "Dashing", 0
	DeathSound "woodenbarrel/death"
	States
	{
		Spawn:
			BARW A -1
			Stop
		Death:
			BARW B 2 A_Scream
			BARW C 2
			BARW D 2 
			{
				A_NoBlocking;
				if (random(1,4) <= 1) // Chance for item to spawn at all
				{
					if (random(1,6) <= 1) // Chance to upgrade to "tier 2"
					{
						if (random(1,8) <= 1) // Chance to upgrade to "tier 3"
						{
							if (random(1,2) == 1) { A_SpawnItemEx("SpecialMedicine",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
							else { A_SpawnItemEx("ElfinElixir",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
						}
						else // Tier 2
						{
							if (random(1,2) == 1) { A_SpawnItemEx("StrongMedicine",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
							else { A_SpawnItemEx("SageElixir",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
						}
					}
					else // Tier 1
					{
						if (random(1,2) == 1) { A_SpawnItemEx("MedicinalHerb",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
						else { A_SpawnItemEx("MagicWater",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					}
				}
				else
				{
					// Money
					if (random(1,8) <= 1) 
					{
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
		
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,48); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,48); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,48); 
		
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,96); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,96); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,96); 
		
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,144); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,144); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,144); 
		
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
					}
					else
					if (random(1,16) <= 1) 
					{
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,85); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,128); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,170); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,255); 
					}
					else
					if (random(1,32) <= 1) 
					{
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,128); 
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,160); 
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,212); 
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,224); 
					}
					else
					if (random(1,64) <= 1) 
					{
						A_SpawnItemEx("Gold50Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Gold50Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
						A_SpawnItemEx("Gold50Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,248); 
						A_SpawnItemEx("Gold50Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,255); 
					}
					// Seeds
					if (random(1,32) <= 1) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,64) <= 1) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,128) <= 1) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,256) <= 1) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,512) <= 1) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,1024) <= 1) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,2048) <= 1) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,4096) <= 1) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,16384) <= 1) { A_SpawnItemEx("FloraRandomArmorAlwaysDrop",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
				}
			}
			BARW EFG 2
			BARW H -1
			Stop
	}
}

// Barrels
ACTOR WoodenBarrel2 : WoodenBarrelNew
{
	DamageFactor "Dashing", 0
	Painchance "Dashing", 0
	Translation "1:31=16:24", "192:223=208:223"
	States
	{
		Spawn:
			BARW A -1
			Stop
		Death:
			BARW B 2 A_Scream
			BARW C 2
			BARW D 2 
			{
				A_NoBlocking;
				if (random(1,4) <= 2) // Chance for item to spawn at all
				{
					if (random(1,8) <= 1) // Chance to upgrade to "tier 3"
					{
						if (random(1,2) == 1) { A_SpawnItemEx("SpecialMedicine",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
														else { A_SpawnItemEx("ElfinElixir",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
		
						if (random(1,2) == 1)
						{
							if (random(1,2) == 1) { A_SpawnItemEx("SpecialMedicine",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
															else { A_SpawnItemEx("ElfinElixir",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
						}
					}
					else
					if (random(1,6) <= 1) // Chance to upgrade to "tier 2"
					{
						if (random(1,2) == 1) { A_SpawnItemEx("StrongMedicine",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
															else { A_SpawnItemEx("SageElixir",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
		
						if (random(1,2) == 1)
						{
							if (random(1,2) == 1) { A_SpawnItemEx("StrongMedicine",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
																else { A_SpawnItemEx("SageElixir",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
						}
					}
					else // Tier 1
					{
						if (random(1,2) == 1) { A_SpawnItemEx("MedicinalHerb",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
															else { A_SpawnItemEx("MagicWater",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
		
						if (random(1,2) == 1)
						{
							if (random(1,2) == 1) { A_SpawnItemEx("MedicinalHerb",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
															else { A_SpawnItemEx("MagicWater",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
						}
					}
				}
				else
				{
					// Money
					if (random(1,64) <= 4) 
					{
						A_SpawnItemEx("Gold50Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Gold50Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
						A_SpawnItemEx("Gold50Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,248); 
						A_SpawnItemEx("Gold50Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,255); 
					}
					else
					if (random(1,32) <= 4) 
					{
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,128); 
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,160); 
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,212); 
						A_SpawnItemEx("Gold25Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,224); 
					}
					else
					if (random(1,16) <= 4) 
					{
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,85); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,128); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,170); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
						A_SpawnItemEx("Gold10Actual",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,255); 
					}
					else
					{
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); 
		
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,48); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,48); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,48); 
		
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,96); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,96); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,96); 
		
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,144); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,144); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,144); 
		
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
						A_SpawnItemEx("Coin",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,192); 
					}
	
						// Seeds
					if (random(1,32) <= 4) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,64) <= 4) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,128) <= 4) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,256) <= 4) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,512) <= 4) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,1024) <= 4) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,2048) <= 4) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,4096) <= 4) { A_SpawnItemEx("RandomSeedDropAlways",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
					if (random(1,16384) <= 4) { A_SpawnItemEx("FloraRandomArmorAlwaysDrop",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0,0,SXF_NOCHECKPOSITION,0); }
				}
			}
			BARW EFG 2
			BARW H -1
			Stop
	}
}

actor OrderCultistBase : AetheriusBaseZSC
{
	Health 1000000
	PainChance 0
	Mass 500000000
	RenderStyle "Translucent"
	Alpha 0.666
	Radius 24 // 24
	Height 56 // 56
	//Monster
	+SOLID
	+NODAMAGE
	+NOBLOOD
	+NEVERTARGET
	+NOGRAVITY
	+FLOAT
	+SHADOW
	+NOTDMATCH
	+DONTMORPH
	+NOBLOCKMONST
	+LOOKALLAROUND
	+NOICEDEATH
	+NOFEAR
	-SPECTRAL
	+FLOATBOB
	States
	{
		Spawn:
			TNT1 A 0 NoDelay // 
			TNT1 A 0 A_JumpIf(CallACS("CheckCharacterClass") == 2,"Check1")
			TNT1 A 0 A_FadeOut(1.0)
			stop
		Check1:
			TNT1 A 0 A_JumpIfInventory("BestEndingFlag",1,"StickAround",AAPTR_PLAYER1)
			TNT1 A 0 A_FadeOut(1.0)
			stop
		StickAround:
			ORCU CCCCCCCCC 4
			{
				A_FadeIn(0.03,0);
				if (CountInv("TalkToTeiytenth",AAPTR_PLAYER1)) { return state("Death"); }
				return state("");
			}
			ORCU CCCCCCCCC 4
			{
				A_FadeOut(0.03,0);
				if (CountInv("TalkToTeiytenth",AAPTR_PLAYER1)) { return state("Death"); }
				return state("");
			}
			loop
		Death:
			ORCU C 4
			{
				A_FadeOut(0.03,FTF_REMOVE|FTF_CLAMP);
			}
			loop
	}
}

actor TalkToTeiytenth : PlaceholderItem 
{ 
 +INVENTORY.KEEPDEPLETED
 Inventory.MaxAmount 1
}

ACTOR ExplosiveBarrel2New : ExplosiveBarrel2 replaces ExplosiveBarrel2
{
	Tag "Explosive Barrel"
	+PUSHABLE
	DamageType "Explosive"
	DamageFactor "Dashing", 0
	Painchance "Dashing", 0
	States
	{
		Spawn:
			BART A -1
			Stop
		Death:
			BART B 2 Bright A_Scream
			BART CD 2 Bright
			BART E 2 Bright A_NoBlocking
			BART F 2 Bright A_Explode(64,64,XF_HURTSOURCE, true,0,0, 10,"BulletPuff","Explosive")
			BART GHIJ 2 Bright
			BART K 3 Bright
			BART L -1
			Stop
	}
}