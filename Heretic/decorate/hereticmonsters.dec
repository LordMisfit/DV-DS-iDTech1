// Heretic Monsters

// EggFX
ACTOR EggFXNew : EggFX replaces EggFX
{
  Radius 8
  Height 8
  Speed 18
  MorphProjectile.PlayerClass "ChickenPlayer"
  MorphProjectile.MonsterClass "Chicken"
  MorphProjectile.MorphStyle MRF_UNDOBYTOMEOFPOWER|MRF_UNDOBYCHAOSDEVICE
  States
  {
  Spawn:
    EGGM ABCDE 4
    Loop
  Death:
    FX01 FFGH 3 Bright
    Stop
  }
}

ACTOR ChickenNew : AetheriusMorphedMonster replaces Chicken
{
  Health 10
  Radius 9
  Height 22
  Mass 40
  Speed 4
  Painchance 200
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Normal", 0.5
  DamageFactor "Crush", 32
  Monster
  -COUNTKILL
  +WINDTHRUST
  +DONTMORPH
  +FLOORCLIP
  SeeSound "chicken/pain"
  AttackSound "chicken/attack"
  PainSound "chicken/pain"
  DeathSound "chicken/death"
  ActiveSound "chicken/active"
  Obituary "$OB_CHICKEN"
  States
  {
  Spawn:
    CHKN A 0 NoDelay 
    CHKN AB 10 A_Look
    goto Spawn+1
  See:
    CHKN A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    CHKN AB 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    CHKN A 8 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    CHKN C 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_MonsterCrisisCheck;
	 A_CustomMeleeAttack(random[ChicAttack](1,2));
	}
    Goto See
  Pain:
    CHKN D 5 A_Feathers
    CHKN C 5 A_Pain
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    CHKN E 6 A_Scream
    CHKN F 6 A_Feathers
    CHKN G 6
    CHKN H 6 A_NoBlocking
    CHKN IJK 6 
    CHKN L -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    IMPX G 5 A_GenericFreezeDeath
    IMPX G 1 A_FreezeDeathChunks
    wait
  }
}
actor FChicken : ChickenNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

actor HereticImpNew : AetheriusMonsterZSC // replaces HereticImp
{ 
  Health 40
  Radius 16
  Height 36
  Mass 50
  Speed 10
  PainChance 200
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 10
  Monster
  +FLOAT
  +NOGRAVITY
  +SPAWNFLOAT
  +DONTOVERLAP
  +MISSILEMORE
  +DONTHARMSPECIES
  Species "Gargoyle"
  Damage (0)
  SeeSound "himp/sight"
  AttackSound "himp/attack"
  PainSound "himp/pain"
  DeathSound "himp/death"
  ActiveSound "himp/active"
  Obituary "$OB_HERETICIMP"
  HitObituary "$OB_HERETICIMPHIT"

 states
 {
  Spawn:
    IMPX A 0 NoDelay 
    IMPX ABCB 10 A_Look
    goto Spawn+1
  See:
    IMPX A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    IMPX AABBCCBB 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    IMPX DE 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    IMPX F 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }

	 A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random[ImpMeAttack](5,12), "himp/attack", "himp/attack");
	}
    Goto See
  Missile:
    IMPX A 0
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 300) { A_SetUserVar("user_chargechance",70); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 280) { A_SetUserVar("user_chargechance",67); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 260) { A_SetUserVar("user_chargechance",64); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetUserVar("user_chargechance",61); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 220) { A_SetUserVar("user_chargechance",58); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetUserVar("user_chargechance",55); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetUserVar("user_chargechance",52); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetUserVar("user_chargechance",49); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 140) { A_SetUserVar("user_chargechance",46); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_chargechance",43); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetUserVar("user_chargechance",40); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetUserVar("user_chargechance",37); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetUserVar("user_chargechance",34); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetUserVar("user_chargechance",31); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetUserVar("user_chargechance",28); }
	 else { A_SetUserVar("user_chargechance",25); }

	 if (random(1,100) > user_chargechance) { return state("See"); }
	 else 
	 { 
	  if (AAPTR_TARGET == AAPTR_NULL) { return state("See"); }
	  return state("");
	 }
	 return state("");
	}
  Charge:
    IMPX A 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    IMPX B 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }

	 // A_ImpMsAttack; Emulation
	 SetDamage(((0+(user_monsterlevel/45))*random(1,8)));
	 A_MonsterCrisisCheck;
	 if(user_canusecrisisatk == 1) 
	 { 
	  if (user_monsterlevel >= 45) { A_PlayCrisisAtkSound; } 
	  SetDamage((((0+(user_monsterlevel/45))*random(1,8))*CallACS("CrisisMultiplier"))); 
	 } 
     A_SkullAttack(12+(user_monsterlevel/random(22,23)));
	}
    IMPX CBAB 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
     ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
	}
    Goto Charge+2
  Pain:
    IMPX G 3
    IMPX G 3 A_Pain
    Goto See
  Pain.Fist:
    IMPX G 3
    IMPX G 3 A_Pain
    IMPX GG 3
    Goto See
  Pain.Kick:
    IMPX G 3
    IMPX G 3 A_Pain
    IMPX GGGG 3
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    IMPX G 4 A_ImpDeath
    IMPX H 5 
    Wait
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    IMPX S 5 A_ImpXDeath1
    IMPX TU 5
    IMPX V 5 A_Gravity
    IMPX W 5 
    Wait
  Crash:
    IMPX I 7 A_ImpExplode
    IMPX J 7 A_Scream
    IMPX K 7
    IMPX L -1
    Stop
  XCrash:
    IMPX X 7
    IMPX Y 7
    IMPX Z -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    IMPX G 5 A_GenericFreezeDeath
    IMPX G 1 A_FreezeDeathChunks
    wait
  Raise:
    IMPX H 5 
    IMPX G 4
    goto See
 }
}
actor FHereticImp : HereticImpNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

ACTOR HereticImpBallNew : HereticImpBall replaces HereticImpBall 
{ 
  Damage (1 * random(1,8))
  Radius 8
  Height 8
  Speed 10
  FastSpeed 20
  DamageType "Fire" 
  DamageType "Magic" 
  Projectile
  SeeSound "himp/leaderattack"
  +SPAWNSOUNDSOURCE
  -ACTIVATEPCROSS
  -ACTIVATEIMPACT
  RenderStyle Add
  States
  {
  Spawn:
    FX10 AAABBBCCC 2 Bright
	{
	}
    Loop
  Death:
    FX10 DEFG 5 Bright
    Stop
  }
}
actor HereticImpBallCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX10 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AAABBCC 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR HereticImpBallCrisis : HereticImpBallNew
{ 
  Damage ((1 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FX10 AAABBBCCC 2 Bright
	{
     A_SpawnItemEx("HereticImpBallCrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    FX10 DEFG 5 Bright
    Stop
  }
}

actor HereticImpLeaderNew : HereticImpNew // replaces HereticImpLeader
{
 Health 80
 Painchance 150
 Painchance "Fist", 225 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 225 // Fist attacks have a +50% chance of stunning an enemy
 DamageFactor "Crush", 10
 Species "Gargoyle"
 -MISSILEMORE
 +DONTHARMSPECIES
 AttackSound "himp/leaderattack"
 Translation "141:141=144:144", "145:160=145:153", "248:254=248:251", "66:94=66:80", "95:110=95:103"

 states
 {
  Melee:
    Stop
  Missile:
    IMPX D 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    IMPX DE 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    IMPX F 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }

	 A_MonsterCrisisCheck;
	 A_CrisisComboAttack("HereticImpBallNew", "HereticImpBallCrisis", 32, random[ImpMsAttack2](5,12), "himp/leaderattack");
	}
    Goto See
 }
}
actor FHereticImpLeader : HereticImpLeaderNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

// Plague Gargoyle
ACTOR PlagueImp : HereticImpLeaderNew 31026
{  
  Health 120
  DamageFactor "Crush", 7.6
  Translation "145:168=225:240", "255:248=0:0"
  Scale 1
  Painchance 160
  Painchance "Fist", 240 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 240 // Fist attacks have a +50% chance of stunning an enemy
  +DONTHARMSPECIES
  Species "Gargoyle"
  Obituary "%o was poisoned by a plague gargoyle"
  HitObituary "%o was ripped up by a plague gargoyle"

  States
  {
  Spawn:
    IMPX A 0 NoDelay 
    IMPX ABCB 10 A_Look
    goto Spawn+1
  See:
    IMPX A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    IMPX AABBCCBB 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    IMPX DE 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    IMPX F 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }

	 A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random[ImpMeAttack](6,14), "himp/attack", "himp/attack");
	}
    Goto See
  Missile:
    IMPX DE 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    IMPX F 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("PlagueShot", "PlagueShotCrisis", 32, 0, random(-6,6));
	}
    Goto See
  Pain:
    IMPX G 3
    IMPX G 3 A_Pain
    Goto See
  Pain.Fist:
    IMPX G 3
    IMPX G 3 A_Pain
    IMPX GG 3
    Goto See
  Pain.Kick:
    IMPX G 3
    IMPX G 3 A_Pain
    IMPX GGGG 3
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    IMPX G 4 A_ImpDeath
    IMPX H 5 
    Wait
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    IMPX S 5 A_ImpXDeath1
    IMPX TU 5
    IMPX V 5 A_Gravity
    IMPX W 5 
    Wait
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    IMPX G 5 A_GenericFreezeDeath
    IMPX G 1 A_FreezeDeathChunks
    wait
  Crash:
    IMPX I 0 A_ChangeFlag("NOGRAVITY",0)
    IMPX I 0 A_SpawnItemEx("HereticImpChunk1", 0, 0, 0, random(-4,4), random(-4,4), 9, 0, SXF_TRANSFERTRANSLATION + SXF_NOCHECKPOSITION, 0)
    IMPX I 0 A_SpawnItemEx("HereticImpChunk2", 0, 0, 0, random(-4,4), random(-4,4), 9, 0, SXF_TRANSFERTRANSLATION + SXF_NOCHECKPOSITION, 0)
    IMPX I 7 
    IMPX J 7 A_Scream
    IMPX K 7
    IMPX L -1
    Stop
  XCrash:
    IMPX X 7 
    IMPX Y 7
    IMPX Z -1
    Stop
  Raise:
    IMPX L 0  
    IMPX L 0 A_RemoveChildren
    IMPX LKJIHG 6
    Goto See
  }
}

ACTOR PlagueShot : AetheriusEffectProjectile
{
  Damage (3*random(3,5))
  Radius 8
  Height 16
  Speed 16
  PROJECTILE
  +THRUGHOST
  scale 0.5
  SeeSound "himp/leaderattack"
  DeathSound "monster/plaugeBall"
   
  States
  {
  Spawn:
    FVUL AAABBB 1 Bright
	{
	}
    loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",8);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,16,random(140,210)); // Poison for 4-6 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    FVUL CDEF 4 Bright
    stop
  }
}
actor PlagueShotCrisisParticle : BaseCrisisParticle
{
 scale 0.334
 
 States
 {
  Spawn:
    FVUL A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AAABBB 1 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR PlagueShotCrisis : PlagueShot
{
  Damage ((3*random(3,5)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FVUL AAABBB 1 Bright
	{
     A_SpawnItemEx("PlagueShotCrisisParticle",0,0,0,0,0,1.28);
	}
    loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",8);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,16, (random(140,210)*CallACS("CrisisMultiplier",5)) ); // Poison for 4-6 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    FVUL CDEF 4 Bright
    stop
  }
}

// Dark/Watcher Gargoyle
ACTOR WatcherImp : HereticImpNew 
{
  Health 120
  Radius 16
  Height 36
  Mass 50
  Speed 15
  scale 1.2
  Monster
  +FLOAT
  +NOGRAVITY
  +SPAWNFLOAT
  +DONTOVERLAP
  +MISSILEMORE
  SeeSound "himp/sight"
  AttackSound "himp/attack"
  PainSound "himp/pain"
  DeathSound "himp/death"
  ActiveSound "himp/active"
  Obituary "%o was burnt by a Watcher Gargoyle."
  HitObituary "%o was slashed by a Watcher Gargoyle."

  DamageFactor "Fire", 0.5
  DamageFactor "Crush", 7.6
  PainChance 50
  Painchance "Fire", 25 // Fire attacks have a -50% chance of stunning an enemy
  Painchance "Fist", 75 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 125 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 75 // Fist attacks have a +50% chance of stunning an enemy
  +DONTHARMSPECIES
  Species "Gargoyle"
  
  States
  {
  Spawn:
    WATC A 0 NoDelay 
    WATC ABCB 10 A_Look
    goto Spawn+1
  See:
    WATC A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    WATC AABBCCBB 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    WATC DE 4 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }
	 A_FaceTarget;
	}
    WATC F 4 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }

	 A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random[ImpMeAttack](7,14), "himp/attack");
	}
    WATC "[\" 4 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }
	 A_FaceTarget;
	}
    WATC ] 4 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }

	 A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random[ImpMeAttack](7,14), "himp/attack");
	}
    Goto See

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
	WATC D 0
	{
     A_SetUserVar("user_firevolleys",0);
	 A_SetUserVar("user_firevolleymax",random(2,3));
	 if (random(1,16) == 1) { A_SetUserVar("user_firevolleymax",user_firevolleymax*4); }
	}
    WATC D 0 BRIGHT A_Jump(85,"Beastball")	
  MissileLoop:
    WATC DE 4 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }
	 A_FaceTarget;
	}
    WATC F 4 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }

	 A_MonsterCrisisCheck;
	 A_CrisisComboAttack("HereticImpBall2", "HereticImpBall2Crisis", 28, 14, "himp/leaderattack");
	}
    WATC "[\" 4 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }
	 A_FaceTarget;
	}
    WATC ] 4 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }

	 A_MonsterCrisisCheck;
	 A_CrisisComboAttack("HereticImpBall2", "HereticImpBall2Crisis", 28, 14, "himp/leaderattack");
	}
	WATC ] 0 BRIGHT
	{
	 A_SetUserVar("user_firevolleys",user_firevolleys+1);
	 if (user_firevolleys >= user_firevolleymax) { return state("See"); }
	 return state("");
	}
    loop
  Beastball:
    WATC DE 6 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    WATC F 6 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }

	 A_MonsterCrisisCheck;
	 A_CrisisComboAttack("BeastBall2", "BeastBall2Crisis", 28, random[BeastAttack](1,8)*3, "beast/attack");
	}
    Goto See
  Pain:
    WATC G 3
    WATC G 3 A_Pain
    Goto See
  Pain.Fist:
    WATC G 3
    WATC G 3 A_Pain
    WATC GG 3
    Goto See
  Pain.Kick:
    WATC G 3
    WATC G 3 A_Pain
    WATC GGGG 3
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 
    WATC G 4 A_ImpDeath
    WATC H 5
    Wait
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 
    WATC S 5 A_ImpXDeath1
    WATC TU 5
    WATC V 5 A_Gravity
    WATC W 5 
    Wait
  Crash:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 
    WATC I 7 A_ImpExplode
    WATC J 7 A_Scream
    WATC K 7
    WATC L -1
    Stop
  XCrash:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 
    WATC X 7
    WATC Y 7
    WATC Z -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    WATC G 5 A_GenericFreezeDeath
    WATC G 1 A_FreezeDeathChunks
    wait
  Raise:
    WATC H 5 
    WATC G 4
    goto See
  }
}

Actor HereticImpBall2 : HereticImpBallNew
{
  Damage (1 * random(1,8))
  States
  {
  Spawn:
	HIB1 AAABBBCCC 2 Bright
	{
	}
	Loop
  Death:
	HIB1 DEFG 5 Bright
	Stop
  }
}
actor HereticImpBall2CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    HIB1 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AAABBCC 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
Actor HereticImpBall2Crisis : HereticImpBall2
{
  Damage ((1 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
	HIB1 AAABBBCCC 2 Bright
	{
     A_SpawnItemEx("HereticImpBall2CrisisParticle",0,0,0,0,0,1.28);
	}
	Loop
  Death:
	HIB1 DEFG 5 Bright
	Stop
  }
}

ACTOR BeastBallNew : BeastBall replaces BeastBall 
{ 
  Damage (4 * random(1,8))
  DamageType "Fire" 
  Radius 9
  Height 8
  Speed 12
  FastSpeed 20
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  -NOBLOCKMAP
  +WINDTHRUST
  +SPAWNSOUNDSOURCE
  RenderStyle Add
  SeeSound "beast/attack"
  States
  {
  Spawn:
    FRB1 AABBCC 2 
	{
	 A_SpawnItemEx("Puffy", random2[BeastPuff]()*0.015625, random2[BeastPuff]()*0.015625,random2[BeastPuff]()*0.015625, 0, 0, 0, 0, SXF_ABSOLUTEPOSITION, 64);
	}
    Loop
  Death:
    FRB1 DEFGH 4
    Stop
  }
}
actor BeastBallCrisisParticle : BaseCrisisParticle
{
 scale 0.667
 
 States
 {
  Spawn:
    FRB1 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AABBCC 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR BeastBallCrisis : BeastBallNew
{ 
  Damage ((4 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FRB1 AABBCC 2 
	{
	 A_SpawnItemEx("BeastBallCrisisParticle",0,0,0,0,0,1.28);
	 A_SpawnItemEx("Puffy", random2[BeastPuff]()*0.015625, random2[BeastPuff]()*0.015625,random2[BeastPuff]()*0.015625, 0, 0, 0, 0, SXF_ABSOLUTEPOSITION, 64);
	}
    Loop
  Death:
    FRB1 DEFGH 4
    Stop
  }
}
Actor Beastball2 : BeastBallNew
{
 Damage (4 * random(1,8))
 DamageType "Fire" 

 States
 {
  Spawn:
	FRB1 AABBCC 2 
	{
	 A_SpawnItemEx("Puffy", random2[BeastPuff]()*0.015625, random2[BeastPuff]()*0.015625, random2[BeastPuff]()*0.015625,0,0,0,0,SXF_ABSOLUTEPOSITION, 64);
	}
	Loop
  Death:
	HIB2 DEFGH 4
	Stop
 }
}
actor Beastball2CrisisParticle : BaseCrisisParticle
{
 scale 0.667
 
 States
 {
  Spawn:
    FRB1 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AABBCC 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
Actor Beastball2Crisis : Beastball2
{
 Damage ((4 * random(1,8)) )

 States
 {
  Spawn:
	FRB1 AABBCC 2 
	{
     A_SpawnItemEx("Beastball2CrisisParticle",0,0,0,0,0,1.28);
	 A_SpawnItemEx("Puffy", random2[BeastPuff]()*0.015625, random2[BeastPuff]()*0.015625, random2[BeastPuff]()*0.015625,0,0,0,0,SXF_ABSOLUTEPOSITION, 64);
	}
	Loop
  Death:
	HIB2 DEFGH 4
	Stop
 }
}

actor MummyNew : AetheriusMonsterZSC // replaces Mummy
{
  Health 80
  Radius 22
  Height 62
  Mass 75
  Speed 12
  Painchance 128
  Painchance "Fist", 192 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 192 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 8
  Species "Golem"
  Monster
  +FLOORCLIP
  +DONTHARMSPECIES
  SeeSound "mummy/sight"
  AttackSound "mummy/attack1"
  PainSound "mummy/pain"
  DeathSound "mummy/death"
  ActiveSound "mummy/active"
  HitObituary "%o was smashed by a golem."
  DropItem "GoldWandAmmo", 84, 3

 states
 {
  Spawn:
    MUMM A 0 NoDelay 
    MUMM AB 10 A_Look
    goto Spawn+1
  See:
    MUMM A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    MUMM ABCD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    MUMM E 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    MUMM F 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;

	 A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random[MummyAttack](1,8)*2, "mummy/attack2", "mummy/attack");
	}
    MUMM G 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    Goto See
  Pain:
    MUMM H 4
    MUMM H 4 A_Pain
    Goto See
  Pain.Fist:
    MUMM H 4
    MUMM H 4 A_Pain
    MUMM HH 4
    Goto See
  Pain.Kick:
    MUMM H 4
    MUMM H 4 A_Pain
    MUMM HHHH 4
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    MUMM I 5
    MUMM J 5 A_Scream
    MUMM K 5 A_SpawnItemEx("MummySoul", 0, 0, 10, 0, 0, 1)
    MUMM L 5
    MUMM M 5 A_NoBlocking
    MUMM NO 5 
    MUMM P -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    MUMM H 5 A_GenericFreezeDeath
    MUMM H 1 A_FreezeDeathChunks
    wait
  Raise:
    MUMM O 5 
    MUMM NMLKJI 5
    goto See
 }
}
actor FMummy : MummyNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

actor MummyGhostNew : MummyNew // replaces MummyGhost
{
 +SHADOW
 +GHOST
 RenderStyle Translucent
 Alpha 0.4

 states
 {
  Spawn:
    MUMM A 0 NoDelay 
    MUMM AB 10 A_Look
    goto Spawn+1
  See:
    MUMM A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    MUMM ABCD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    MUMM E 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    MUMM F 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;

	 A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random[MummyAttack](1,8)*2, "mummy/attack2", "mummy/attack");
	}
    MUMM G 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    Goto See
  Pain:
    MUMM H 4
    MUMM H 4 A_Pain
    Goto See
  Pain.Fist:
    MUMM H 4
    MUMM H 4 A_Pain
    MUMM HH 4
    Goto See
  Pain.Kick:
    MUMM H 4
    MUMM H 4 A_Pain
    MUMM HHHH 4
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    MUMM I 5
    MUMM J 5 A_Scream
    MUMM K 5 A_SpawnItemEx("MummySoul", 0, 0, 10, 0, 0, 1)
    MUMM L 5
    MUMM M 5 A_NoBlocking
    MUMM NO 5 
    MUMM P -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    MUMM H 5 A_GenericFreezeDeath
    MUMM H 1 A_FreezeDeathChunks
    wait
  Raise:
    MUMM O 5 
    MUMM NMLKJI 5
    goto See
 }
}
actor FMummyGhost : MummyGhostNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

ACTOR MummyFX1New : MummyFX1 replaces MummyFX1 
{
  Damage (4 * random(1,8))
  DamageType "Fire" 
  DamageType "Magic" 
}
actor MummyFX1CrisisParticle : BaseCrisisParticle
{ 
 States
 {
  Spawn:
    FX15 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AABBCCBB 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR MummyFX1Crisis : MummyFX1New
{
  Damage ((4 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FX15 A 5 Bright 
	{
     A_SpawnItemEx("MummyFX1CrisisParticle",0,0,0,0,0,1.28);
	 A_PlaySound("mummy/head");
	}
    FX15 B 5 Bright 
	{
     A_SpawnItemEx("MummyFX1CrisisParticle",0,0,0,0,0,1.28);
	 A_SeekerMissile(10, 20);
	}
    FX15 C 5 Bright
	{
     A_SpawnItemEx("MummyFX1CrisisParticle",0,0,0,0,0,1.28);
	}
    FX15 B 5 Bright 
	{
     A_SpawnItemEx("MummyFX1CrisisParticle",0,0,0,0,0,1.28);
	 A_SeekerMissile(10, 20);
	}
    Loop
  Death:
    FX15 DEFG 5 Bright
    Stop
  }
}
actor MummyLeaderNew : AetheriusMonsterZSC // replaces MummyLeader
{
  Health 100
  Radius 22
  Height 62
  Mass 75
  Speed 12
  PainChance 64
  Painchance "Fist", 96 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 160 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 96 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 8
  Species "Golem"
  Monster
  +FLOORCLIP
  +DONTHARMSPECIES
  SeeSound "mummy/sight"
  AttackSound "mummy/attack1"
  PainSound "mummy/pain"
  DeathSound "mummy/death"
  ActiveSound "mummy/active"
  Obituary "$OB_MUMMYLEADER"
  HitObituary "%o was smashed by a golem."
  DropItem "GoldWandAmmo", 84, 3

 states
 {
  Spawn:
    MUMA A 0 NoDelay 
    MUMA AB 10 A_Look
    goto Spawn+1
  See:
    MUMA A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    MUMA ABCD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    MUMM E 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    MUMM F 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	 A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random[MummyAttack](1,8)*2, "mummy/attack2", "mummy/attack");
	}
    MUMM G 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    Goto See
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    MUMA X 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA Y 5 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA X 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA Y 5 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA X 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA Y 5 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	 A_MonsterCrisisCheck;
	 A_CrisisComboAttack("MummyFX1", "MummyFX1Crisis", 32, random[MummyAttack2](1,8)*2, "mummy/attack2");
	}
    Goto See
  Pain:
    MUMA H 4
    MUMA H 4 A_Pain
    Goto See
  Pain.Fist:
    MUMA H 4
    MUMA H 4 A_Pain
    MUMA HH 4
    Goto See
  Pain.Kick:
    MUMA H 4
    MUMA H 4 A_Pain
    MUMA HHHH 4
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    MUMM I 5
    MUMM J 5 A_Scream
    MUMM K 5 A_SpawnItemEx("MummySoul", 0, 0, 10, 0, 0, 1)
    MUMM L 5
    MUMM M 5 A_NoBlocking
    MUMM NO 5 
    MUMM P -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    MUMA H 5 A_GenericFreezeDeath
    MUMA H 1 A_FreezeDeathChunks
    wait
  Raise:
    MUMM O 5 
    MUMM NMLKJI 5
    goto See
 }
}
actor FMummyLeader : MummyLeaderNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

actor MummyLeaderGhostNew : MummyLeaderNew // replaces MummyLeaderGhost
{
  +SHADOW
  +GHOST
  RenderStyle Translucent
  Alpha 0.4
  
 states
 {
  Spawn:
    MUMA A 0 NoDelay 
    MUMA AB 10 A_Look
    goto Spawn+1
  See:
    MUMA A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    MUMA ABCD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    MUMA E 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    MUMA F 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	 A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random[MummyAttack](1,8)*2, "mummy/attack2", "mummy/attack");
	}
    MUMA G 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    Goto See
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    MUMA X 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA Y 5 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA X 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA Y 5 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA X 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    MUMA Y 5 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	 A_MonsterCrisisCheck;
	 A_CrisisComboAttack("MummyFX1", "MummyFX1Crisis", 32, random[MummyAttack2](1,8)*2, "mummy/attack2");
	}
    Goto See
  Pain:
    MUMA H 4
    MUMA H 4 A_Pain
    Goto See
  Pain.Fist:
    MUMA H 4
    MUMA H 4 A_Pain
    MUMA HH 4
    Goto See
  Pain.Kick:
    MUMA H 4
    MUMA H 4 A_Pain
    MUMA HHHH 4
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    MUMM I 5
    MUMM J 5 A_Scream
    MUMM K 5 A_SpawnItemEx("MummySoul", 0, 0, 10, 0, 0, 1)
    MUMM L 5
    MUMM M 5 A_NoBlocking
    MUMM NO 5 
    MUMM P -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    MUMA H 5 A_GenericFreezeDeath
    MUMA H 1 A_FreezeDeathChunks
    wait
  Raise:
    MUMM O 5 
    MUMM NMLKJI 5
    goto See
 }
}
actor FMummyLeaderGhost : MummyLeaderGhostNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

// Ice Golem
Actor IceGolem : AetheriusMonsterZSC
{
  Health 450
  Radius 22
  Height 62
  Mass 900
  Speed 16
  Painchance 32
  Painchance "Fire", 56 // Fire attacks have a +80% chance of stunning an enemy
  Painchance "Ice", 11 // Ice attacks have a -67% chance of stunning an enemy
  Painchance "Fist", 48 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 80 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 48 // Fist attacks have a +50% chance of stunning an enemy
  RadiusDamageFactor 0.625
  DamageFactor "Crush", 5.6
  DamageFactor "Normal", 0.925
  DamageFactor "Fire", 1.8
  DamageFactor "Ice", 0.334
  Monster
  +FloorClip
  +NoBlood
  +DONTHARMSPECIES
  RenderStyle Translucent
  Alpha 0.8
  Scale 1.0
  SeeSound "mummy/sight"
  AttackSound "mummy/attack1"
  PainSound "mummy/pain"
  ActiveSound "mummy/active"
  HitObituary "%o was bludgeoned by an ice golem"
  Species "Golem"
  var int user_HalfMaxHP;
  var int user_regenchance;

  States
  {
  Spawn:
    IGLM A 0 NoDelay 
    IGLM AB 10 A_Look
    goto Spawn+1
  See:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    IGLM ABCD 5
	{
	 A_SetUserVar("user_HalfMaxHP",user_MaxHP/2);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(4); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_Chase;
	 
	 if (health <= user_HPCritRange) { user_regenchance = 32; }
	 else if (health <= user_HPLowRange) { user_regenchance = 8; }
	 else if (health <= user_HalfMaxHP) { user_regenchance = 4; }
	 else if (health <= user_MaxHP) { user_regenchance = 2; }

	 if (random(1,256) <= user_regenchance) 
	 {
	  return state("RegenerateStart"); 
	 }
	 return state("");
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    IGLM E 0 A_Jump(128, "Melee2")
    IGLM E 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    IGLM F 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;

     A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(Random(15,27)*3, "mummy/attack2", "mummy/attack");
	}
    IGLM G 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    Goto See
  Melee2:
    IGLM H 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    IGLM I 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;

     A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(Random(15,27)*3, "mummy/attack2", "mummy/attack");
	}
    IGLM J 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    Goto See
  RegenerateStart:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    IGLM K 10
	{
	 A_SetUserVar("user_regencyclemax",10);
     A_PlayWeaponSound("misc/freeze");
     A_ChangeFlag("CANTSEEK",1);
     A_ChangeFlag("NOPAIN",1);
     A_ChangeFlag("NOTHRUST",1);
     A_GiveInventory("IceGolemArmor",1);
	}
  Regenerate:
    IGLM K 0 { if (health < user_MaxHP) { HealThing((user_MaxHP/random(18,22))); A_SetUserVar("user_regencycles",user_regencycles+1); } else { return state("RegenerateEnd"); } return state(""); }
    IGLM KKKKKKKKKK 1 A_SpawnItemEx("IceGolemParticleA", Random(24, 32), 0, 4, 0, 0, (Random(20, 35)*0.1), Random(0, 360), 128)
  RegenerateCheck:
    IGLM K 0
	{
	 if (user_regencycles < user_regencyclemax) { return state("Regenerate"); }
	 if (health < user_MaxHP)
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_regencycles",0); return state("Regenerate"); }
	  return state("");
	 }
	 return state("");
	}
  RegenerateEnd:
    IGLM K 0
    {
	 A_SetUserVar("user_regencycles",0);
	 A_SetUserVar("user_regencyclemax",0);
     A_ChangeFlag("CANTSEEK",0);
	 A_ChangeFlag("NOPAIN",0);
     A_ChangeFlag("NOTHRUST",0);
     A_TakeInventory("IceGolemArmor",0x7FFFFFFF);
	}
    Goto See
  Pain:
    IGLM L 4
    IGLM L 4 A_Pain
    Goto See
  Pain.Fist:
    IGLM L 4
    IGLM L 4 A_Pain
    IGLM LL 4
    Goto See
  Pain.Kick:
    IGLM L 4
    IGLM L 4 A_Pain
    IGLM LLLL 4
    Goto See
  Pain.Fire:
    IGLM L 4
    IGLM L 4 A_Pain
    IGLM L 4
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 
    IGLM L 12
    IGLM L 0 A_SetTranslucent(1.0, 0)
    IGLM L 1 A_IceGuyDie
    Stop
  }
}

Actor IceGolemGhost : IceGolem
{
  +SHADOW
  +GHOST
  RenderStyle Translucent
  Alpha 0.32
}

Actor IceGolemArmor : PowerProtection
{
 damagefactor "normal", 0.01 
 inventory.icon ""
 Powerup.Duration 2147483646
}

Actor IceGolemParticleA
{
  Height 0
  Radius 0
  Mass 0
  +Missile
  +NoBlockMap
  +NoGravity
  +DontSplash
  +NoClip
  RenderStyle Add
  Scale 0.0275
  States
  {
  Spawn:
    IGLP A 0 A_SpawnItemEx("IceGolemParticleTrail", -(MomX*1.2), -(MomY*1.2), (MomZ*-1.2), (MomX*0.8), (MomY*0.8), (MomZ*0.8), -Angle, 138)
    IGLP A 1 A_FadeOut(0.065)
    Loop
  }
}

Actor IceGolemParticleTrail : IceGolemParticleA
{
  States
  {
  Spawn:
    IGLP A 1 A_FadeOut(0.075)
    Loop
  }
}


ACTOR KnightAxeNew : AetheriusProjectileZSC replaces KnightAxe 
{
  Damage (2 * random(1,8))
  DamageType "Magic" 
  Radius 10
  Height 8
  Speed 9
  FastSpeed 18
  Projectile
  -NOBLOCKMAP
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  +WINDTHRUST
  +THRUGHOST
  DeathSound "hknight/hit"
  States
  {
  Spawn:
    SPAX A 3 Bright
	{
	 A_PlaySound("hknight/axewhoosh");
	}
    SPAX BC 3 Bright
	{
	}
    Loop
  Death:
    SPAX DDEEFF 3 Bright
    Stop
  } 
}
actor KnightAxeCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    SPAX A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABC 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR KnightAxeCrisis : KnightAxeNew 
{
  Damage ((2 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    SPAX A 3 Bright
	{
     A_SpawnItemEx("KnightAxeCrisisParticle",0,0,0,0,0,1.28);
	 A_PlaySound("hknight/axewhoosh");
	}
    SPAX BC 3 Bright
	{
     A_SpawnItemEx("KnightAxeCrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    SPAX DDEEFF 3 Bright
    Stop
  } 
}

ACTOR RedAxeNew : KnightAxeNew replaces RedAxe 
{
  Damage (7 * random(1,8))
  +NOBLOCKMAP
  -WINDTHRUST

  States
  {
  Spawn:
    RAXE AA 2 Bright 
	{
	}
    RAXE A 1 Bright 
	{
	 A_DripBlood;
	}
    RAXE BB 2 Bright 
	{
	}
    RAXE B 1 Bright 
	{
	 A_DripBlood;
	}
    Loop
  Death:
    RAXE CDE 6 Bright
    Stop
  }
}
actor RedAxeCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    RAXE A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AABB 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR RedAxeCrisis : RedAxeNew 
{
  Damage ((7 * random(1,8)) * CallACS("CrisisMultiplier"))
  +NOBLOCKMAP
  -WINDTHRUST

  States
  {
  Spawn:
    RAXE AA 2 Bright 
	{
     A_SpawnItemEx("RedAxeCrisisParticle",0,0,0,0,0,1.28);
	}
    RAXE A 1 Bright 
	{
	 A_DripBlood;
	 A_DripBlood;
	 A_DripBlood;
	 A_DripBlood;
	}
    RAXE BB 2 Bright 
	{
     A_SpawnItemEx("RedAxeCrisisParticle",0,0,0,0,0,1.28);
	}
    RAXE B 1 Bright 
	{
	 A_DripBlood;
	 A_DripBlood;
	 A_DripBlood;
	 A_DripBlood;
	}
    Loop
  Death:
    RAXE CDE 6 Bright
    Stop
  }
}

ACTOR KnightNew : AetheriusMonsterZSC // replaces Knight
{
  Health 200
  Radius 24
  Height 78
  Mass 150
  Speed 12
  Painchance 100
  Painchance "Fist", 150 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 250 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 150 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 7.2
  Monster
  +FLOORCLIP
  SeeSound "hknight/sight"
  AttackSound "hknight/attack"
  PainSound "hknight/pain"
  DeathSound "hknight/death"
  ActiveSound "hknight/active"
  Obituary "$OB_BONEKNIGHT"
  HitObituary "$OB_BONEKNIGHTHIT"
  DropItem "CrossbowAmmo", 84, 5

  States
  {
  Spawn:
    KNIG A 0 NoDelay 
    KNIG AB 10 A_Look
    goto Spawn+1
  See:
    KNIG A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    KNIG ABCD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    KNIG E 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    KNIG F 8 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    KNIG G 8 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

	 A_MonsterCrisisCheck;
	 if (bSHADOW == 1 || random(1,256) <= 40)
	 {
      A_CrisisComboAttack("RedAxeNew", "RedAxeCrisis", 36, random[KnightAttack](1, 8) * 10, "hknight/melee");
	 }
	 else
	 {
      A_CrisisComboAttack("KnightAxeNew", "KnightAxeCrisis", 36, random[KnightAttack](1, 8) * 3, "hknight/melee");
	 }
	 // A_KnightAttack;
	}
    KNIG E 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    KNIG F 8 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    KNIG G 8 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

	 A_MonsterCrisisCheck;
	 if (bSHADOW == 1 || random(1,256) < 40)
	 {
      A_CrisisComboAttack("RedAxeNew", "RedAxeCrisis", 36, random[KnightAttack](1, 8) * 10, "hknight/melee");
	 }
	 else
	 {
      A_CrisisComboAttack("KnightAxeNew", "KnightAxeCrisis", 36, random[KnightAttack](1, 8) * 3, "hknight/melee");
	 }
	 //A_KnightAttack;
	}
    Goto See
  Pain:
    KNIG H 3
    KNIG H 3 A_Pain
    Goto See
  Pain.Fist:
    KNIG H 3
    KNIG H 3 A_Pain
    KNIG HH 3
    Goto See
  Pain.Kick:
    KNIG H 3
    KNIG H 3 A_Pain
    KNIG HHHH 3
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    KNIG I 6
    KNIG J 6 A_Scream
    KNIG K 6
    KNIG L 6 A_NoBlocking
    KNIG MN 6 
    KNIG O -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    KNIG H 5 A_GenericFreezeDeath
    KNIG H 1 A_FreezeDeathChunks
    wait
  Raise:
    KNIG N 6 
    KNIG MLKJI 6
    goto See
  }
}
actor FKnight : KnightNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}
ACTOR KnightGhostNew : KnightNew // replaces KnightGhost
{
  +SHADOW
  +GHOST
  RenderStyle Translucent
  Alpha 0.4
}

actor FKnightGhost : KnightGhostNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

// Death Knight
ACTOR DeathKnight : AetheriusMonsterZSC 30114 
{ 
  Health 1100
  Radius 24
  Height 72
  Mass 700 
  Speed 10
  MeleeDamage 10
  PainChance 20 
  Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Holy", 35 // Holy attacks have a +75% chance of stunning an enemy
  DamageFactor "Normal", 0.875
  DamageFactor "Holy", 1.75
  DamageFactor "Crush", 7.2
  MONSTER
  +FLOORCLIP 
  +NOTARGET 
  +NORADIUSDMG
  +MISSILEMORE
  +BOSS
  +DEFLECT
  +AVOIDMELEE
  +DONTHARMSPECIES
  Obituary "%o got thought %g could kill a Death Knight."
  HitObituary "A Death Knight hacked %o into pieces." 
  MeleeSound "monster/dknhit" 
  SeeSound "monster/dknsit" 
  PainSound "monster/dknpai" 
  DeathSound "monster/dkndth" 
  ActiveSound "monster/dknact" 
  Species "UndeadWarrior"

  States 
  { 
  Spawn: 
    DKNT A 0 NoDelay 
    DKNT AB 10 A_Look 
    goto Spawn+1 
  See:
    DKNT A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    DKNT A 0 A_Jump(51,"SeeShielded")
    DKNT AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_DeathKnightShieldOff;
	 A_Chase;
	}
    loop
  SeeShielded:
    DKNT P 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    DKNT PPQQRRSS 3 // A_SetReflectiveInvulnerable
	{
     A_DeathKnightShieldOn;
	 A_Chase;
	}
    DKNT S 0
	{
	 if (random(1,100) >= 20) { return state("See"); }
	 return state("");
	}
    loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    DKNT E 0 // A_UnSetReflectiveInvulnerable
	{
	 A_DeathKnightShieldOff;
	}
    DKNT E 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    DKNT F 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	 A_Playsound("monster/dknswg");
	}
    DKNT G 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

     A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(10*random(1,8), "monster/dknhit");
	}
    Goto See
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    DKNT E 0 A_Jump(88,"Attack1")
    DKNT E 0 A_Jump(88,"Attack2")
    DKNT E 0 Bright // A_UnSetReflectiveInvulnerable
	{
	 A_DeathKnightShieldOff;
	}
    DKNT E 6 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    DKNT F 6 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	 A_Playsound("monster/kntswg");
	}
    DKNT G 5 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

     A_MonsterCrisisCheck;
     A_CrisisSpawnProjectile("DKDart","DKDartCrisis",32,0,-3,0);
     A_CrisisSpawnProjectile("DKDart","DKDartCrisis",32,0,-1,0);
     A_CrisisSpawnProjectile("DKDart","DKDartCrisis",32,0,1,0);
	 A_CrisisSpawnProjectile("DKDart","DKDartCrisis",32,0,3,0);
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60)
	 {
      A_CrisisSpawnProjectile("DKDart","DKDartCrisis",32,0,-5,0);
	  A_CrisisSpawnProjectile("DKDart","DKDartCrisis",32,0,5,0);
	 }
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120)
	 {
      A_CrisisSpawnProjectile("DKDart","DKDartCrisis",32,0,-7,0);
	  A_CrisisSpawnProjectile("DKDart","DKDartCrisis",32,0,7,0);
	 }
	}
    DKNT A 0 A_Jump(64,"Attack2")
    Goto See
  Attack1:
    DKNT T 1 Bright // A_SetReflectiveInvulnerable
	{
     A_DeathKnightShieldOn;
	 A_FaceTarget;

	 A_SetUserVar("user_defendtimer",user_defendtimer+1);

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_defendtimermax",4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetUserVar("user_defendtimermax",5); }
     else { A_SetUserVar("user_defendtimermax",6); }
	 if (user_defendtimer >= user_defendtimermax) { A_SetUserVar("user_defendtimer",0); return state("Attack1Phase2"); }
	 return state("");
	}
	loop
  Attack1Phase2:
    DKNT U 1 Bright
	{
     A_DeathKnightShieldOn;
	 A_FaceTarget;
	}
  Attack1Phase3:
    DKNT U 1 Bright 
	{
     A_DeathKnightShieldOn;
	 A_FaceTarget;

	 A_SetUserVar("user_defendtimer",user_defendtimer+1);
	 if (user_defendtimer == 2) 
	 {
      A_MonsterCrisisCheck;
	  A_CrisisSpawnProjectile("FHeadShot","FHeadShotCrisis",44,-4,-12,0);
	  A_CrisisSpawnProjectile("FHeadShot","FHeadShotCrisis",44,-4,12,0);
	 }
	 
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_defendtimermax",3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetUserVar("user_defendtimermax",4); }
	 else { A_SetUserVar("user_defendtimermax",5); }
	 if (user_defendtimer >= user_defendtimermax) { A_SetUserVar("user_defendtimer",0); return state("Attack1End"); }
	 return state("");
	}
	loop
  Attack1End:
    DKNT U 0 Bright // A_UnSetReflectiveInvulnerable
	{
	 A_DeathKnightShieldOff;
	}
    DKNT U 0 A_Jump(64,"Attack2")
    Goto See
  Attack2:
    DKNT T 0 Bright // A_SetReflectiveInvulnerable
	{
     A_DeathKnightShieldOn;
	 A_FaceTarget;
	}
  Attack2Phase1: // 6 times
    DKNT T 1 Bright 
	{
     A_DeathKnightShieldOn;
	 A_FaceTarget;

	 A_SetUserVar("user_defendtimer",user_defendtimer+1);

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_defendtimermax",2); }
	 else { A_SetUserVar("user_defendtimermax",3); }
	 if (user_defendtimer >= user_defendtimermax) 
	 {
	  A_SetUserVar("user_defendtimer",0); 
	  return state("Attack2Phase2"); 
	 }
	 return state("");
	}
	loop
  Attack2Phase2: // 6 times
    DKNT U 1 Bright 
	{
     A_DeathKnightShieldOn;
	 A_FaceTarget;	 

	 A_SetUserVar("user_defendtimer",user_defendtimer+1);
	 if (user_defendtimer == 1) 
	 { 
      A_MonsterCrisisCheck;
	  A_CrisisSpawnProjectile("DKbolt","DKboltCrisis",44,-4,0,0); 
	 }

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_defendtimermax",2); }
	 else { A_SetUserVar("user_defendtimermax",3); }
	 if (user_defendtimer >= user_defendtimermax) 
	 {
	  A_SetUserVar("user_defendtimer",0); 
	  A_SetUserVar("user_defendcycles",user_defendcycles+1);
	  
	  if (user_defendcycles >= 6) { return state("Attack2End"); } else { return state("Attack2Phase1"); }
	  return state(""); 
	 }
	 return state("");
	}
	loop
  Attack2End:
    DKNT U 0 Bright // A_UnSetReflectiveInvulnerable
	{
	 A_DeathKnightShieldOff;
	 A_FaceTarget;
	}
    Goto See
  Pain:
    DKNT H 2 
    DKNT H 2 A_Pain
	goto PainShield
  Pain.Fist:
    DKNT H 2 
    DKNT H 2 A_Pain
    DKNT HH 2 
	goto PainShield
  Pain.Kick:
    DKNT H 2 
    DKNT H 2 A_Pain
    DKNT HHHH 2 
	goto PainShield

  PainShield:
    DKNT T 1 // A_SetReflectiveInvulnerable
	{
     A_DeathKnightShieldOn;
	 A_SetUserVar("user_defendtimer",user_defendtimer+1);

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetUserVar("user_defendtimermax",random(17,18)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_defendtimermax",random(16,17)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetUserVar("user_defendtimermax",random(15,16)); }
	 else { A_SetUserVar("user_defendtimermax",15); }

	 if (user_defendtimer >= user_defendtimermax)
	 {
	  A_SetUserVar("user_defendtimer",0);
	  A_SetUserVar("user_defendcycles",user_defendcycles+1);
	  if (random(1,4) == 1 && A_JumpIfTargetInsideMeleeRange("Melee"))
	  {
	   A_DeathKnightShieldOff;
	   return state("Melee");
	  }
	  A_FaceTarget;
	 }
	 if (user_defendcycles >= 7) { return state("PainShieldEnd"); }
	 return state("");
	}
	loop
  PainShieldEnd:
    DKNT T 0 // A_UnSetReflectiveInvulnerable
	{
	 A_DeathKnightShieldOff;
	 A_FaceTarget;

	 if (random(1,16) == 1) { return state("SeeShielded"); }
	 return state("");
	}
    DKNT H 1
	{
	 A_DeathKnightShieldOff;
	 A_FaceTarget;
	}
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DKNT I 0 Bright A_CustomMissile("DKSword",44,32,-90,0)
    DKNT I 8 Bright 
	{
	 if (random(1,4) == 1) { A_CustomMissile("EvilWarriorShield",44,-32,90,0); }
	 else { A_CustomMissile("DKShield",44,-32,90,0); }
	}
    DKNT J 8 Bright A_Scream 
    DKNT K 8 Bright
    DKNT L 8 Bright A_NoBlocking 
    DKNT M 8 Bright 
    DKNT N 8 Bright 
    DKNT O -1 
    Stop 
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    DKNT H 5 A_GenericFreezeDeath
    DKNT H 1 A_FreezeDeathChunks
    wait
  Raise:
    DKNT Q 8 Bright   
    DKNT NMLKJI 8 Bright
    Goto See 
  } 
}

Actor DeathKnightGhost : DeathKnight
{
  +SHADOW
  +GHOST
  RenderStyle Translucent
  Alpha 0.4
  +DONTHARMSPECIES
  Species "UndeadWarrior"
}

ACTOR DKDart
{
   Damage (5 * random(1,8))
   Radius 3
   Height 12
   Speed 25
   ExplosionDamage 64
   ExplosionRadius 64
   RENDERSTYLE ADD
   ALPHA 1.00
   PROJECTILE
   +THRUGHOST
   Seesound "monster/dkndrt"
   DeathSound "weapons/firex2"
   States
   {
   Spawn:
      DKAT ABC 3 Bright
	  {
	  }
      loop
   Death:
      DKAT D 0 Bright A_SetTranslucent (0.85,1)
      DKAT D 3 Bright
      DKAT E 3 Bright A_Explode(64,64)
      DKAT FG 3 Bright
      DKAT H 3 Bright 
	  {
       A_CustomMissile("DKFire",0,0,0,2);
	   A_CustomMissile("DKFire",0,0,45,2);
       A_CustomMissile("DKFire",0,0,90,2);
       A_CustomMissile("DKFire",0,0,135,2);
       A_CustomMissile("DKFire",0,0,180,2);
       A_CustomMissile("DKFire",0,0,225,2);
       A_CustomMissile("DKFire",0,0,270,2);
       A_CustomMissile("DKFire",0,0,315,2);
	  }
      DKAT IJKLM 3 Bright
      stop
   }
}
actor DKDartCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    DKAT A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABC 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR DKDartCrisis : DKDart
{
   Damage ((5 * random(1,8)) * CallACS("CrisisMultiplier"))
   States
   {
   Spawn:
      DKAT ABC 3 Bright
	  {
       A_SpawnItemEx("DKDartCrisisParticle",0,0,0,0,0,1.28);
	  }
      loop
   Death:
      DKAT D 0 Bright A_SetTranslucent (0.85,1)
      DKAT D 3 Bright
      DKAT E 3 Bright A_Explode(64*CallACS("CrisisMultiplier"),64)
      DKAT FG 3 Bright
      DKAT H 3 Bright 
	  {
       A_CustomMissile("DKFireCrisis",0,0,0,2);
	   A_CustomMissile("DKFireCrisis",0,0,45,2);
       A_CustomMissile("DKFireCrisis",0,0,90,2);
       A_CustomMissile("DKFireCrisis",0,0,135,2);
       A_CustomMissile("DKFireCrisis",0,0,180,2);
       A_CustomMissile("DKFireCrisis",0,0,225,2);
       A_CustomMissile("DKFireCrisis",0,0,270,2);
       A_CustomMissile("DKFireCrisis",0,0,315,2);
	  }
      DKAT IJKLM 3 Bright
      stop
   }
}

ACTOR FHeadShot
{
   Damage (10 * random(1,8))
   Radius 12
   Height 12
   Speed 15
   RENDERSTYLE ADD
   ALPHA 1.00
   PROJECTILE
   DamageType Fire
   +SEEKERMISSILE
   +THRUGHOST
   Seesound "monster/dknmsl"
   DeathSound "weapons/boom1"
   States
   {
   Spawn:
      FHED ABCD 3 Bright 
	  {
	   A_SeekerMissile(5,15);
	  }
      loop
   Death:
      RIP1 DEFGH 5 Bright
      stop
   }
}
actor FHeadShotCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FHED A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABCD 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR FHeadShotCrisis : FHeadShot
{
   Damage ((10 * random(1,8)) * CallACS("CrisisMultiplier"))
   States
   {
   Spawn:
      FHED ABCD 3 Bright 
	  {
       A_SpawnItemEx("FHeadShotCrisisParticle",0,0,0,0,0,1.28);
	   A_SeekerMissile(5,15);
	  }
      loop
   Death:
      RIP1 DEFGH 5 Bright
      stop
   }
}

ACTOR DKbolt
{
   Damage (8 * random(1,8))
   Radius 8
   Height 8
   Speed 15
   PROJECTILE
   RENDERSTYLE ADD
   ALPHA 0.80
   DamageType Fire
   +THRUGHOST
   SeeSound "Weapons/boltfi"
   DeathSound "weapons/firex4"
   States
   {
   Spawn:
      BOLT A 1 Bright 
	  {
	   A_BishopMissileWeave;
       A_SpawnItem("RedPuff",0,0);
	  }
      loop
   Death:
      HBAL EFHI 2 Bright
      stop
   }
}
actor DKboltCrisisParticle : BaseCrisisParticle
{
 ALPHA 0.536

 States
 {
  Spawn:
    BOLT A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" A 1 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR DKboltCrisis : DKbolt
{
   Damage ((8 * random(1,8)) * CallACS("CrisisMultiplier"))
   States
   {
   Spawn:
      BOLT A 1 Bright 
	  {
       A_SpawnItemEx("DKboltCrisisParticle",0,0,0,0,0,1.28);
	   A_BishopMissileWeave;
       A_SpawnItem("RedPuff",0,0);
	  }
      loop
   Death:
      HBAL EFHI 2 Bright
      stop
   }
}

ACTOR DKSword // Death piece
{   
   Radius 8
   Height 8
   Speed 1
   PROJECTILE
   RENDERSTYLE Normal
   -NOGRAVITY
   +LOWGRAVITY
   States
   {
   Spawn:
      SWRD KLMNOPQ 3 BRIGHT
      goto Death 
   Death:
      SWRD RS 4 BRIGHT
      SWRD T 4 BRIGHT
      SWRD U 4
      SWRD T 4 BRIGHT
      SWRD U 8
      SWRD T 4 BRIGHT
      SWRD U 16
      SWRD T 4 BRIGHT
      SWRD U -1
   }
}

ACTOR DKShield // Death piece
{   
   Radius 8
   Height 8
   Speed 1
   PROJECTILE
   RENDERSTYLE Normal
   -NOGRAVITY
   +LOWGRAVITY
   States
   {
   Spawn:
      SHLD ABCDEFGHI 3
      goto death 
   Death:
      SHLD H -1
   }
}

ACTOR DKFire
{
   Damage 0
   ExplosionDamage 4
   ExplosionRadius 8
   Radius 2
   Height 6
   Speed 4
   RENDERSTYLE ADD
   ALPHA 0.95
   PROJECTILE
   +THRUGHOST
   DeathSound "weapons/scorch"
   States
   {
   Spawn:
      DKAT NOPQRSTNOPQRSTNOPQRSTUVW 3 Bright 
	  {
	   A_Explode(4,8);
	  }
      stop
   }
}
actor DKFireCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    DKAT A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" NOPQRSTNOPQRSTNOPQRSTUVW 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR DKFireCrisis : DKFire
{
   Damage 0
   ExplosionDamage 4
   ExplosionRadius 8
   Radius 2
   Height 6
   Speed 4
   RENDERSTYLE ADD
   ALPHA 0.95
   PROJECTILE
   +THRUGHOST
   DeathSound "weapons/scorch"
   States
   {
   Spawn:
      DKAT NOPQRSTNOPQRSTNOPQRSTUVW 3 Bright 
	  {
       A_SpawnItemEx("DKFireCrisisParticle",0,0,0,0,0,1.28);
	   A_Explode(4*CallACS("CrisisMultiplier"),8);
	  }
      stop
   }
}

ACTOR RedPuff
{   
   Radius 0
   Height 1
   Speed 0
   PROJECTILE
   RENDERSTYLE ADD
   ALPHA 0.85
   States
   {
   Spawn:
      NULL A 3 Bright
      RPUF ABCDE 3 Bright
      Stop 
   }
}


ACTOR WizardFX1New : WizardFX1 replaces WizardFX1 
{
  DamageType "Magic" 
  Damage (3 * random(1,8))
  Radius 10
  Height 6
  Speed 18
  FastSpeed 24
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  RenderStyle Add
  States
  {
  Spawn:
    FX11 AAABBB 2 Bright
	{
	}
    Loop
  Death:
    FX11 CDEFG 5 Bright
    Stop
  }
}
actor WizardFX1CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX11 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AAABBB 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR WizardFX1Crisis : WizardFX1New 
{
  Damage ((3 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FX11 AAABBB 2 Bright
	{
     A_SpawnItemEx("WizardFX1CrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    FX11 CDEFG 5 Bright
    Stop
  }
}

ACTOR WizardNew : AetheriusMonsterZSC // replaces Wizard
{
  Health 180
  Radius 16
  Height 68
  Mass 100
  Speed 12
  Painchance 64
  Painchance "Fist", 96 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 160 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 96 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 7.2
  Monster
  +FLOAT
  +NOGRAVITY
  +DONTOVERLAP
  SeeSound "wizard/sight"
  AttackSound "wizard/attack"
  PainSound "wizard/pain"
  DeathSound "wizard/death"
  ActiveSound "wizard/active"
  Obituary "$OB_WIZARD"
  HitObituary "$OB_WIZARDHIT"
  DropItem "BlasterAmmo", 84, 10
  DropItem "ArtiTomeOfPower", 4, 0
  Obituary "%o was cursed by a Disciple of D'Sparil."
  HitObituary "%o was scratched by a Disciple of D'Sparil."

  States
  {
  Spawn:
    WZRD A 0 NoDelay 
    WZRD AB 10 A_Look
    goto Spawn+1
  See:
    WZRD A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    WZRD A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    WZRD A 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    WZRD A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    WZRD A 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    WZRD B 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    WZRD B 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    WZRD B 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    WZRD B 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    WZRD N 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(5); }
	 A_FaceTarget;
	}
	WZRD O 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(5); }
	 A_FaceTarget;
	}
	WZRD P 12 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(9); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 23) { A_SetTics(11); }
	 A_FaceTarget;

	 A_MonsterCrisisCheck;
     A_CrisisMeleeAttack(random(1,5)*8, "wizard/melee", none, "Melee", true);
	}
	Goto See
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    WZRD C 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(3); }
	 A_WizAtk1;
	}
    WZRD C 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(3); }
	 A_WizAtk2;
	}
    WZRD C 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(3); }
	 A_WizAtk1;
	}
    WZRD C 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(3); }
	 A_WizAtk2;
	}
    WZRD C 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(3); }
	 A_WizAtk1;
	}
    WZRD C 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(3); }
	 A_WizAtk2;
	}
    WZRD C 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(3); }
	 A_WizAtk1;
	}
    WZRD C 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(3); }
	 A_WizAtk2;
	}
    WZRD D 12
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(9); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 23) { A_SetTics(11); }

	 A_MonsterCrisisCheck;
	 A_WizAtk3("WizardFX1","WizardFX1Crisis", 4*random(1,8));
	}
    Goto See
  Pain:
    WZRD E 3 A_GhostOff
    WZRD E 3 A_Pain
    Goto See
  Pain.Fist:
    WZRD E 3 A_GhostOff
    WZRD E 3 A_Pain
    WZRD EE 3
    Goto See
  Pain.Kick:
    WZRD E 3 A_GhostOff
    WZRD E 3 A_Pain
    WZRD EEEE 3
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    WZRD F 6 A_GhostOff
    WZRD G 6 A_Scream
    WZRD HI 6
    WZRD J 6 A_NoBlocking
    WZRD KL 6 
    WZRD M -1 A_SetFloorClip
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    WZRD Q 5 A_FreezeDeath
    WZRD Q 1 A_FreezeDeathChunks
    wait
  Raise:
    WZRD M 6 
    WZRD LKJIHGF 6
    goto See
  }
}
actor FWizard : WizardNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

ACTOR Banshee : AetheriusMonsterZSC
{
  Health 720
  Radius 12 // 15
  Height 48 // 60
  Mass 515
  Speed 15
  Scale 0.8
  PainChance 100
  Painchance "Fire", 50 // Fire attacks have a -50% chance of stunning an enemy
  Painchance "Fist", 150 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 250 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 150 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Fire", 0.5
  DamageFactor "Crush", 4.8
  +FLOAT
  +NOGRAVITY
  +DONTOVERLAP
  +QUICKTORETALIATE 
  +FLOORCLIP 
  +NOTARGET
  SeeSound "Banshee/Sight"
  PainSound "Banshee/Pain"
  DeathSound "Banshee/Death"
  ActiveSound "Banshee/Active"
  MeleeSound "Banshee/Raise"
  MONSTER
  Obituary "%o Heard The Banshee's Wail"
  DropItem "BlasterAmmo", 128, 10
  DropItem "ArtiTomeOfPower", 8, 0    

  States
  {
  Spawn:
    BANS A 0 NoDelay 
    BANS A 1 A_Look
    goto Spawn+1
  See:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    TNT1 A 0 A_UnSetInvulnerable
    BANS A 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }

	 A_TakeInventory("BansheeMissile5Token",24);
     A_TakeInventory("BansheePainToken",2);

	 A_VileChase;
	}
    BANS A 2
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }

	 A_VileChase;
     A_SpawnItem("BansheeTrail",0,0);
	} 
    BANS A 0 A_Jump(2,"BansheeTeleport")
    Loop
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BANS A 0 A_Jump(2,"Missile3")
    BANS A 0 A_Jump(50,"Missile4")
    BANS A 0 A_Jump(256,"Missile2", "Melee", "Missile1", "Missile5", "Missile6")
    Goto See
  Missile1:
    BANS B 0 A_FaceTarget
    BANS BCD 2	
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	}
    BANS B 0 
	{
	 if (random(1,256) <= 176) { A_PainAttack("DSLostSoul"); } else { A_DualPainAttack("DSLostSoul"); }
	}
    Goto See
  Missile2:  
    BANS B 0 A_FaceTarget
    BANS BCD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	}
    BANS D 0 
	{
     A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("BansheeFire", "BansheeFireCrisis", 50, 0, -8);
     A_CrisisSpawnProjectile("BansheeFire", "BansheeFireCrisis", 50, 0,  0);
     A_CrisisSpawnProjectile("BansheeFire", "BansheeFireCrisis", 50, 0,  8);
	}
    Goto See
  Missile3:  
    BANS B 0 A_FaceTarget
    BANS BCD 2 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	}
    BANS B 0 A_Jump(256,"BansheeTeleport")
    Goto See
  Missile4:  
    BANS B 0 A_FaceTarget
    BANS BCD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	}
    BANS D 0 
	{
     A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("BansheeFire3", "BansheeFire3Crisis");
	}
    Goto See
  Missile5:  
    BANS B 0 A_FaceTarget
  Missile5Loop:  
    BANS BCD 1
    BANS D 0 
	{
     A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("BansheeFire4", "BansheeFire4Crisis");

	 A_GiveInventory("BansheeMissile5Token",1);
	 if (CountInv("BansheeMissile5Token") >= 30) { return state("See"); }
	 return state("");
	}
    BANS D 1 A_CPosRefire
    loop
  Missile6:  
    BANS B 0 A_FaceTarget
    BANS BCD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	}
    BANS D 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

     A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0,-160);
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0,-128);
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0,-96 );
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0,-64 );
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0,-32 );
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0, 0  );
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0, 32 );
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0, 64 );
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0, 96 );
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0, 128);
     A_CrisisSpawnProjectile("BansheeFire5", "BansheeFire5Crisis", 50, 0, 160);
    }
    Goto See
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BANS B 0 A_FaceTarget
    BANS BCD 1
    BANS D 4
	{
     A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0,-160);
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0,-128);
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0,-96 );
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0,-64 );
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0,-32 );
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0, 0  );
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0, 32 );
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0, 64 );
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0, 96 );
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0, 128);
     A_CrisisSpawnProjectile("BansheeFire2", "BansheeFire2Crisis", 50, 0, 160);
	}
    Goto See
  BansheeTeleport:
    BANS A 0 A_SetInvulnerable
    BANS A 1 A_SetTranslucent(0.90)
    BANS A 1 A_SetTranslucent(0.80)
    BANS A 1 A_SetTranslucent(0.70)
    BANS A 1 A_SetTranslucent(0.60)
    BANS A 1 A_SetTranslucent(0.50)
    BANS A 1 A_SetTranslucent(0.40)
    BANS A 1 A_SetTranslucent(0.30)
    BANS A 1 A_SetTranslucent(0.20)
    BANS A 1 A_SetTranslucent(0.10)
    BANS A 0 A_Jump(128,25)
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_ExtChase(0,0,1,1)
    TNT1 A 0 A_Jump(128,25)
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_ExtChase(0,0,1,1)
    BANS A 1 A_SetTranslucent(0.10)
    BANS A 1 A_SetTranslucent(0.20)
    BANS A 1 A_SetTranslucent(0.30)
    BANS A 1 A_SetTranslucent(0.40)
    BANS A 1 A_SetTranslucent(0.50)
    BANS A 1 A_SetTranslucent(0.60)
    BANS A 1 A_SetTranslucent(0.70)
    BANS A 1 A_SetTranslucent(0.80)
    BANS A 1 A_SetTranslucent(0.90)
    BANS A 1 A_SetTranslucent(1.0)
    BANS A 0 A_UnSetInvulnerable
    goto See    

  Heal:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BANS B 8 BRIGHT
    BANS C 8 BRIGHT
    {
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 72, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 144, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 216, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 288, 0);
	 }
	 else
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 120, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 240, 0);
	 }
    }
    BANS D 8 BRIGHT
    Goto See

  Pain:
    BANS A 5 A_GiveInventory("BansheePainToken",5)
    BANS A 5 A_Pain
    BANS A 5 A_JumpIfInventory("BansheePainToken",25,"Missile4")
    Goto See
  Pain.Fist:
    BANS A 5 A_GiveInventory("BansheePainToken",5)
    BANS A 5 A_Pain
    BANS A 5
    BANS A 5 A_JumpIfInventory("BansheePainToken",25,"Missile4")
    Goto See
  Pain.Kick:
    BANS A 5 A_GiveInventory("BansheePainToken",5)
    BANS A 5 A_Pain
    BANS AA 5
    BANS A 5 A_JumpIfInventory("BansheePainToken",25,"Missile4")
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 
    BANS G 2 A_Scream
    BANS H 2 A_NoBlocking
    BANS I 2 A_CustomMissile("SpawnFire", 0, 0, 0)
    BANS I 2 A_CustomMissile("SpawnFire", 0, 0, 0)
    BANS IJKLMNOPQR 2
    BANS R -1
    Stop
  }
}
actor FBanshee : Banshee
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

actor BansheeFire : AetheriusProjectileZSC
{
  Damage (2 * random(1,8))
  Game Doom
  SpawnID 51
  Radius 13
  Height 8
  Speed 15
  Projectile
  +RANDOMIZE
  +RIPPER
  +DEHEXPLOSION
  +ROCKETTRAIL
  SeeSound "Banshee/ASpawn"
  DeathSound "Banshee/ADeath"
  Obituary "%o Heard The Banshee's Wail."
  Decal "DoomImpScorch"
  DamageType Fire
  States
  {
  Spawn:
    BANB A 1 BRIGHT 
	{
	 A_SpawnItem("BansheeFireTrail",0,0);
	}
    BANB AA 2
	{
	}
    loop
  Death:
    BAL1 CDE 3 bright
    stop
  }
}
actor BansheeFireCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    BANB A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" A 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
actor BansheeFireCrisis : BansheeFire
{
  Damage ((2 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    BANB A 1 BRIGHT 
	{
     A_SpawnItemEx("BansheeFireCrisisParticle",0,0,0,0,0,1.28);
	 A_SpawnItem("BansheeFireTrail",0,0);
	}
    BANB AA 2
	{
	}
    loop
  Death:
    BAL1 CDE 3 bright
    stop
  }
}

actor BansheeFire2 : BansheeFire
{
  Damage (2 * random(1,8))
  -RIPPER
  States
  {
  Spawn:
    BANB A 1 BRIGHT 
	{
	 A_SpawnItem("BansheeFireTrail",0,0);
	}
    BANB AA 2
	{
	}
    loop
  }
}
actor BansheeFire2CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    BANB A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" A 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
actor BansheeFire2Crisis : BansheeFire2
{
  Damage ((2 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    BANB A 1 BRIGHT 
	{
	 A_SpawnItem("BansheeFireTrail",0,0);
	}
    BANB AA 2
	{
     A_SpawnItemEx("BansheeFire2CrisisParticle",0,0,0,0,0,1.28);
	}
    loop
  }
}

actor BansheeFire3 : BansheeFire
{
  Damage (100 * random(1,8))
  Radius 24
  Height 24
  -RIPPER
  +NOGRAVITY
  +SPAWNCEILING
  +SEEKERMISSILE
  Scale 3.0
  Decal "Scorch"
  States
  {
  Spawn:
    BANB A 1 NoDelay BRIGHT A_SeekerMissile (50,50)
    BANB A 1 BRIGHT 
	{
	 A_SpawnItem("BansheeFireTrail",0,0);
	 A_GiveInventory("BansheeFire3Token",1);
	 if (CountInv("BansheeFire3Token") >= 30) { return state("Death"); }
     return state("");
	}
    loop
  Death:
    BAL1 CDE 3 bright
    stop
  }
}
actor BansheeFire3CrisisParticle : BaseCrisisParticle
{
 Scale 2.0

 States
 {
  Spawn:
    BANB A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" A 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
actor BansheeFire3Crisis : BansheeFire3
{
  Damage ((100 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    BANB A 1 NoDelay BRIGHT 
	{
     A_SpawnItemEx("BansheeFire3CrisisParticle",0,0,0,0,0,1.28);
	 A_SeekerMissile(50,50);
	}
    BANB A 1 BRIGHT 
	{
	 A_SpawnItem("BansheeFireTrail",0,0);
	 A_GiveInventory("BansheeFire3Token",1);
	 if (CountInv("BansheeFire3Token") >= 30) { return state("Death"); }
     return state("");
	}
    loop
  Death:
    BAL1 CDE 3 bright
    stop
  }
}

actor BansheeFire4 : BansheeFire
{
  Damage (2 * random(1,8))
  Speed 25
  -RIPPER
  States
  {
  Spawn:
    BANF ABCDEFGH 3 bright
	{
	}
    Stop
  Death:
    BANF H 3 bright
    stop
  }
}
actor BansheeFire4CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    BANF A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABCDEFGH 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
actor BansheeFire4Crisis : BansheeFire4
{
  Damage ((2 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    BANF ABCDEFGH 3 bright
	{
     A_SpawnItemEx("BansheeFire4CrisisParticle",0,0,0,0,0,1.28);
	}
    Stop
  Death:
    BANF H 3 bright
    stop
  }
}

actor BansheeFire5 : BansheeFire
{
  Damage (2 * random(1,8))
  Speed 20 
  +SEEKERMISSILE
  +FLOORHUGGER
  States
  {
  Spawn:
    BAFT A 1 BRIGHT 
	{
	 A_SeekerMissile(50,50);
	}
    BAFT A 2 
	{
	 A_SpawnItem("BansheeFireTrail2",0,0);
	}
    BAFT A 1 BRIGHT
	{
	 A_GiveInventory("BansheeFire3Token",1);
	 if (CountInv("BansheeFire3Token") >= 30) { return state("Death"); }
     return state("");
	}
    Goto Spawn
  Death:
    BAFT BCDEFGH 3 bright
    stop
  }
}
actor BansheeFire5CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    BAFT A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" A 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
actor BansheeFire5Crisis : BansheeFire5
{
  Damage ((2 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    BAFT A 2 BRIGHT 
	{
     A_SpawnItemEx("BansheeFire5CrisisParticle",0,0,0,0,0,1.28);
	 A_SeekerMissile(50,50);
	 A_SpawnItem("BansheeFireTrail2",0,0);
	}
    BAFT A 2 BRIGHT
	{
     A_SpawnItemEx("BansheeFire5CrisisParticle",0,0,0,0,0,1.28);
	 A_GiveInventory("BansheeFire3Token",1);
	 if (CountInv("BansheeFire3Token") >= 30) { return state("Death"); }
     return state("");
	}
    Goto Spawn
  Death:
    BAFT BCDEFGH 3 bright
    stop
  }
}

ACTOR BansheeTrail
{   
   Radius 20
   Height 56
   VSpeed 1
   Speed 0
   PROJECTILE
   RENDERSTYLE Translucent
   ALPHA 0.90
   scale 0.80
   States
   {
   Spawn:
      TNT1 A 3
   Idle:
      BANS A 3 
	  {
	   A_SetScale(scalex-0.06,scaley-0.06);
	   A_FadeOut(0.09);
	  }
      loop
   }
}

ACTOR BansheeFireTrail
{   
   Radius 20
   Height 56
   Speed 0
   PROJECTILE
   RENDERSTYLE Translucent
   Scale 0.50
   ALPHA 0.90
   States
   {
   Spawn:
      TNT1 A 3
      BANF ABCDEFGH 3 Bright A_FadeOut(0.10)
      Stop
   }
}

ACTOR BansheeFireTrail2
{   
   Radius 20
   Height 56
   Speed 0
   PROJECTILE
   RENDERSTYLE Translucent
   Scale 0.50
   ALPHA 0.90
   States
   {
   Spawn:
      TNT1 A 3
      BAFT ABCDEFG 3 Bright A_FadeOut(0.10)
      Stop
   }
}

actor BansheePainToken : Ammo
{
	Inventory.MaxAmount 50
}

actor BansheeFire3Token : Ammo
{
	Inventory.MaxAmount 50
}

actor BansheeMissile5Token : Ammo
{
	Inventory.MaxAmount 50
}

// Iceball
ACTOR HeadFX1New : AetheriusEffectProjectile replaces HeadFX1 
{
  Damage (1 * random(1,8))
  Radius 12
  Height 6
  Speed 13
  FastSpeed 20
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  +THRUGHOST
  DamageType "Ice" 
  DamageType "Magic" 
  RenderStyle Add

  States
  {
  Spawn:
    FX05 AAABBBCCC 2 Bright
	{
	}
    Loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",12);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(105,175)); // Deceleratle for 4-6 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    FX05 D 5 Bright A_LichIceImpact("HeadFX2New")
    FX05 EFG 5 Bright
    Stop
  }
}
actor HeadFX1CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX05 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AAABBBCCC 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR HeadFX1Crisis : HeadFX1New 
{
  Damage ((1 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FX05 AAABBBCCC 2 Bright
	{
     A_SpawnItemEx("HeadFX1CrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",12);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15, (random(105,175)*CallACS("CrisisMultiplier",5)) ); // Deceleratle for 4-6 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    FX05 D 5 Bright A_LichIceImpact("HeadFX2Crisis")
    FX05 EFG 5 Bright
    Stop
  }
}
// Ice Shard
ACTOR HeadFX2New : AetheriusEffectProjectile replaces HeadFX2 
{
  Damage (3 * random(1,8))
  DamageType "Ice" 
  DamageType "Magic" 
  Radius 12
  Height 6
  Speed 8
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  RenderStyle Add

  States
  {
  Spawn:
    FX05 HHHIIIJJJ 2 Bright
	{
	}
    Loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",24);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(35,52)); // Deceleratle for 1-1.5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    FX05 DEFG 5 Bright
    Stop
  }
}
actor HeadFX2CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX05 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" HHHIIIJJJ 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR HeadFX2Crisis : HeadFX2New 
{
  Damage ((3 * random(1,8)) * CallACS("CrisisMultiplier"))
  DamageType "Ice" 
  DamageType "Magic" 
  Radius 12
  Height 6
  Speed 8
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  RenderStyle Add

  States
  {
  Spawn:
    FX05 HHHIIIJJJ 2 Bright
	{
     A_SpawnItemEx("HeadFX2CrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",24);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15, (random(35,52)*CallACS("CrisisMultiplier",5)) ); // Deceleratle for 1-1.5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    FX05 DEFG 5 Bright
    Stop
  }
}

// Fire Pillar
ACTOR HeadFX3New : AetheriusProjectileZSC replaces HeadFX3 
{ 
  Damage (5 * random(1,8))
  DamageType "Fire" DamageType "Magic" 
  Radius 14
  Height 12
  Speed 10
  FastSpeed 18
  Projectile
  +WINDTHRUST
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  -NOBLOCKMAP
  RenderStyle Add

  States
  {
  Spawn:
    FX06 A 2 Bright 
	{
	}
    FX06 A 2 Bright 
	{
	 A_LichFireGrow;
	}
    FX06 B 2 Bright 
	{
	}
    FX06 B 2 Bright 
	{
	 A_LichFireGrow;
	}
    FX06 C 2 Bright 
	{
	}
    FX06 C 2 Bright 
	{
	 A_LichFireGrow;
	}
    Loop
  NoGrow:
    FX06 AA 2 Bright
	{
	}
    FX06 A 1 Bright
	{
	}
    FX06 BB 2 Bright
	{
	}
    FX06 B 1 Bright
	{
	}
    FX06 CC 2 Bright
	{
	}
    FX06 C 1 Bright
	{
	}
    Loop
  Death:
    FX06 DEFG 5 Bright
    Stop
  }
}
actor HeadFX3CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX06 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AABBCC 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR HeadFX3Crisis : HeadFX3New 
{ 
  Damage ((5 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FX06 A 2 Bright 
	{
     A_SpawnItemEx("HeadFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX06 A 2 Bright 
	{
     A_SpawnItemEx("HeadFX3CrisisParticle",0,0,0,0,0,1.28);
	 A_LichFireGrow;
	}
    FX06 B 2 Bright 
	{
     A_SpawnItemEx("HeadFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX06 B 2 Bright 
	{
     A_SpawnItemEx("HeadFX3CrisisParticle",0,0,0,0,0,1.28);
	 A_LichFireGrow;
	}
    FX06 C 2 Bright 
	{
     A_SpawnItemEx("HeadFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX06 C 2 Bright 
	{
     A_SpawnItemEx("HeadFX3CrisisParticle",0,0,0,0,0,1.28);
	 A_LichFireGrow;
	}
    Loop
  NoGrow:
    FX06 AA 2 Bright
	{
     A_SpawnItemEx("HeadFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX06 A 1 Bright
	{
	}
    FX06 BB 2 Bright
	{
     A_SpawnItemEx("HeadFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX06 B 1 Bright
	{
	}
    FX06 CC 2 Bright
	{
     A_SpawnItemEx("HeadFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX06 C 1 Bright
	{
	}
    Loop
  Death:
    FX06 DEFG 5 Bright
    Stop
  }
}

// Whirlwind
ACTOR WhirlwindNew : AetheriusWhirlwind replaces Whirlwind 
{
  Damage (1 * random(1,8))
  DamageType "Wind" DamageType "Magic" 
  Radius 16
  Height 74
  Speed 10
  Accuracy 8 // Sets how long [tics] to wait between hits when the tornado is touching a target
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEMCROSS
  +SEEKERMISSILE
  +EXPLOCOUNT
  +STEPMISSILE
  RenderStyle Translucent
  DefThreshold 60
  Threshold 50
  Alpha 0.4
  
  States
  {
  Spawn:
    FX07 DEFG 3
	{
	}
  Idle:
    FX07 ABC 3 
	{
	 A_WhirlwindSeek;
	}
    loop
  Death:
    FX07 GFED 4
    Stop
  }
}
actor WhirlwindCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX07 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABC 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR WhirlwindCrisis : WhirlwindNew 
{
  Damage ((1 * random(1,8)) * CallACS("CrisisMultiplier"))
  Stamina 30 // Set this to 30 to allow Crisis Checking
  Accuracy 8 // Sets how long [tics] to wait between hits when the tornado is touching a target
  States
  {
  Spawn:
    FX07 D 0 
	{
	 
	}
    FX07 DEFG 3
	{
	}
  Idle:
    FX07 ABC 3 
	{
     A_SpawnItemEx("WhirlwindCrisisParticle",0,0,0,0,0,1.28);
	 A_WhirlwindSeek;
	}
    loop
  Death:
    FX07 GFED 4
    Stop
  }
}

ACTOR IronlichNew : AetheriusMonsterZSC // replaces Ironlich
{
  Health 700
  Radius 40
  Height 72
  Mass 325
  Speed 6
  Painchance 32
  Painchance "Fist", 48 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 80 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 48 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 4
  Monster
  +NOBLOOD
  +DONTMORPH
  +DONTSQUASH
  +BOSSDEATH
  SeeSound "ironlich/sight"
  AttackSound "ironlich/attack"
  PainSound "ironlich/pain"
  DeathSound "ironlich/death"
  ActiveSound "ironlich/active"
  Obituary "$OB_IRONLICH"
  HitObituary "$OB_IRONLICHHIT"
  DropItem "BlasterAmmo", 84, 10
  DropItem "ArtiEgg", 51, 0

  States
  {
  Spawn:
    LICH A 0 NoDelay 
    LICH A 10 A_Look
    goto Spawn+1
  See:
    LICH A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    LICH A 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    LICH A 5 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
 	 A_FaceTarget;
	}
    LICH B 20 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(11); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(12); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 140) { A_SetTics(13); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); }

	 A_LichAttack(5+(user_monsterlevel/30), 1+(user_monsterlevel/45), 6*random(1,8), "HeadFX1New", "HeadFX1Crisis", "HeadFX3New", "HeadFX3Crisis", "WhirlwindNew", "WhirlwindCrisis", 1);
	}
    Goto See
  Pain:
    LICH A 4
    LICH A 4 A_Pain
    Goto See
  Pain.Fist:
    LICH A 4
    LICH A 4 A_Pain
    LICH AA 4
    Goto See
  Pain.Kick:
    LICH A 4
    LICH A 4 A_Pain
    LICH AAAA 4
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    LICH C 7
    LICH D 7 A_Scream
    LICH EF 7
    LICH G 7 A_NoBlocking
    LICH H 7 
    LICH I -1 A_BossDeath
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    LICH A 5 A_GenericFreezeDeath
    LICH A 1 A_FreezeDeathChunks
    wait
  Raise:
    LICH H 7 
    LICH GFEDC 7
    goto See
  }
}
actor FIronlich : IronlichNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

// Ice Lich
ACTOR IceLich : AetheriusMonsterZSC
{
  health 700
  painchance 16
  Painchance "Fist", 24 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 40 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 24 // Fist attacks have a +50% chance of stunning an enemy
  Damagefactor "Ice", 0
  Damagefactor "Fire", 2
  DamageFactor "Crush", 4.0
  speed 6
  radius 40
  height 72
  mass 500
  MONSTER
  +NOGRAVITY
  +NOBLOOD
  +FLOAT
  +MISSILEMORE
  +DONTBLAST
  +DONTMORPH
  +DONTSQUASH
  +NOICEDEATH
  +DONTSPLASH
  +BOSSDEATH
  seesound "ironlich/sight"
  attacksound ""
  painsound "ironlich/pain"
  deathsound "freeze/shatter"
  activesound "ironlich/active"
  obituary "%o was frozen by an Ice Lich"

  states
  {
  Spawn:
    ILCH A 0 NoDelay 
    ILCH A 10 A_Look
    goto Spawn+1
  See:
    LICH A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    ILCH A 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }

	 A_Chase;
     A_SpawnItemEx("IceGuyWisp1", random(-20,20), random(-20,20), random(50,70), 0, 0, 0, 32, 128);
	}
    ILCH A 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }

	 A_Chase;
     A_SpawnItemEx("IceGuyWisp1", random(-20,20), random(-20,20), random(50,70), 0, 0, 0, 32, 128);
	}
    ILCH A 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }

	 A_Chase;
	}
    loop
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    ILCH B 0 bright A_JumpIfCloser(300, "Breath")
    ILCH B 20 bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(11); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(12); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 140) { A_SetTics(13); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); }
	 A_FaceTarget;
	 A_PlaySoundEx("IceGuyAttack", auto);

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("IceGuyFXNew", "IceGuyFXCrisis", 44, 10, 0, 1);
	 A_CrisisSpawnProjectile("IceGuyFXNew", "IceGuyFXCrisis", 44, -10, 0, 1);
	}
    goto See
  Breath:
    ILCH B 0 bright 
	{
	 A_SetUserVar("user_shotsfired",0);
	 A_SetUserVar("user_shotsfiredmax",5+(user_monsterlevel/45));
	}
  BreathLoop: // 5 times
    ILCH B 0 bright 
	{
	 A_PlaySoundEx("FrostBreath", auto);
     A_FaceTarget;
	}
    ILCH BBB 2 bright
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("IceBreath", "IceBreathCrisis", 20, 0, random(-10,10), CMF_CHECKTARGETDEAD);
	}
    ILCH B 0 
	{
	 A_FaceTarget;
	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 if (user_shotsfired >= user_shotsfiredmax) { return state("See"); }
	 return state("");
	}
	loop

  Pain:
    ILCH A 0 A_Pain
    goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 
    ILCH A 3 A_Scream
    ILCH A 1 A_IceGuyDie
    stop
  }
}

ACTOR IceGuyFXNew : AetheriusEffectProjectile replaces IceGuyFX
{
  Damage (1 * random(1,8))
  Speed 14
  Radius 8
  Height 10
  DamageType "Ice"
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  DeathSound "IceGuyMissileExplode"

  States
  {
  Spawn:
    ICPR ABC 3 Bright 
	{
	 A_SpawnItemEx("IceFXPuff", 0, 0, 2);
	}
    Loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",16);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(70,105)); // Deceleratle for 4-6 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    ICPR D 4 Bright
    ICPR E 4 Bright A_IceGuyMissileExplode
    ICPR FG 4 Bright
    ICPR H 3 Bright
    Stop
  }
}
actor IceGuyFXCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    ICPR A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABC 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR IceGuyFXCrisis : IceGuyFXNew
{
  Damage (((1 * random(1,8)) * CallACS("CrisisMultiplier")))
  States
  {
  Spawn:
    ICPR ABC 3 Bright 
	{
     A_SpawnItemEx("IceGuyFXCrisisParticle",0,0,0,0,0,1.28);
	 A_SpawnItemEx("IceFXPuff", 0, 0, 2);
	}
    Loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",16);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15, (random(70,105)*CallACS("CrisisMultiplier",5)) ); // Deceleratle for 4-6 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    ICPR D 4 Bright
    ICPR E 4 Bright A_IceGuyMissileExplode("IceGuyFX2Crisis")
    ICPR FG 4 Bright
    ICPR H 3 Bright
    Stop
  }
}

ACTOR IceGuyFX2New : AetheriusEffectProjectile replaces IceGuyFX2
{
  Damage (1 * random(1,8))
  Speed 10
  Radius 4
  Height 4
  DamageType "Ice"
  Gravity 0.125
  +NOBLOCKMAP
  +DROPOFF
  +MISSILE
  +NOTELEPORT
  +STRIFEDAMAGE
  States
  {
  Spawn:
    ICPR NOP 3 Bright
	{
	}
    Loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",32);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(35,52)); // Deceleratle for 1-1.5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    TNT1 A 0 Bright
    stop
  }
}
actor IceGuyFX2CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    ICPR A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" NOP 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR IceGuyFX2Crisis : IceGuyFX2New
{
  Damage (((1 * random(1,8)) * CallACS("CrisisMultiplier")))
  States
  {
  Spawn:
    ICPR NOP 3 Bright
	{
     A_SpawnItemEx("IceGuyFX2CrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",32);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15, (random(12,17)*CallACS("CrisisMultiplier",5)) ); // Deceleratle for 0.3-0.48 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    TNT1 A 0 Bright
    stop
  }
}

ACTOR IceBreath : AetheriusEffectProjectile
{
  damage (5 * random(1,8))
  radius 12
  height 8
  speed 8
  alpha 0.2
  projectile
  ProjectileKickBack 0
  +NODAMAGETHRUST
  -NOBLOCKMAP
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  +WINDTHRUST
  +SPAWNSOUNDSOURCE
  +BLOODLESSIMPACT
  +ICEDAMAGE
  RenderStyle Add
  states
  {
  Spawn:
    IBRT ABABABABABABABABABAB 2 bright
	{
	}
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",16);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(35,52)); // Deceleratle for 1-1.5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    IBRT AB 2 bright
    stop
  }
}
actor IceBreathCrisisParticle : BaseCrisisParticle
{
 Alpha 0.1334
 States
 {
  Spawn:
    IBRT A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AB 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR IceBreathCrisis : IceBreath
{
  damage ((5 * random(1,8)) * CallACS("CrisisMultiplier"))
  states
  {
  Spawn:
    IBRT ABABABABABABABABABAB 2 bright
	{
     A_SpawnItemEx("IceBreathCrisisParticle",0,0,0,0,0,1.28);
	}
  Death:
    TNT1 A 0 Bright
	{
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",16);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 3)
	  {
	   ACS_NamedExecuteAlways("BuffTimer",0,8,15, (random(35,52)*CallACS("CrisisMultiplier",5)) ); // Deceleratle for 1-1.5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
    IBRT AB 2 bright
    stop
  }
}

// Gold Lich
ACTOR Goldlich : IronlichNew 31044
{
  Mass 2000
  Speed 10
  Health 1400
  Painchance 8
  Painchance "Fist", 12 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 20 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 12 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 4.0
  SeeSound "goldlich/sight"
  PainSound "goldlich/pain"
  DeathSound "goldlich/death"
  ActiveSound "goldlich/active"  
  Translation "0:17=112:121", "18:35=137:144", "36:42=116:121", "43:51=137:144", "52:58=114:121", "59:65=137:144"
  Obituary "%o was annihilated by the goldlich's power."
  Species "GoldLich"
  DropItem "BlasterHefty", 84, 50
  DropItem "ArtiEgg", 51, 0

  States
  {
  Spawn:
    LICH A 0 NoDelay 
    LICH A 1 A_Look
    LICH A 3 A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0)
    goto Spawn+1
  See:
    LICH A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    LICH A 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }

     A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
	 A_Chase;
	}
    Loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    LICH A 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
     A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
 	 A_FaceTarget;
	}
    LICH B 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
     A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);

	 A_LichAttack(5+(user_monsterlevel/20), 1+(user_monsterlevel/30), 8*random(1,8), "HeadFX1New", "HeadFX1Crisis", "HeadFX3New", "HeadFX3Crisis", "WhirlwindNew", "WhirlwindCrisis", 1);
	}
    LICH BBB 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
     A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
 	 A_FaceTarget;
	}
    Goto See
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    LICH A 1 A_FaceTarget
    LICH A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	 A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
	}
    LICH B 0 A_FaceTarget
    LICH B 0 
	{
     A_MonsterCrisisCheck;
	 if (random(1,256) <= 85 && CheckClass("Goldlich") == 1 && user_canusecrisisatk == 0) { return state("Missile2"); }
	 if (random(1,256) <= 128) { return state("Missile3"); }
	 if (random(1,256) <= 255) { return state("Missile4"); }
	 return state("");
	}
    Goto See
  Missile2:
    LICH BBBBBBBB 1 A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0)
    TNT1 A 0 A_SpawnItemEx("TeleportFog")
    TNT1 AAAAAAAAAAAAAAAA 0 A_Wander
    TNT1 A 0 
	{
	 A_SpawnItemEx("TeleportFog");
     A_UnsetSolid;
     A_SpawnItemEx("FakeGoldlich", 0,0,0, 0,0,0, 0, SXF_TRANSFERTRANSLATION);
	}
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander
    TNT1 A 4 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }
	 A_SetSolid;
	}
    TNT1 A 0 A_SpawnItemEx("TeleportFog")
    Goto See
  Missile3:
    LICH B 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	 A_PlaySound("goldlich/attack2");
	 A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
	}
    LICH B 1 A_FaceTarget
    LICH B 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

     A_MonsterCrisisCheck;
     for (A_SetUserVar(user_barragecounter, 0); user_barragecounter < 12; A_SetUserVar(user_barragecounter, user_barragecounter + 1))
     {
	  A_CrisisSpawnProjectile("GoldLichBounce","GoldLichBounceCrisis",32,0,user_barragecounter*30);
	 }
	 A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
	}
    LICH B 1 A_FaceTarget
    LICH B 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	 A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
	}
    LICH B 1 A_FaceTarget
    LICH B 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	 A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
	}
    LICH B 1 A_FaceTarget
    LICH B 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	 A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
	}
    LICH B 1 A_FaceTarget
    Goto See
  Missile4:
    LICH B 3 
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     A_PlaySound("goldlich/attack1");

	 A_SetUserVar("user_shotsfired",0);
	 A_SetUserVar("user_shotsfiredmax",4+(user_monsterlevel/45));
	 if (random (1,2) == 1)
	 {
      A_MonsterCrisisCheck;
      A_CrisisSpawnProjectile("GoldLichFire","GoldLichFireCrisis");
	 }
     A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
    }
    LICH B 1 A_FaceTarget
  Missile4Loop: // 4 times
    LICH B 3
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

     A_MonsterCrisisCheck;
     A_CrisisSpawnProjectile("GoldLichFire","GoldLichFireCrisis");
     A_SpawnItemEx("GoldLichGlitter", random(-32,32), random(-32,32), random(8,104),0,0,0, 0,0, 0);
	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
    }
    LICH B 1 
	{
	 A_FaceTarget;
	 if (user_shotsfired >= user_shotsfiredmax) { return state("Missile4End"); }
	 return state("");
	}
	loop
  Missile4End:
    LICH B 0 
	{
     A_MonsterCrisisCheck;
     A_CrisisSpawnProjectile("GoldLichFire","GoldLichFireCrisis");
	}
    Goto See

  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 
    LICH CC 4 A_SpawnItemEx("GoldLichGlitter", random(-36,36), random(-36,36), random(8,104),0,0,0, 0,0, 0)
    
    LICH D 1 A_Scream
    LICH D 3 A_SpawnItemEx("GoldLichGlitter", random(-36,36), random(-36,36), random(8,104),0,0,0, 0,0, 0)
    LICH D 4 A_SpawnItemEx("GoldLichGlitter", random(-36,36), random(-36,36), random(8,104),0,0,0, 0,0, 0)

    LICH EE 4 A_SpawnItemEx("GoldLichGlitter", random(-40,40), random(-40,40), random(0,112),0,0,0, 0,0, 0)

    LICH FF 4 A_SpawnItemEx("GoldLichGlitter", random(-44,44), random(-44,44), random(0,96),0,0,0, 0,0, 0)
    
    LICH G 0 A_NoBlocking
    LICH G 4 A_SpawnItemEx("GoldLichGlitter", random(-52,52), random(-52,52), random(0,80),0,0,0, 0,0, 0)
    LICH G 4 A_SpawnItemEx("GoldLichGlitter", random(-52,52), random(-52,52), random(0,80),0,0,0, 0,0, 0)
    
    LICH HH 4 A_SpawnItemEx("GoldLichGlitter", random(-56,56), random(-56,56), random(0,64),0,0,0, 0,0, 0)
    
    LICH I 4 A_SpawnItemEx("GoldLichGlitter", random(-64,64), random(-64,64), random(0,48),0,0,0, 0,0, 0)
    LICH I -1 A_BossDeath
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    LICH A 5 A_GenericFreezeDeath
    LICH A 1 A_FreezeDeathChunks
    wait
  Raise:
    LICH H 7 
    LICH GFEDC 7
    goto See
  }
}


ACTOR GoldLichMiniExplodes
{
  +DONTSPLASH
  +NOGRAVITY
  States
  {
  Spawn:
    FXA1 DEF 3 BRIGHT
    Stop
  }
}
ACTOR GoldLichBounce
{
  Damage (1 * random(1,8))
  Radius 14
  Height 12
  Speed 15
  FastSpeed 24
  Projectile
  +NOGRAVITY
  +WINDTHRUST  
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  -NOBLOCKMAP
  +SEEKERMISSILE
  
  BounceType "Doom"
  BounceCount 2
  
  +BOUNCEONWALLS
  +BOUNCEONFLOORS
  +BOUNCEONCEILINGS
  +BOUNCEONACTORS
  +CANBOUNCEWATER
  
  States
  {
  Spawn:
    FXA1 AABBCC 2 BRIGHT
	{
	}
    Loop
  Death:
    FXA1 A 0 A_PlaySound("goldlich/attack2Blast")
    FXA1 A 0 BRIGHT A_Stop
    FXA1 A 0 BRIGHT A_Explode(64,160,0)
    FXA1 GGGGGHHHHHIIIII 1 BRIGHT A_SpawnItemEx("GoldLichMiniExplodes", random(-32,32), random(-32,32), random(-32,32),0,0,0, 0,0, 0)
    Stop
  }
}
actor GoldLichBounceCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FXA1 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AABBCC 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR GoldLichBounceCrisis : GoldLichBounce
{
  Damage (1 * random(1,8) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FXA1 AABBCC 2 BRIGHT
	{
     A_SpawnItemEx("GoldLichBounceCrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    FXA1 A 0 A_PlaySound("goldlich/attack2Blast")
    FXA1 A 0 BRIGHT A_Stop
    FXA1 A 0 BRIGHT A_Explode(64*CallACS("CrisisMultiplier"),160,0)
    FXA1 GGGGGHHHHHIIIII 1 BRIGHT A_SpawnItemEx("GoldLichMiniExplodes", random(-32,32), random(-32,32), random(-32,32),0,0,0, 0,0, 0)
    Stop
  }
}

ACTOR GoldLichFire
{
  Damage (5 * random(1,8))
  Radius 14
  Height 12
  Speed 15
  FastSpeed 24
  Projectile
  +NOGRAVITY
  +WINDTHRUST  
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  -NOBLOCKMAP
  +SEEKERMISSILE
  RenderStyle Add
  var int user_tracks;
  
  States
  {
  Spawn:
    FX06 A 0 A_SetUserVar("user_tracks", 5)
  Weave:
    TNT1 A 0 A_PlaySound("goldlich/attack1")
    FX06 AAAABBBBCCCC 1 BRIGHT
	{
	 A_Weave(3, 0, 4.0, 0.0);
	}
    TNT1 A 0 A_Jump(128, "Track")
    Loop
  Track:
    TNT1 A 0 A_PlaySound("goldlich/attack1")
    TNT1 A 0 A_Jump(user_tracks <= 0, "Track")
    TNT1 A 0 A_SetUserVar(user_tracks, user_tracks - 1)
    FX06 AAAABBBBCCCC 1 BRIGHT
	{
	 A_SeekerMissile(360, 1);
	}
    TNT1 A 0 A_Jump(128, "Weave")
    Loop
  Death:
    FX06 DEFG 5 BRIGHT
    Stop
  }
}
actor GoldLichFireCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX06 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AAAABBBBCCCC 1 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR GoldLichFireCrisis : GoldLichFire
{
  Damage ((5 * random(1,8)) * CallACS("CrisisMultiplier"))
  
  States
  {
  Spawn:
    FX06 A 0 A_SetUserVar("user_tracks", 5)
  Weave:
    TNT1 A 0 A_PlaySound("goldlich/attack1")
    FX06 AAAABBBBCCCC 1 BRIGHT
	{
     A_SpawnItemEx("GoldLichFireCrisisParticle",0,0,0,0,0,1.28);
	 A_Weave(3, 0, 4.0, 0.0);
	}
    TNT1 A 0 A_Jump(128, "Track")
    Loop
  Track:
    TNT1 A 0 A_PlaySound("goldlich/attack1")
    TNT1 A 0 A_Jump(user_tracks <= 0, "Track")
    TNT1 A 0 A_SetUserVar(user_tracks, user_tracks - 1)
    FX06 AAAABBBBCCCC 1 BRIGHT
	{
     A_SpawnItemEx("GoldLichFireCrisisParticle",0,0,0,0,0,1.28);
	 A_SeekerMissile(360, 1);
	}
    TNT1 A 0 A_Jump(128, "Weave")
    Loop
  Death:
    FX06 DEFG 5 BRIGHT
    Stop
  }
}

ACTOR GoldLichGlitter
{
  +NOGRAVITY
  States
  {
  Spawn:
    GGLT ABCDE 4 BRIGHT
    Stop
  }
}

ACTOR FakeGoldLich : GoldLich
{
  DropItem "BlasterHefty", 255, 50
  Mass 250
  Health 175
  Species "GoldLich"
}

// Blood Lich
ACTOR BloodLich : AetheriusMonsterZSC
{
  Health 2100
  Radius 40
  Height 72
  Mass 2100
  Speed 10
  PainChance 16
  Painchance "Fire", 8 // Fire attacks have a -50% chance of stunning an enemy
  Painchance "Fist", 24 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 40 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 24 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Fire", 0.5
  DamageFactor "Crush", 2.4
  MONSTER
  +NOGRAVITY
  +NOTARGET
  +NOFEAR
  +SPAWNCEILING
  +FLOAT
  +MISSILEMORE
  +MISSILEEVENMORE
  +DONTBLAST
  +DONTMORPH
  +DONTRIP
  +DONTSPLASH
  +BOSS
  +BOSSDEATH
  SeeSound "ironlich/sight"
  AttackSound ""
  PainSound "ironlich/pain"
  DeathSound "ironlich/death"
  ActiveSound "ironlich/active"
  Obituary "%o was reduced to a pile of ash by a Blood Lich."

  States
  {
  Spawn:
    BLCH A 0 NoDelay 
	BLCH A 10 A_Look
	goto Spawn+1
  See:
    BLCH A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
	BLCH A 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }

	 A_Chase;
	}
	Loop
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
	BLCH B 0 Bright A_JumpIfCloser(300, "Breath")
	BLCH B 0 Bright A_Jump(96,"Curse")
	BLCH B 6 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	 A_PlaySoundEx("MageStaffFire", CHAN_AUTO);

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("BloodLichFireball", "BloodLichFireballCrisis", 54, 10, -2, 1);
	 A_CrisisSpawnProjectile("BloodLichFireball", "BloodLichFireballCrisis", 54, -10, 2, 1);
	}
	Goto See
  Breath:
    BLCH B 0 bright 
	{
	 A_SetUserVar("user_shotsfired",0);
	 A_SetUserVar("user_shotsfiredmax",5+(user_monsterlevel/45));
	}
  BreathLoop: // 5
	BLCH B 0 Bright
	{
	 A_PlaySoundEx("FlameBreath", CHAN_AUTO);
	 A_FaceTarget;
	}
	BLCH BBB 2 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("FireBreath", "FireBreathCrisis", 20, 0, frandom(-3,3), CMF_CHECKTARGETDEAD);
	}
    BLCH B 0 
	{
	 A_FaceTarget;
	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 if (user_shotsfired >= user_shotsfiredmax) { return state("See"); }
	 return state("");
	}
	loop
  Curse:
	BLCH B 0 Bright A_JumpIfCloser(300, "Breath")
	BLCH B 6 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
     A_FaceTarget;

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("CurseSpell", "CurseSpellCrisis", 20, 0, 0, 1);
	}
	Goto See
  Pain:
	BLCH A 0 A_Pain
	Goto See

  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 
	BLCH C 7 
	{
	 if (random(1,256) <= 160) { A_PainDie("HereticImpLeader"); }
	}
	BLCH D 7 A_Scream
	BLCH EF 7
	BLCH G 7 A_NoBlocking
	BLCH H 7
	BLCH I -1 A_BossDeath
	Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BLCH A 5 A_GenericFreezeDeath
    BLCH A 1 A_FreezeDeathChunks
    wait
  Raise:
    BLCH H 7 
    BLCH GFEDC 7
    goto See

  }
}

ACTOR FireBreath
{
    Damage (3 * random(1,8))
    Radius 12
    Height 8
    Speed 12
    Alpha 0.2
    PROJECTILE
    -NOBLOCKMAP
    -ACTIVATEIMPACT
    -ACTIVATEPCROSS
    +SPAWNSOUNDSOURCE
    +RIPPER
    +BLOODLESSIMPACT
    DamageType "Fire"
    RenderStyle Add
    States
    {
    Spawn:
		FRBS EFGEFGEFGEFGEFGEFG 3
		{
		}
    Death:
    	TNT1 A 0
    	Stop
    }
}
actor FireBreathCrisisParticle : BaseCrisisParticle
{
 Alpha 0.133

 States
 {
  Spawn:
    FRBS A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" EFG 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR FireBreathCrisis : FireBreath
{
    Damage ((3 * random(1,8)) * CallACS("CrisisMultiplier"))
    States
    {
    Spawn:
		FRBS EFGEFGEFGEFGEFGEFG 3
		{
         A_SpawnItemEx("FireBreathCrisisParticle",0,0,0,0,0,1.28);
		}
    Death:
    	TNT1 A 0
    	Stop
    }
}

ACTOR BloodLichFireball
{
    Damage (4 * random(1,8))
    Speed 17
    Height 8
    PROJECTILE
    +EXTREMEDEATH
    DamageType "Fire"
    DeathSound "MageStaffExplode"
    States
    {
    Spawn:
		MSP4 ABCD 2 Bright
		{
		}
		Loop
    Death:
		MSP4 E 4 Bright A_SetTranslucent(1,1)
		MSP4 F 5 Bright A_Explode(80,192,0)
		MSP4 GH 5 Bright
		MSP4 I 4 Bright
		Stop
    }
}
actor BloodLichFireballCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    MSP4 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABCD 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR BloodLichFireballCrisis : BloodLichFireball
{
    Damage ((4 * random(1,8)) * CallACS("CrisisMultiplier"))
    States
    {
    Spawn:
		MSP4 ABCD 2 Bright
		{
         A_SpawnItemEx("BloodLichFireballCrisisParticle",0,0,0,0,0,1.28);
		}
		Loop
    Death:
		MSP4 E 4 Bright A_SetTranslucent(1,1)
		MSP4 F 5 Bright A_Explode(80*CallACS("CrisisMultiplier"),192,0)
		MSP4 GH 5 Bright
		MSP4 I 4 Bright
		Stop
    }
}

ACTOR CurseSpell : AetheriusEffectProjectile
{
  PROJECTILE
  +SEEKERMISSILE
  +BLOODLESSIMPACT
  RenderStyle Add
  Damage 0
  DamageType "Dark"
  Speed 15
  Radius 10
  Height 6
  States
  {
  Spawn:
	TNT1 A 0
	CURS A 0 A_PlaySound("CurseActive", CHAN_AUTO, 1.0, 1)
	CURS ABCDEF 3 Bright A_SeekerMissile(50,50,2)
	Loop
  Death:
    TNT1 A 0 Bright
	{	 
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",4);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 2)
	  {
	   A_SetUserVar("user_random",random(1,13));
	   if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21,random(315,525)); } // Silence for 9-15 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19,random(315,525)); } // Blind for 9-15 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20,random(315,525)); } // Sleep for 9-15 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,18,random(315,525)); } // Fatigue for 9-15 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(630,1050)); } // Sap for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(630,1050)); } // Sap for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(630,1050)); } // Sap for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(630,1050)); } // Blunt for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(630,1050)); } // Blunt for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(630,1050)); } // Blunt for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(630,1050)); } // Deceleratle for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(630,1050)); } // Deceleratle for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 13) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(630,1050)); } // Deceleratle for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
	TNT1 A 0 A_StopSound(CHAN_AUTO)
	CURS GHIJKL 3 Bright
	Stop
  }
}
actor CurseSpellCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    CURS A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABCDEF 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR CurseSpellCrisis : CurseSpell
{
  States
  {
  Spawn:
	TNT1 A 0
	CURS A 0 A_PlaySound("CurseActive", CHAN_AUTO, 1.0, 1)
	CURS ABCDEF 3 Bright 
	{
     A_SpawnItemEx("CurseSpellCrisisParticle",0,0,0,0,0,1.28);
	 A_SeekerMissile(50,50,2);
	}
	Loop
  Death:
    TNT1 A 0 Bright
	{	 
	 if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
	 {
	  A_SetUserVar("user_ailmentmaxchance",4);
	  if (CountInv("EWShieldIdleMode",AAPTR_PLAYER1) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CallACS("GetBuffTimer",7) > 0) { A_SetUserVar("user_ailmentmaxchance",user_ailmentmaxchance*4); }
	  if (CountInv("EvadeAnAttack",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (CountInv("InvulnerabilitySpell",AAPTR_PLAYER1) > 0) { return state("Death2"); }
	  if (random(1,user_ailmentmaxchance) <= 2)
	  {
	   A_SetUserVar("user_random",random(1,13));
	   if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21, (random(315,525)*CallACS("CrisisMultiplier",5)) ); } // Silence for 9-15 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19, (random(315,525)*CallACS("CrisisMultiplier",5)) ); } // Blind for 9-15 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20, (random(315,525)*CallACS("CrisisMultiplier",5)) ); } // Sleep for 9-15 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,18, (random(315,525)*CallACS("CrisisMultiplier",5)) ); } // Fatigue for 9-15 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14, (random(630,1050)*CallACS("CrisisMultiplier",5)) ); } // Sap for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14, (random(630,1050)*CallACS("CrisisMultiplier",5)) ); } // Sap for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,14, (random(630,1050)*CallACS("CrisisMultiplier",5)) ); } // Sap for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13, (random(630,1050)*CallACS("CrisisMultiplier",5)) ); } // Blunt for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13, (random(630,1050)*CallACS("CrisisMultiplier",5)) ); } // Blunt for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,13, (random(630,1050)*CallACS("CrisisMultiplier",5)) ); } // Blunt for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15, (random(630,1050)*CallACS("CrisisMultiplier",5)) ); } // Deceleratle for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15, (random(630,1050)*CallACS("CrisisMultiplier",5)) ); } // Deceleratle for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	   else if (user_random == 13) { ACS_NamedExecuteAlways("BuffTimer",0,8,15, (random(630,1050)*CallACS("CrisisMultiplier",5)) ); } // Deceleratle for 18-30 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
	  }
	 }
	 return state("");
	}
  Death2:
	TNT1 A 0 A_StopSound(CHAN_AUTO)
	CURS GHIJKL 3 Bright
	Stop
  }
}


ACTOR ClinkNew : AetheriusMonsterZSC replaces Clink
{
  Health 150
  Radius 20
  Height 64
  Mass 75
  Speed 14
  MeleeRange 52
  Painchance 32
  Painchance "Fist", 48 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 80 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 48 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 6.4
  Monster
  +NOBLOOD
  +FLOORCLIP
  SeeSound "clink/sight"
  AttackSound "clink/attack"
  PainSound "clink/pain"
  DeathSound "clink/death"
  ActiveSound "clink/active"
  Obituary "$OB_CLINK"
  DropItem "SkullRodAmmo", 84, 20	
  
  States
  {
  Spawn:
    CLNK A 0 NoDelay 
    CLNK AB 10 A_Look
    Loop
  See:
    CLNK A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    CLNK ABCD 3
	{
	 if (CountInv("ClinkLungeAttackStatus",AAPTR_DEFAULT) > 0) { A_TakeInventory("ClinkLungeAttackStatus",0x7FFFFFFF); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }

	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_Chase; } else { A_Chase("Melee",""); }
	}
    Loop
  Missile:
    CLNK E 0
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) 
	 {
	  if (random(1,256) <= 154) { return state("AxeMissile"); } else { return state("LungeAttack"); }	  
	  return state("See");
	 }
	 else
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) 
	 {
	  if (random(1,256) <= 85) { return state("AxeMissile"); } else { return state("LungeAttack"); }	  
	  return state("See"); 
	 }
	 return state("See");
	}
    goto See

  AxeMissile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    CLNK EF 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    CLNK G 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;

     A_MonsterCrisisCheck;
	 A_CrisisComboAttack("ClinkAxe","ClinkAxeCrisis", 30, random[ClinkAttack](3,9), "clink/attack");
	}
    Goto See

  LungeAttack:
	CLNK A 0 A_JumpIfCloser(208,1)
	Goto AxeMissile
	CLNK A 0 A_Jump(64, "AxeMissile")
	CLNK P 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
	CLNK P 0
	{
	 if (CountInv("ClinkLungeAttackStatus",AAPTR_DEFAULT) < 1) { A_GiveInventory("ClinkLungeAttackStatus",1); }
	 A_FaceTarget;
	}
	CLNK Q 1 ThrustThingZ(0,40,0,1)
	CLNK Q 0 A_SpawnItemEx("SabreclawGhostTrail",0,0,0,0,0,0,0,128,0)
    CLNK E 0 A_FaceTarget
    CLNK Q 0 A_Recoil (-10)
	CLNK QQQQ 1 A_JumpIfCloser(71, "MeleeStrike")
	CLNK Q 0 A_SpawnItemEx("SabreclawGhostTrail",0,0,0,0,0,0,0,128,0)
	CLNK QQQQ 1 A_JumpIfCloser(71, "MeleeStrike")
	CLNK Q 0 A_SpawnItemEx("SabreclawGhostTrail",0,0,0,0,0,0,0,128,0)
	CLNK QQQQ 1 A_JumpIfCloser(71, "MeleeStrike")
	CLNK Q 0 A_SpawnItemEx("SabreclawGhostTrail",0,0,0,0,0,0,0,128,0)
	CLNK QQQP 1 A_JumpIfCloser(71, "MeleeStrike")
	CLNK P 0 A_SpawnItemEx("SabreclawGhostTrail2",0,0,0,0,0,0,0,128,0)
	CLNK PPPP 1 A_JumpIfCloser(71, "MeleeStrike")
	CLNK P 0 A_SpawnItemEx("SabreclawGhostTrail2",0,0,0,0,0,0,0,128,0)
	CLNK P 1 A_JumpIfCloser(71, "MeleeStrike")
	Goto See
  MeleeStrike:
	CLNK G 0 A_FaceTarget
	CLNK G 7
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
     if (CountInv("ClinkLungeAttackStatus",AAPTR_DEFAULT) > 0) { A_TakeInventory("ClinkLungeAttackStatus",0x7FFFFFFF); }

     A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random(6,18), "clink/attack", "clink/attack", "Melee", 1);
	}
	Goto See

  Melee:
    TNT1 A 0 
	{
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
     if (CountInv("ClinkLungeAttackStatus",AAPTR_DEFAULT) > 0) { A_TakeInventory("ClinkLungeAttackStatus",0x7FFFFFFF); }
    }
    CLNK E 5 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    CLNK F 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_FaceTarget;
	}
    CLNK G 7 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }

     A_MonsterCrisisCheck;
	 A_CrisisMeleeAttack(random[ClinkAttack](3,9), "clink/attack", "clink/attack");
	}
    Goto See
  Pain:
    CLNK H 3 { if (CountInv("ClinkLungeAttackStatus",AAPTR_DEFAULT) > 0) { A_TakeInventory("ClinkLungeAttackStatus",0x7FFFFFFF); } }
    CLNK H 3 A_Pain
    Goto See
  Pain.Fist:
    CLNK H 3 { if (CountInv("ClinkLungeAttackStatus",AAPTR_DEFAULT) > 0) { A_TakeInventory("ClinkLungeAttackStatus",0x7FFFFFFF); } }
    CLNK H 3 A_Pain
    CLNK HH 3 
    Goto See
  Pain.Kick:
    CLNK H 3 { if (CountInv("ClinkLungeAttackStatus",AAPTR_DEFAULT) > 0) { A_TakeInventory("ClinkLungeAttackStatus",0x7FFFFFFF); } }
    CLNK H 3 A_Pain
    CLNK HHHH 3 
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    CLNK IJ 6
	{
     if (CountInv("ClinkLungeAttackStatus",AAPTR_DEFAULT) > 0) { A_TakeInventory("ClinkLungeAttackStatus",0x7FFFFFFF); }
	}
    CLNK K 5 A_Scream
    CLNK L 5 A_NoBlocking
    CLNK MN 5 
    CLNK O -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    CLNK H 5 A_GenericFreezeDeath
    CLNK H 1 A_FreezeDeathChunks
    wait
  Raise:
    CLNK N 5 
    CLNK MLKJI 5
    goto See
  }
}
actor FClink : ClinkNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

ACTOR SabreclawGhostTrail
{
	Radius 16
	Height 56
	Speed 1
	Damage 0
	RenderStyle Translucent
	Alpha 0.7
	PROJECTILE
	+CLIENTSIDEONLY
	states
	{
	Spawn:
        CLNK Q 0
		CLNK Q 1 A_FadeOut(0.10)
		goto Spawn+1
	}
}

ACTOR SabreclawGhostTrail2
{
	Radius 16
	Height 56
	Speed 1
	Damage 0
	RenderStyle Translucent
	Alpha 0.7
	PROJECTILE
	+CLIENTSIDEONLY
	states
	{
	Spawn:
        CLNK P 0
		CLNK P 1 A_FadeOut(0.10)
		goto Spawn+1
	}
}

ACTOR ClinkAxe
{
  Damage (2 * random(1,8))
  Radius 10
  Height 8
  Speed 25
  FastSpeed 30
  Projectile
  +NODAMAGETHRUST
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  +THRUGHOST
  +WINDTHRUST
  Renderstyle Add
  Scale 0.6
  DeathSound "hknight/hit"
  States
  {
  Spawn:
    CLAX A 3 Bright 
	{
	 A_PlaySound("hknight/axewhoosh");
	}
    CLAX BC 3 Bright
	{
	}
    Loop
  Death:
    CLAX DEF 6 Bright
    Stop
  }
}
actor ClinkAxeCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    CLAX A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABC 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR ClinkAxeCrisis : ClinkAxe
{
  Damage ((2 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    CLAX A 3 Bright 
	{
     A_SpawnItemEx("ClinkAxeCrisisParticle",0,0,0,0,0,1.28);
	 A_PlaySound("hknight/axewhoosh");
	}
    CLAX BC 3 Bright
	{
     A_SpawnItemEx("ClinkAxeCrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    CLAX DEF 6 Bright
    Stop
  }
}

// Makes the SabreClaw more 50% more vulnerable to melee-type attacks when lunging at something :V
actor ClinkLungeAttackStatus : PowerProtection 
{ 
 Damagefactor "Melee", 1.5 
 DamageFactor "Sceptre", 1.5
 Damagefactor "Fist", 1.5
 Damagefactor "Kick", 1.5
 Damagefactor "Gauntlets", 1.5
 Damagefactor "Chainsaw", 1.5
 inventory.icon "" 
}

  
ACTOR BeastNew : AetheriusMonsterZSC replaces Beast
{
  Health 220
  Radius 32
  Height 74
  Mass 200
  Speed 14
  Painchance 100
  Painchance "Fist", 150 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 250 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 150 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 6.4
  Monster
  +FLOORCLIP
  SeeSound "beast/sight"
  AttackSound "beast/attack"
  PainSound "beast/pain"
  DeathSound "beast/death"
  ActiveSound "beast/active"
  Obituary "$OB_BEAST"
  DropItem "CrossbowAmmo", 84, 10

  States
  {
  Spawn:
    BEAS A 0 NoDelay 
    BEAS AB 10 A_Look
    goto Spawn+1
  See:
    BEAS A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BEAS ABCDEF 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BEAS H 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    BEAS I 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_MonsterCrisisCheck;
	 A_CrisisComboAttack("BeastBall", "BeastBallCrisis", 32, random[BeastAttack](1,8)*3, "beast/attack");
	}
    Goto See
  Pain:
    BEAS G 3
    BEAS G 3 A_Pain
    Goto See
  Pain.Fist:
    BEAS G 3
    BEAS G 3 A_Pain
    BEAS GG 3
    Goto See
  Pain.Kick:
    BEAS G 3
    BEAS G 3 A_Pain
    BEAS GGGG 3
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BEAS R 6
    BEAS S 6 A_Scream
    BEAS TUV 6
    BEAS W 6 A_NoBlocking
    BEAS XY 6 
    BEAS Z -1
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BEAS J 5
    BEAS K 6 A_Scream
    BEAS L 5
    BEAS M 6
    BEAS N 5
    BEAS O 6 A_NoBlocking
    BEAS P 5
    BEAS Q -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BEAS G 5 A_GenericFreezeDeath
    BEAS G 1 A_FreezeDeathChunks
    wait
  Raise:
    BEAS P 5 
    BEAS O 6 
    BEAS N 5 
    BEAS M 6 
    BEAS L 5 
    BEAS K 6 
    BEAS J 5 
    goto See
  }
}
actor FBeast : BeastNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

ACTOR MinotaurFX1New : AetheriusProjectileZSC replaces MinotaurFX1 
{
  Damage (3 * random(1,8))
  DamageType "Fire" DamageType "Magic" 
  Radius 10
  Height 6
  Speed 20
  FastSpeed 26
  DamageType Fire
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  RenderStyle Add
  States
  {
  Spawn:
    FX12 AAABBB 2 Bright
	{
	}
    Loop
  Death:
    FX12 CDEFGH 5 Bright
    Stop
  }
}
actor MinotaurFX1CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX12 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AAABBB 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR MinotaurFX1Crisis : MinotaurFX1New
{
  Damage ((3 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FX12 AAABBB 2 Bright
	{
     A_SpawnItemEx("MinotaurFX1CrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    FX12 CDEFGH 5 Bright
    Stop
  }
}

ACTOR MinotaurFX2New : MinotaurFX1New replaces MinotaurFX2 
{
  Damage (4 * random(1,8))
  DamageType "Fire" DamageType "Magic" 
  Radius 5
  Height 12
  Speed 14
  FastSpeed 20
  +FLOORHUGGER
  ExplosionDamage 24
  DeathSound "minotaur/fx2hit"

  States
  {
  Spawn:
    FX13 A 2 Bright 
	{
	 A_MntrFloorFire("MinotaurFX3New");
	}
    Loop
  Death:
    FX13 I 4 Bright 
	{
	 A_Explode(24,64);
	}
    FX13 JKLM 4 Bright
    Stop
  }
}
actor MinotaurFX2CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX13 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" A 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR MinotaurFX2Crisis : MinotaurFX2New 
{
  Damage ((4 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FX13 A 2 Bright 
	{
	 A_MntrFloorFire("MinotaurFX3Crisis");
	}
    Loop
  Death:
    FX13 I 4 Bright 
	{
	 A_Explode(24*CallACS("CrisisMultiplier"),64);
	}
    FX13 JKLM 4 Bright
    Stop
  }
}

ACTOR MinotaurFX3New : MinotaurFX2New replaces MinotaurFX3 
{
  DamageType "Fire" DamageType "Magic" 
  Radius 8
  Height 16
  Speed 0
  DeathSound "minotaur/fx3hit"
  ExplosionDamage 128
  States
  {
  Spawn:
    FX13 DDCC 2 Bright
	{
	}
    FX13 BB 2 Bright
	{
	}
    FX13 B 1 Bright
	{
	}
    FX13 CC 2 Bright
	{
	}
    FX13 C 1 Bright
	{
	}
    FX13 DD 2 Bright
	{
	}
    FX13 D 1 Bright
	{
	}
    FX13 EE 2 Bright
	{
	}
    FX13 E 1 Bright
	{
	}
    FX13 FFGGHH 2 Bright
	{
	}
    Stop
  }
}
actor MinotaurFX3CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX13 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" DDCCBBCCDDEEFFGGHH 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR MinotaurFX3Crisis : MinotaurFX3New
{
  States
  {
  Spawn:
    FX13 DDCC 2 Bright
	{
     A_SpawnItemEx("MinotaurFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX13 BB 2 Bright
	{
     A_SpawnItemEx("MinotaurFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX13 B 1 Bright
	{
	}
    FX13 CC 2 Bright
	{
     A_SpawnItemEx("MinotaurFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX13 C 1 Bright
	{
	}
    FX13 DD 2 Bright
	{
     A_SpawnItemEx("MinotaurFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX13 D 1 Bright
	{
	}
    FX13 EE 2 Bright
	{
     A_SpawnItemEx("MinotaurFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    FX13 E 1 Bright
	{
	}
    FX13 FFGGHH 2 Bright
	{
     A_SpawnItemEx("MinotaurFX3CrisisParticle",0,0,0,0,0,1.28);
	}
    Stop
  }
}

ACTOR MaulotaurNew : MaulotaurBase replaces Minotaur
{
  Health 3000
  Radius 28
  Height 100
  Mass 800
  Speed 16
  Damage 7
  Painchance 25
  Painchance "Fist", 38 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 63 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 38 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 85
  Painchance "GravityMP", 85
  Painchance "GravityHPMP", 85 
  DamageFactor "Crush", 2.4
  Monster
  +DROPOFF
  +FLOORCLIP
  +BOSS
  +NORADIUSDMG
  +DONTMORPH
  +NOTARGET
  +BOSSDEATH
  +AVOIDMELEE
  SeeSound "minotaur/sight"
  AttackSound "minotaur/attack1"
  PainSound "minotaur/pain"
  DeathSound "minotaur/death"
  ActiveSound "minotaur/active"
  DropItem "ArtiSuperHealth", 51
  DropItem "PhoenixRodAmmo", 84, 10
  DropItem "PhoenixRodHefty", 84
  DropItem "ArtiSuperHealth", 51

  States
  {
  Spawn:
    MNTR A 0 NoDelay 
    MNTR AB 10 A_MinotaurLook
    goto Spawn+1
  Roam:
    MNTR A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    MNTR ABCD 5
	{
     A_TakeInventory("MaulotaurChargeDefense",0x7FFFFFFF);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(4); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_MinotaurRoam;
	}
    Loop
  See:
    MNTR A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    MNTR ABCD 5 
	{
     A_TakeInventory("MaulotaurChargeDefense",0x7FFFFFFF);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(4); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_MinotaurChase;
	}
    Loop
  Melee:
    TNT1 A 0 
	{
     A_TakeInventory("MaulotaurChargeDefense",0x7FFFFFFF);
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
	}
    MNTR V 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    MNTR W 7
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	}
    MNTR X 12 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(9); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 23) { A_SetTics(11); }
	 A_MinotaurAtk1(4*random(1,8), -16);
	}
    Goto See
  Missile:
    TNT1 A 0 
	{
     A_TakeInventory("MaulotaurChargeDefense",0x7FFFFFFF);
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
	}
    MNTR V 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 if (random(1,256) <= 170) { A_MinotaurDecide; }
	}
    MNTR Y 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }
	 A_FaceTarget;
	}
    MNTR Z 9 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(8); }
	 A_MinotaurAtk2("MinotaurFX1","MinotaurFX1Crisis",5*random(1,8),3*random(1,8));
	}
    Goto See
  Hammer:
    TNT1 A 0 
	{
     A_TakeInventory("MaulotaurChargeDefense",0x7FFFFFFF);
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
	}
    MNTR V 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    MNTR W 7
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	}
    MNTR X 12 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(9); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 23) { A_SetTics(11); }
	 A_MinotaurAtk3(4*random(1,8), -16, "MinotaurFX2New", "MinotaurFX2Crisis");
	}
    Goto See
  HammerLoop:
    TNT1 A 0 
	{
     A_TakeInventory("MaulotaurChargeDefense",0x7FFFFFFF);
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
	}
    MNTR X 12
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(9); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 23) { A_SetTics(11); }
	}
    Goto Hammer
  Charge:
    TNT1 A 0 
	{
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
	 SetDamage(7*random(1,8));
	 A_MonsterCrisisCheck;
	 if(user_canusecrisisatk == 1) 
	 { 
	  A_PlayCrisisAtkSound;
	  SetDamage((7*random(1,8))*CallACS("CrisisMultiplier"));
	 }
	}
    MNTR U 2 A_MinotaurCharge
    Loop
  Pain:
    MNTR E 3
    MNTR E 6 A_Pain
    Goto See
  Pain.Fist:
    MNTR E 3
    MNTR E 6 A_Pain
    MNTR EE 3
    Goto See
  Pain.Kick:
    MNTR E 3
    MNTR E 6 A_Pain
    MNTR EEEE 3
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    MNTR F 6 A_MinotaurDeath
    MNTR G 5
    MNTR H 6 A_Scream
    MNTR I 5
    MNTR J 6
    MNTR K 5
    MNTR L 6
    MNTR M 5 A_NoBlocking
    MNTR N 6
    MNTR O 5
    MNTR P 6
    MNTR Q 5
    MNTR R 6
    MNTR S 5 
    MNTR T -1 A_BossDeath
    Stop
  FadeOut:
    MNTR E 6
    MNTR E 2 A_Scream
    MNTR E 5 A_SpawnItemEx("MinotaurSmokeExit")
    MNTR E 5
    MNTR E 5 A_NoBlocking
    MNTR E 5
    MNTR E 5 A_SetTranslucent(0.66, 0)
    MNTR E 5 A_SetTranslucent(0.33, 0)
    MNTR E 0 
    MNTR E 10 A_BossDeath
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    MNTR E 5 A_GenericFreezeDeath
    MNTR E 1 A_FreezeDeathChunks
    wait
  Raise:
    MNTR S 5 
    MNTR R 6 
    MNTR Q 5 
    MNTR P 6 
    MNTR O 5 
    MNTR N 6 
    MNTR M 5 
    MNTR L 6 
    MNTR K 5 
    MNTR J 6 
    MNTR I 5 
    MNTR H 6 
    MNTR G 5 
    MNTR F 6 
    goto See
  }
}
actor FMaulotaur : MaulotaurNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

ACTOR SnakeProjANew : SnakeProjA replaces SnakeProjA 
{
  Damage (1 * random(1,8))
  DamageType "Ice" DamageType "Magic" 
  Radius 12
  Height 8
  Speed 14
  FastSpeed 20
  Projectile
  -NOBLOCKMAP
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  +WINDTHRUST
  +SPAWNSOUNDSOURCE
  RenderStyle Add
  SeeSound "snake/attack"
  States
  {
  Spawn:
    SNFX AABBCCDD 2 Bright
	{
	}
    Loop
  Death:
    SNFX EF 5 Bright
    SNFX G 4 Bright
    SNFX HI 3 Bright
    Stop
  }
}
actor SnakeProjACrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    SNFX A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AABBCCDD 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR SnakeProjACrisis : SnakeProjANew 
{
  Damage ((1 * random(1,8)) * CallACS("CrisisMultiplier"))
  DamageType "Ice" DamageType "Magic" 
  Radius 12
  Height 8
  Speed 14
  FastSpeed 20
  Projectile
  -NOBLOCKMAP
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  +WINDTHRUST
  +SPAWNSOUNDSOURCE
  RenderStyle Add
  SeeSound "snake/attack"
  States
  {
  Spawn:
    SNFX AABBCCDD 2 Bright
	{
     A_SpawnItemEx("SnakeProjACrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    SNFX EF 5 Bright
    SNFX G 4 Bright
    SNFX HI 3 Bright
    Stop
  }
}

ACTOR SnakeProjBNew : SnakeProjANew replaces SnakeProjB 
{
  Damage (3 * random(1,8))
  DamageType "Fire" DamageType "Magic" 
  +NOBLOCKMAP
  -WINDTHRUST
  States
  {
  Spawn:
    SNFX JJJKKK 2 Bright
	{
	}
    Loop
  Death:
    SNFX LM 5 Bright
    SNFX N 4 Bright
    SNFX O 3 Bright
    Stop
  }
}
actor SnakeProjBCrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    SNFX A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" JJJKKK 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR SnakeProjBCrisis : SnakeProjBNew 
{
  Damage ((3 * random(1,8)) * CallACS("CrisisMultiplier"))
  DamageType "Fire" DamageType "Magic" 
  +NOBLOCKMAP
  -WINDTHRUST
  States
  {
  Spawn:
    SNFX JJJKKK 2 Bright
	{
     A_SpawnItemEx("SnakeProjBCrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    SNFX LM 5 Bright
    SNFX N 4 Bright
    SNFX O 3 Bright
    Stop
  }
}

ACTOR SnakeNew : AetheriusMonsterZSC // replaces Snake
{
  Health 280
  Radius 22
  Height 70
  Speed 10
  Painchance 48
  Painchance "Fist", 72 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 120 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 72 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 6.4
  Monster
  +FLOORCLIP
  +DONTHARMSPECIES
  AttackSound "snake/attack"
  SeeSound "snake/sight"
  PainSound "snake/pain"
  DeathSound "snake/death"
  ActiveSound "snake/active"
  Obituary "$OB_SNAKE"
  DropItem "PhoenixRodAmmoNew", 84
  DropItem "PhoenixRodAmmoNew", 84
  DropItem "PhoenixRodAmmoNew", 84
  DropItem "PhoenixRodAmmoNew", 84
  DropItem "PhoenixRodAmmoNew", 84
  Species "Ophidian"

  States
  {
  Spawn:
    SNKE A 0 NoDelay 
    SNKE AB 10 A_Look
    goto Spawn+1
  See:
    SNKE A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    SNKE ABCD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SNKE FF 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    SNKE FFF 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("SnakeProjANew", "SnakeProjACrisis", 32, 0, 0, CMF_CHECKTARGETDEAD);
	}
    SNKE FFF 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    SNKE F 4 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("SnakeProjBNew", "SnakeProjBCrisis", 32, 0, 0, CMF_CHECKTARGETDEAD);
	}
    Goto See
  Pain:
    SNKE E 3
    SNKE E 3 A_Pain
    Goto See
  Pain.Fist:
    SNKE E 3
    SNKE E 3 A_Pain
    SNKE EE 3
    Goto See
  Pain.Kick:
    SNKE E 3
    SNKE E 3 A_Pain
    SNKE EEEE 3
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SNKE G 5
    SNKE H 5 A_Scream
    SNKE IJKL 5
    SNKE M 5 A_NoBlocking
    SNKE NO 5 
    SNKE P -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SNKE E 5 A_GenericFreezeDeath
    SNKE E 1 A_FreezeDeathChunks
    wait
  Raise:
    SNKE P 5 
    SNKE ONMLKJIHG 5 
    goto See
  }
}
actor FSnake : SnakeNew
{
 -COUNTKILL 
 +FRIENDLY +THRUSPECIES +DONTHARMSPECIES
 Species "FriendlyMonsters"
 dropitem NoItemSpawn 1
}

// Hell Guard
actor HellGuard : AetheriusMonsterZSC 3114
{
  //$Category "ZDoom Monster pack"
  Health 420 // 300
  Radius 24
  Height 64
  Speed 12 // 8
  PainChance 50
  Painchance "Fist", 75 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 125 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 75 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 6.4
  Mass 750 // 500
  MONSTER 
  +FLOORCLIP
  SeeSound "hellguard/sight"
  PainSound "hellguard/pain"
  DeathSound "hellguard/death"
  ActiveSound "hellguard/idle"
  Obituary "%o was fried to cinders by an abyssal guard."
  MeleeDamage 12 // 8
  Species "Ophidian"
  Species "HellNoble"
  +DONTHARMSPECIES
  DropItem "PhoenixRodAmmo", 132, 5

  States
  {
  Spawn:
    HLGD A 0 NoDelay 
    HLGD AB 10 A_Look
    goto Spawn+1
  See:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    HLGD AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop
  Missile:
    TNT1 A 0
	{
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
	}
    HLGD E 8 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    HLGD F 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (random(-4,4)*2), 33, random(-3,3));
	}
    HLGD E 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_FaceTarget; } else { A_SetTics(0); }
	}
    HLGD F 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) 
	 { 
	  A_MonsterCrisisCheck;
	  A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (random(-4,4)*2), 33, random(-3,3));
	 } 
	 else 
	 { 
	  A_SetTics(0); 
	 }	 
	}
    HLGD E 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_FaceTarget;
	}
    HLGD F 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (random(-4,4)*2), 33, random(-3,3));
	}
    HLGD E 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_FaceTarget; } else { A_SetTics(0); }
	}
    HLGD F 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) 
	 { 
	  A_MonsterCrisisCheck;
	  A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (random(-4,4)*2), 33, random(-3,3));
	 } 
	 else 
	 { 
	  A_SetTics(0); 
	 }	 
	}
    HLGD E 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_FaceTarget;
	}
    HLGD F 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }

	 A_MonsterCrisisCheck;
	 A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (random(-4,4)*2), 33, random(-3,3));
	}
    Goto See
  Pain:
    HLGD G 2
    HLGD G 2 A_Pain
    Goto See
  Pain.Fist:
    HLGD G 2
    HLGD G 2 A_Pain
    HLGD GG 2
    Goto See
  Pain.Kick:
    HLGD G 2
    HLGD G 2 A_Pain
    HLGD GGGG 2
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HLGD H 6
    HLGD I 6 A_Scream
    HLGD J 6
    HLGD K 6 A_Fall
    HLGD L 6
    HLGD M 6 
    HLGD N -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    HLGD G 5 A_GenericFreezeDeath
    HLGD G 1 A_FreezeDeathChunks
    wait
  Raise:
    HLGD O 8 
    HLGD NMLKJI 8
    Goto See
  }
}

actor HellGuardBall
{
    Damage (6 * random(1,8))
    Radius 13
    Height 8
    Speed 12
    PROJECTILE
    RENDERSTYLE ADD
    ALPHA 0.67
    SeeSound "hellguard/shot"
    DeathSound "hellguard/shothit"
    Decal PlasmaScorchLower
    States
    {
    Spawn:
	    HGFB A 0 Bright NoDelay 
		{
		 A_ScaleVelocity(frandom(0.875,1.125));
		}
    Idle:
        HGFB ABCD 2 Bright
		{
		}
        Loop
    Death:
        HGFB EFGH 4 Bright
        Stop
    }
}
actor HellGuardBallCrisisParticle : BaseCrisisParticle
{
 alpha 0.4489

 States
 {
  Spawn:
    HGFB A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABCD 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
actor HellGuardBallCrisis : HellGuardBall
{
    Damage ((6 * random(1,8)) * CallACS("CrisisMultiplier"))
    States
    {
    Spawn:
	    HGFB A 0 Bright NoDelay 
		{
		 A_ScaleVelocity(frandom(0.875,1.125));
		}
    Idle:
        HGFB ABCD 2 Bright
		{
         A_SpawnItemEx("HellGuardBallCrisisParticle",0,0,0,0,0,1.28);
		}
        Loop
    Death:
        HGFB EFGH 4 Bright
        Stop
    }
}

ACTOR SorcererFX1New : SorcererFX1 replaces SorcererFX1 
{
  Damage (10 * random(1,8))
  DamageType "Fire" 
  Radius 10
  Height 10
  Speed 20
  FastSpeed 28
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  RenderStyle Add
  States
  {
  Spawn:
    FX14 AAABBBCCC 2 Bright
	{
	}
    Loop
  Death:
    FX14 DEFGH 5 Bright
    Stop
  }
}
actor SorcererFX1CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX14 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" AAABBBCCC 2 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR SorcererFX1Crisis : SorcererFX1New 
{
  Damage ((10 * random(1,8)) * CallACS("CrisisMultiplier"))
  DamageType "Fire" 
  Radius 10
  Height 10
  Speed 20
  FastSpeed 28
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  RenderStyle Add
  States
  {
  Spawn:
    FX14 AAABBBCCC 2 Bright
	{
     A_SpawnItemEx("SorcererFX1CrisisParticle",0,0,0,0,0,1.28);
	}
    Loop
  Death:
    FX14 DEFGH 5 Bright
    Stop
  }
}

ACTOR DSparilMountedNew : DSparilBase replaces Sorcerer1
{
  Health 24000
  Radius 28
  Height 100
  Mass 800
  Speed 16
  Painchance 56
  Painchance "Fist", 84 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 140 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 84 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 1
  Painchance "GravityMP", 1
  Painchance "GravityHPMP", 1 
  DamageFactor "Crush", 0.5
  Monster
  +BOSS
  +DONTMORPH
  +NORADIUSDMG
  +NOTARGET
  +NOICEDEATH
  +FLOORCLIP
  +DONTGIB
  +AVOIDMELEE
  SeeSound "dsparilserpent/sight"
  AttackSound "dsparilserpent/attack"
  PainSound "dsparilserpent/pain"
  DeathSound "dsparilserpent/death"
  ActiveSound "dsparilserpent/active"
  Obituary "$OB_DSPARIL1"
  HitObituary "$OB_DSPARIL1HIT"

  States
  {
  Pain.Charm: Goto See
  Spawn:
    SRCR A 0 NoDelay 
    SRCR AB 10 A_Look
    goto Spawn+1
  See:
    SRCR A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    SRCR ABCD 5 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(4); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_Sor1Chase;
	}
    Loop
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SRCR Q 7 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	}
    SRCR R 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    SRCR S 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_Srcr1Attack(8*random(1,8), "SorcererFX1New", "SorcererFX1Crisis");
	}
    Goto See
  Missile2:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SRCR S 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    SRCR Q 7 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	}
    SRCR R 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    SRCR S 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_Srcr1Attack(8*random(1,8), "SorcererFX1New", "SorcererFX1Crisis");
	}
    Goto See
  Pain:
    SRCR Q 6 A_Sor1Pain
    Goto See
  Pain.Fist:
    SRCR Q 6 A_Sor1Pain
    SRCR Q 6
    Goto See
  Pain.Kick:
    SRCR Q 6 A_Sor1Pain
    SRCR QQ 6
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SRCR E 7
    SRCR F 7 A_Scream
    SRCR G 7
    SRCR HIJK 6 
    SRCR L 25 A_PlaySound("dsparil/zap", CHAN_BODY, 1, FALSE, ATTN_NONE)
    SRCR MN 5
    SRCR O 4
    SRCR L 20 A_PlaySound("dsparil/zap", CHAN_BODY, 1, FALSE, ATTN_NONE)
    SRCR MN 5
    SRCR O 4
    SRCR L 12
    SRCR P -1 A_SorcererRise
  Ice:
    goto Death
  }
}

ACTOR Sorcerer2FX1New : Sorcerer2FX1 replaces Sorcerer2FX1 
{ 
  Damage (10 * random(1,8))  
  DamageType "Thunder" DamageType "Magic" 
  Radius 10
  Height 6
  Speed 20
  FastSpeed 28
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  RenderStyle Add  
  States
  {
  Spawn:
    FX16 ABC 3 Bright 
	{
	 A_BlueSpark;
	}
    Loop
  Death:
    FX16 G 5 Bright A_Explode(random(80,111),random(80,111),0)
    FX16 HIJKL 5 Bright
    Stop
  }
}
actor Sorcerer2FX1CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX16 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" ABC 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR Sorcerer2FX1Crisis : Sorcerer2FX1New 
{ 
  Damage ((10 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FX16 ABC 3 Bright 
	{
     A_SpawnItemEx("Sorcerer2FX1CrisisParticle",0,0,0,0,0,1.28);
	 A_BlueSpark;
	}
    Loop
  Death:
    FX16 G 5 Bright A_Explode((random(80,111)*CallACS("CrisisMultiplier")),random(80,111),0)
    FX16 HIJKL 5 Bright
    Stop
  }
}

ACTOR Sorcerer2FX2New : Sorcerer2FX2 replaces Sorcerer2FX2 
{ 
  Damage (10 * random(1,8))  
  DamageType "Magic" 
  Height 6
  Speed 6
  Damage 10
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  RenderStyle Add

  States
  {
  Spawn:
    FX11 AAAAAAA 5 Bright
	{
	}
    FX11 A 5 Bright 
	{
	 A_GenWizard;
	}
    FX11 B 5 Bright
	{
	}
    Goto Spawn+1
  Death:
    FX11 CDEFG 5 Bright
    Stop
  }
}
actor Sorcerer2FX2CrisisParticle : BaseCrisisParticle
{
 States
 {
  Spawn:
    FX11 A 0 NoDelay { A_SetUserVarFloat("user_basealpha",alpha*0.10); A_SetUserVarFloat("user_basescaleX",scaleX*0.10); A_SetUserVarFloat("user_basescaleY",scaleY*0.10); }
	goto Idle
  Idle:
    "####" A 3 Bright { A_SetScale(scaleX-user_basescaleX,scaleY-user_basescaleY); if (scalex < 0.00 && scaley < 0.00) { A_FadeOut(2); } A_FadeOut(user_basealpha); }
    loop
 }
}
ACTOR Sorcerer2FX2Crisis : Sorcerer2FX2New 
{ 
  Damage ((10 * random(1,8)) * CallACS("CrisisMultiplier"))
  States
  {
  Spawn:
    FX11 AAAAAAAAAAAAA 3 Bright
	{
     A_SpawnItemEx("Sorcerer2FX2CrisisParticle",0,0,0,0,0,1.28);
	}
    FX11 A 3 Bright 
	{
	 A_GenWizard;
	}
    FX11 BB 3 Bright
	{
	}
    Goto Spawn+1
  Death:
    FX11 CDEFG 5 Bright
    Stop
  }
}

ACTOR DSparilUnmountedNew : DSparilBase replaces Sorcerer2
{
  Health 56000
  Radius 16
  Height 70
  Mass 300
  Speed 14
  Painchance 32
  Painchance "Fist", 48 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 80 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 48 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 1
  Painchance "GravityMP", 1
  Painchance "GravityHPMP", 1 
  DamageFactor "Crush", 0.5
  Monster
  +DROPOFF
  +BOSS
  +DONTMORPH
  +FULLVOLACTIVE
  +NORADIUSDMG
  +NOTARGET
  +NOICEDEATH
  +FLOORCLIP
  +BOSSDEATH
  +AVOIDMELEE
  SeeSound "dsparil/sight"
  AttackSound "dsparil/attack"
  PainSound "dsparil/pain"
  ActiveSound "dsparil/active"
  Obituary "$OB_DSPARIL2"
  HitObituary "$OB_DSPARIL2HIT"

  States
  {
  Pain.Charm: Goto See
  Spawn:
    SOR2 A 0 NoDelay 
    SOR2 MN 10 A_Look
    goto Spawn+1
  See:
    SOR2 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    SOR2 MNOP 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Rise:
    SOR2 A 0 
    SOR2 A 0 
    SOR2 AB 4
    SOR2 C 4 A_PlaySound("dsparil/rise", CHAN_BODY, 1, FALSE, ATTN_NONE)
    SOR2 DEF 4
    SOR2 G 12 A_PlaySound("dsparil/sight", CHAN_BODY, 1, FALSE, ATTN_NONE)
    Goto See
  Pain:
    SOR2 Q 3
    SOR2 Q 6 A_Pain
    Goto See
  Pain.Fist:
    SOR2 Q 3
    SOR2 Q 6 A_Pain
    SOR2 Q 3
    Goto See
  Pain.Kick:
    SOR2 Q 3
    SOR2 Q 6 A_Pain
    SOR2 QQ 3
    Goto See
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SOR2 R 9 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(8); }
	 A_Srcr2Decide;
	}
    SOR2 S 9 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(8); }
	 A_FaceTarget;
	}
    SOR2 T 20 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(11); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(12); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 140) { A_SetTics(13); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); }
	 A_Srcr2Attack(20*random(1,8),"Sorcerer2FX1New","Sorcerer2FX1Crisis","Sorcerer2FX2New","Sorcerer2FX2Crisis");
	}
    Goto See
  Teleport:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0) // makes sure D'Sparil is as stealth as possible when proceeding to teleport if flagged as stealth
    SOR2 LKJIHG 6
    Goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SDTH A 8 A_Sor2DthInit
    SDTH B 8
    SDTH C 8 A_PlaySound("dsparil/scream", CHAN_BODY, 1, FALSE, ATTN_NONE)
  DeathLoop:
    SDTH DE 7
    SDTH F 7 A_Sor2DthLoop
    SDTH G 6 A_PlaySound("dsparil/explode", CHAN_BODY, 1, FALSE, ATTN_NONE)
    SDTH H 6 A_SpawnItemEx("DSparilStaff",0,0,0,random(-12,12),random(-12,12),random(-12,12))
    SDTH I 18
    SDTH J 6 A_NoBlocking
    SDTH K 6 A_PlaySound("dsparil/bones", CHAN_BODY, 1, FALSE, ATTN_NONE)
    SDTH LMN 6 
    SDTH O -1 A_BossDeath
    Stop
  Ice:
    goto Death
  }
}


// Undead Warrior/Knight spawner
actor KnightSpawner : CustomInventory replaces Knight
{
 +ISMONSTER
 +RANDOMIZE
 states
 {
    UpgradeClass2b:
     KNIG A 0 A_SpawnItemEx("DeathKnightGhost",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass2:
     KNIG A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass2b")
     KNIG A 0 A_SpawnItemEx("DeathKnight",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass:
     KNIG A 0 A_JumpIf( random(1,2048) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass2")
     KNIG A 0 A_SpawnItemEx("KnightGhostNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   KNIG A 0 
   KNIG A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   KNIG A 0 A_SpawnItemEx("KnightNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// Undead Warrior/Knight spawner
actor KnightGhostSpawner : CustomInventory replaces KnightGhost
{
 +ISMONSTER
 +RANDOMIZE
 states
 {
    UpgradeClass:
     KNIG A 0 A_SpawnItemEx("DeathKnightGhost",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   KNIG A 0 
   KNIG A 0 A_JumpIf( random(1,2048) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   KNIG A 0 A_SpawnItemEx("KnightGhostNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// Ophidian spawner
actor SnakeSpawner : CustomInventory replaces Snake
{
 +ISMONSTER
 +RANDOMIZE
 states
 {
    UpgradeClass:
     TNT1 A 0 A_SpawnItemEx("HellGuard",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   TNT1 A 0 
   TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   TNT1 A 0 A_SpawnItemEx("SnakeNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// Gargoyle Leader spawner
actor GargoyleLeaderSpawner : CustomInventory replaces HereticImpLeader
{
 +FLOAT
 +NOGRAVITY
 +SPAWNFLOAT
 +DONTOVERLAP
 +ISMONSTER
 +RANDOMIZE
 states
 {
      UpgradeClass1a:
       TNT1 A 0 A_SpawnItemEx("PlagueImp",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
       stop

      UpgradeClass1b:
       TNT1 A 0 A_SpawnItemEx("WatcherImp",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
       stop

	UpgradeClass1:
	 TNT1 A 0 A_Jump(256, "UpgradeClass1a", "UpgradeClass1b")
	 stop

  Spawn:
   TNT1 A 0 
   TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass1")
   TNT1 A 0 A_SpawnItemEx("HereticImpLeaderNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// Gargoyle spawner
actor GargoyleSpawner : CustomInventory replaces HereticImp
{
 +FLOAT
 +NOGRAVITY
 +SPAWNFLOAT
 +DONTOVERLAP
 +ISMONSTER
 +RANDOMIZE
 states
 {
      UpgradeClass2a:
       TNT1 A 0 A_SpawnItemEx("PlagueImp",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
       stop

      UpgradeClass2b:
       TNT1 A 0 A_SpawnItemEx("WatcherImp",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
       stop

	UpgradeClass2:
	 TNT1 A 0 A_Jump(256, "UpgradeClass2a", "UpgradeClass2b")
	 stop

    UpgradeClass:
     TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass2")
     TNT1 A 0 A_SpawnItemEx("HereticImpLeaderNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   TNT1 A 0 
   TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   TNT1 A 0 A_SpawnItemEx("HereticImpNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// Golem Spawner
actor GolemSpawner : CustomInventory replaces Mummy
{
 +ISMONSTER
 +RANDOMIZE
 states
 {
    UpgradeClass4b:
     TNT1 A 0 A_SpawnItemEx("IceGolemGhost",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass4:
     TNT1 A 0 A_Jump(64,"UpgradeClass4b")
     TNT1 A 0 A_SpawnItemEx("IceGolem",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass3:
     TNT1 A 0 A_JumpIf( random(1,2048) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass4")
     TNT1 A 0 A_SpawnItemEx("MummyLeaderGhostNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass2:
     TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass3")
     TNT1 A 0 A_SpawnItemEx("MummyLeaderNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass:
     TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass2")
     TNT1 A 0 A_SpawnItemEx("MummyGhostNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   TNT1 A 0 
   TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   TNT1 A 0 A_SpawnItemEx("MummyNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// Golem Ghost Spawner
actor GolemGhostSpawner : CustomInventory replaces MummyGhost
{
 +ISMONSTER
 +RANDOMIZE
 states
 {
    UpgradeClass3b:
     TNT1 A 0 A_SpawnItemEx("IceGolemGhost",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass3:
     TNT1 A 0 A_Jump(64,"UpgradeClass3b")
     TNT1 A 0 A_SpawnItemEx("IceGolem",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass2:
     TNT1 A 0 A_JumpIf( random(1,2048) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass3")
     TNT1 A 0 A_SpawnItemEx("MummyLeaderGhostNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass:
     TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass2")
     TNT1 A 0 A_SpawnItemEx("MummyLeaderNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   TNT1 A 0 
   TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   TNT1 A 0 A_SpawnItemEx("MummyGhostNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// NitroGolem Spawner
actor NitroGolemSpawner : CustomInventory replaces MummyLeader
{
 +ISMONSTER
 +RANDOMIZE
 states
 {
    UpgradeClass2b:
     TNT1 A 0 A_SpawnItemEx("IceGolemGhost",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass2:
     TNT1 A 0 A_Jump(64,"UpgradeClass2b")
     TNT1 A 0 A_SpawnItemEx("IceGolem",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass:
     TNT1 A 0 A_JumpIf( random(1,2048) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass2")
     TNT1 A 0 A_SpawnItemEx("MummyLeaderGhostNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   TNT1 A 0 
   TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   TNT1 A 0 A_SpawnItemEx("MummyLeaderNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// NitroGolem Ghost Spawner
actor NitroGolemGhostSpawner : CustomInventory replaces MummyLeaderGhost
{
 +ISMONSTER
 +RANDOMIZE
 states
 {
    UpgradeClass1b:
     TNT1 A 0 A_SpawnItemEx("IceGolemGhost",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass:
     TNT1 A 0 A_Jump(64,"UpgradeClass1b")
     TNT1 A 0 A_SpawnItemEx("IceGolem",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   TNT1 A 0 
   TNT1 A 0 A_JumpIf( random(1,2048) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   TNT1 A 0 A_SpawnItemEx("MummyLeaderGhostNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// IronLich Spawner
actor LichSpawner : CustomInventory replaces Ironlich
{
 +ISMONSTER
 +RANDOMIZE
 states
 {
    UpgradeClass3:
     TNT1 A 0 A_SpawnItemEx("BloodLich",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass2:
     TNT1 A 0 A_JumpIf( random(1,1024) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass3")
     TNT1 A 0 A_SpawnItemEx("GoldLich",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

    UpgradeClass:
     TNT1 A 0 A_JumpIf( random(1,512) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass2")
     TNT1 A 0 A_SpawnItemEx("IceLich",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   TNT1 A 0 
   TNT1 A 0 A_JumpIf( random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   TNT1 A 0 A_SpawnItemEx("IronLichNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

// Disciple Spawner
actor WizardSpawner : CustomInventory replaces Wizard
{
 +FLOAT
 +NOGRAVITY
 +DONTOVERLAP
 +ISMONSTER
 +RANDOMIZE
 states
 {
    UpgradeClass:
     TNT1 A 0 A_SpawnItemEx("Banshee",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
     stop

  Spawn:
   TNT1 A 0 
   TNT1 A 0 A_JumpIf( random(1,2048) <= ACS_NamedExecuteWithResult("GetEvolveChance") , "UpgradeClass")
   TNT1 A 0 A_SpawnItemEx("WizardNew",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL | SXF_CLEARCALLERSPECIAL,0,tid)
   stop
 }
}

