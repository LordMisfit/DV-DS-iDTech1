// ****************
// ***** AMMO *****
// ****************

ACTOR GoldWandAmmoNew : GoldWandAmmo { }
ACTOR GoldWandHeftyNew : GoldWandHefty { }
ACTOR CrossbowAmmoNew : CrossbowAmmo { }
ACTOR CrossbowHeftyNew : CrossbowHefty { }
ACTOR BlasterAmmoNew : BlasterAmmo { }
ACTOR BlasterHeftyNew : BlasterHefty { }
ACTOR PhoenixRodAmmoNew : PhoenixRodAmmo { }
ACTOR PhoenixRodHeftyNew : PhoenixRodHefty { }
ACTOR MaceAmmoNew : MaceAmmo { }
ACTOR MaceHeftyNew : MaceHefty { }

// **************************
// ***** AMMO REPLACERS *****
// **************************

ACTOR GoldWandAmmoSpawner : GoldWandAmmo replaces GoldWandAmmo
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("GoldWandAmmoNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("GoldWandAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("GoldWandAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("DiarisArrow",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   25) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

ACTOR GoldWandHeftySpawner : GoldWandHefty replaces GoldWandHefty
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("GoldWandHeftyNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("GoldWandHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("GoldWandHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("DiarisArrowQuiver",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana2",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

ACTOR CrossbowAmmoSpawner : CrossbowAmmo replaces CrossbowAmmo
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("CrossbowAmmoNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("CrossbowAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("CrossbowAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=  100) { A_SpawnItemEx("DiarisArrow",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   25) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

ACTOR CrossbowHeftySpawner : CrossbowHefty replaces CrossbowHefty
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("CrossbowHeftyNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("CrossbowHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("CrossbowHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=  100) { A_SpawnItemEx("DiarisArrowQuiver",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana2",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

ACTOR BlasterAmmoSpawner : BlasterAmmo replaces BlasterAmmo
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("BlasterAmmoNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("BlasterAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("BlasterAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("DiarisArrow",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   25) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

ACTOR BlasterHeftySpawner : BlasterHefty replaces BlasterHefty
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("BlasterHeftyNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("BlasterHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("BlasterHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("DiarisArrowQuiver",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana2",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

ACTOR PhoenixRodAmmoSpawner : PhoenixRodAmmo replaces PhoenixRodAmmo
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("PhoenixRodAmmoNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("PhoenixRodAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("PhoenixRodAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=  100) { A_SpawnItemEx("DiarisArrow",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   25) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

ACTOR PhoenixRodHeftySpawner : PhoenixRodHefty replaces PhoenixRodHefty
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("PhoenixRodHeftyNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("PhoenixRodHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("PhoenixRodHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=  100) { A_SpawnItemEx("DiarisArrowQuiver",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana2",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

ACTOR MaceAmmoSpawner : MaceAmmo replaces MaceAmmo
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("MaceAmmoNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("MaceAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("MaceAmmoNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("DiarisArrow",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   25) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

ACTOR MaceHeftySpawner : MaceHefty replaces MaceHefty
{
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
     if (Random(1,1000) <= 1000) { A_SpawnItemEx("MaceHeftyNew",0,0,0,0,0,0); }
	 if (Random(1,1000) <=  200) { A_SpawnItemEx("MaceHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   75) { A_SpawnItemEx("MaceHeftyNew",random(-8,8),random(-8,8),0,random(-8,8),random(-8,8),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("DiarisArrowQuiver",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=  125) { A_SpawnItemEx("DoomSpellMana2",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	 if (Random(1,1000) <=   50) { A_SpawnItemEx("RandomMagicSpawner",random(-4,4),random(-4,4),0,random(-4,4),random(-4,4),0); }
	}
    TNT1 A 0
    Stop
  }
}

// *******************
// ***** WEAPONS *****
// *******************
ACTOR GoldWandPuff1New : GoldWandPuff1 { DamageType "Magic" }
ACTOR GoldWandPuff2New : GoldWandPuff2 { DamageType "Magic" }
ACTOR GoldWandFX1New : GoldWandFX1 
{ 
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",41)) // 2
 DamageType "Magic" 
}
ACTOR GoldWandFX2New : GoldWandFX2 
{ 
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",42)) // 1
 DamageType "Magic" 
}

ACTOR GoldWandNew : HereticWeaponBase replaces GoldWand
{
  +BLOODSPLATTER
  Weapon.Kickback 150
  Weapon.SelectionOrder 2000
  Weapon.AmmoGive 25
  Weapon.AmmoType1 "GoldWandAmmo"
  Weapon.AmmoType2 "GoldWandAmmo"
  Weapon.AmmoUse1 1  
  Weapon.AmmoUse2 1  
  Weapon.YAdjust 0
  Inventory.PickupMessage "$TXT_WPNGOLDWAND" // "GOLD WAND"
  Obituary "$OB_MPGOLDWAND"
  Tag "Elven Wand"

  States
  {
  Spawn:
    GWAN A 0 NoDelay
	{
	 if (CountInv("GoldWandNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualGoldWandNew");
	  A_FadeOut(1,1);
	 }
	}
    GWAN A 1
    Loop
  Despawn:
    GWAN A 0
    Stop
  Ready:
    GWND A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    GWND A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    GWND A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    GWND B 3 
    GWND C 5
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
	 }
	}
    GWND D 3
    GWND D 0 A_ReFire
    Goto Ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",1,2) == 0, "Ready")
    GWND B 3 
    GWND C 4 // A_FireGoldWandPL2
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
	 }
	}
    GWND D 3
    GWND D 0 A_ReFire
    Goto Ready
  }
}

ACTOR DualGoldWandNew : GoldWandNew
{
  +BLOODSPLATTER
  Weapon.Kickback 150
  Weapon.SelectionOrder 2000
  Weapon.AmmoGive 25
  Weapon.AmmoType1 "GoldWandAmmo"
  Weapon.AmmoType2 "GoldWandAmmo"
  Weapon.AmmoUse1 1  
  Weapon.AmmoUse2 1  
  Weapon.YAdjust 0
  Inventory.PickupMessage "$TXT_WPNGOLDWAND" // "GOLD WAND"
  Obituary "$OB_MPGOLDWAND"
  Tag "Dual Elven Wands"
  States
  {
  Spawn:
    GWAN A -1
    Stop
  Ready:
    GWN2 A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    GWN2 A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    GWN2 A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    GWN2 B 3 
    GWN2 CD 5
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",29,1)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
	 }
	}
    GWN2 E 3

    GWN2 E 0 A_ReFire
    Goto Ready
  AltFire: // 10 Frames
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",2,2) == 0, "Ready")
    GWN2 B 3 
    GWN2 CD 4 // A_FireGoldWandPL2
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_SetAngle(angle-5.625);
 	  A_FireProjectile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",30,1)),"GoldWandPuff2New",0);
 	  A_FireProjectile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
	 }
	}
    GWN2 E 3

    GWN2 E 0 A_ReFire
    Goto Ready
  }
}

ACTOR CrossbowFX1New : CrossbowFX1 
{
  DamageType "Magic"
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",21)) // 10
  Speed 30
  Radius 11
  Height 8
  Projectile
  RenderStyle Add
  SeeSound "weapons/bowshoot"
  DeathSound "weapons/bowhit"
  Obituary "$OB_MPCROSSBOW"
  States
  {
  Spawn:
    FX03 B 0 NoDelay
  Idle:
    FX03 B 1 Bright
    Loop
  Death:
    FX03 HIJ 8 Bright
    Stop
  }
}
ACTOR CrossbowFX2New : CrossbowFX2
{
  DamageType "Magic" 
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",22)) // 6
  Speed 32
  Obituary "$OB_MPPCROSSBOW"
  States
  {
  Spawn:
    FX03 B 0 NoDelay
  Idle:
    FX03 B 1 Bright A_SpawnItemEx("CrossbowFX4", random2[BoltSpark]()*0.015625, random2[BoltSpark]()*0.015625,
                                  0, 0, 0, 0, 0, SXF_ABSOLUTEPOSITION, 50)
    Loop
  }
}
ACTOR CrossbowFX3New : CrossbowFX3
{
  DamageType "Magic" 
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",23)) // 2
  Speed 20
  SeeSound ""
  -NOBLOCKMAP
  +WINDTHRUST
  +THRUGHOST
  States
  {
  Spawn:
    FX03 A 0 NoDelay
  Idle:
    FX03 A 1 Bright
    Loop
  Death:
    FX03 CDE 8 Bright
    Stop
  }
}

ACTOR CrossbowNew : HereticWeaponBase replaces Crossbow
{
  Weapon.SelectionOrder 800
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoGive 10
  Weapon.AmmoType1 "CrossbowAmmo"
  Weapon.AmmoType2 "CrossbowAmmo"
  Weapon.YAdjust 0
  Inventory.PickupMessage "$TXT_WPNCROSSBOW"
  Tag "$TAG_CROSSBOW"
  States
  {
  Spawn:
    WBOW A 0 NoDelay
	{
	 if (random(1,10) == 25)
	 {
	  A_SpawnItemEx("DiarisLongBow");
	  A_FadeOut(1,1);
	 }
	}
    WBOW A 0
	{
	 if (random(1,10) == 10)
	 {
	  A_SpawnItemEx("SuperCrossbowNew");
	  A_FadeOut(1,1);
	 }
	}
  Idle:
    WBOW A 0
	{
	 if (CountInv("CrossbowNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualCrossbowNew");
	  A_FadeOut(1,1);
	 }
	}
    WBOW A 1
    Loop
  Ready:
    CRBW AAAAAABBBBBBCCCCCC 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_Lower; }
    }
    CRBW A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_Raise; }
    }
    CRBW A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    CRBW D 6
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX1New",    0, 1,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX1New",    0, 1,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile ("CrossbowFX1New",    0, 1,  0, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5, 0,  2, 3);
	 }
	}
    CRBW EFGH 3
    CRBW AB 4
    CRBW C 5 A_ReFire
    Goto Ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",1,2) == 0, "Ready")
    CRBW D 5 // A_FireCrossbowPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX2New",    0, 1,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX2New",    0, 1,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile ("CrossbowFX2New",    0, 1,  0, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireProjectile ("CrossbowFX3New",    9, 0,  4, 3);
	 }
	}
    CRBW E 3
    CRBW F 2
    CRBW G 3
    CRBW H 2
    CRBW A 3
    CRBW B 3
    CRBW C 4 A_ReFire
    Goto Ready
  }
}

ACTOR DualCrossbowNew : HereticWeaponBase
{
  Weapon.SelectionOrder 800
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoGive 10
  Weapon.AmmoType1 "CrossbowAmmo"
  Weapon.AmmoType2 "CrossbowAmmo"
  Weapon.YAdjust 0
  Inventory.PickupMessage "$TXT_WPNCROSSBOW"
  Tag "Dual Ethereal Crossbows"

  States
  {
  Spawn:
    WBOW A -1
    Stop
  Ready:
    CRBD AAAAAABBBBBBCCCCCC 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_Lower; }
    }
    CRBD A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_Raise; }
    }
    CRBD A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    CRBD D 6
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX1New",    0-4, 1,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX1New",    0-4, 1,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile ("CrossbowFX1New",    0-4, 1,  0-2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
	 }
	}
    CRBD E 6
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX1New",    0+4, 1,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX1New",    0+4, 1,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile ("CrossbowFX1New",    0+4, 1,  0+2, 3);
      A_FireProjectile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
	 }
	}
    CRBD FGH 3
    CRBD AB 4
    CRBD C 5 A_ReFire
    Goto Ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",2,2) == 0, "Ready")
    CRBD D 5 // A_FireCrossbowPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX2New",    0-4, 1,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX2New",    0-4, 1,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile ("CrossbowFX2New",    0-4, 1,  0-2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireProjectile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
	 }
	}
    CRBD E 5 // A_FireCrossbowPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX2New",    0+4, 1,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX2New",    0+4, 1,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      A_SetAngle(angle-15);
      A_FireProjectile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile ("CrossbowFX2New",    0+4, 1,  0+2, 3);
      A_FireProjectile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireProjectile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireProjectile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireProjectile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
	 }
	}
    CRBD F 3
    CRBD G 2
    CRBD H 3
    CRBD A 3
    CRBD B 3
    CRBD C 4 A_ReFire
    Goto Ready
  }
}

ACTOR RipperNew
{
  DamageType "Magic" 
  Radius 8
  Height 6
  Speed 14
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",24)) // 1
  Projectile
  +RIPPER
  DeathSound "weapons/blasterpowhit"
  Obituary "$OB_MPPBLASTER"
  States
  {
  Spawn:
    FX18 M 4
    FX18 N 5
    Loop
  Death:
    FX18 OPQRS 4 Bright
    Stop
  }
}
ACTOR BlasterPuffNew : BlasterPuff 
{ 
 DamageType "Magic" 
}
ACTOR BlasterFX1New : BlasterFX1 
{
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",28)) //2
  DamageType "Magic"
  States
  {
  Spawn:
    ACLO E 200
    Loop
  Death:
    FX18 A 3 Bright // A_SpawnRippers
	{
     A_CustomMissile("RipperNew",0,0,  0,6);
     A_CustomMissile("RipperNew",0,0, 45,6);
     A_CustomMissile("RipperNew",0,0, 90,6);
     A_CustomMissile("RipperNew",0,0,135,6);
     A_CustomMissile("RipperNew",0,0,180,6);
     A_CustomMissile("RipperNew",0,0,225,6);
     A_CustomMissile("RipperNew",0,0,270,6);
     A_CustomMissile("RipperNew",0,0,315,6);
	}
    FX18 B 3 Bright
    FX18 CDEFG 4 Bright
    Stop
  }
}

ACTOR DragonClawNew : HereticWeaponBase replaces Blaster
{
  +BLOODSPLATTER
  Weapon.SelectionOrder 500
  Weapon.AmmoGive 30
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "BlasterAmmo"
  Weapon.AmmoType2 "BlasterAmmo"
  Weapon.YAdjust 0
  Inventory.PickupMessage "$TXT_WPNBLASTER"
  Tag "$TAG_BLASTER"
  Obituary "$OB_MPBLASTER"
  States
  {
  Spawn:
    WBLS A 0 NoDelay
	{
	 if (CountInv("DragonClawNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualDragonClawNew");
	  A_FadeOut(1,1);
	 }
	}
    WBLS A 1
    Loop
  Ready:
    FBLS A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower 
    FBLS A 1 A_Lower
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise 
    FBLS A 1 A_Raise
    Loop
  Fire:
    FBLS BC 3
  Hold:
    FBLS D 2
    {
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
	 }
	}
    FBLS CB 2
    FBLS A 0 A_ReFire
    Goto Ready
  AltFire:
    FBLS BC 0
  AltHold:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",1,2) == 0, "Ready")
    FBLS D 3 
	{
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
  	  A_FireProjectile("BlasterFX1New",0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      A_SetAngle(angle-15);
  	  A_FireProjectile("BlasterFX1New",0,1);
      A_SetAngle(angle-15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
  	  A_FireProjectile("BlasterFX1New",0,1);
	 }
	}
    FBLS CB 4
    FBLS A 0 A_ReFire
    Goto Ready
  }
}

ACTOR DualDragonClawNew : HereticWeaponBase
{
  +BLOODSPLATTER
  Weapon.SelectionOrder 500
  Weapon.AmmoGive 30
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "BlasterAmmo"
  Weapon.AmmoType2 "BlasterAmmo"
  Weapon.YAdjust 0
  Inventory.PickupMessage "$TXT_WPNBLASTER"
  Tag "Dual Dragon Claws"
  Obituary "$OB_MPBLASTER"
  States
  {
  Spawn:
    WBLS A -1
    Stop
  Ready:
    FDBL A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    FDBL A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    FDBL A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    FDBL BC 3
  Hold:
    FDBL DE 2
    {
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(ACS_NamedExecuteWithResult("GetPlayerATKDMG",27,1)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
	 }
	}
    FDBL FG 2
    FDBL A 0 A_ReFire
    Goto Ready
  AltFire:
    FDBL BC 0
  AltHold:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",2,2) == 0, "Ready")
    FDBL DE 3 
	{
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
  	  A_FireProjectile("BlasterFX1New",0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
  	  A_FireProjectile("BlasterFX1New",0,0);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      A_SetAngle(angle-15);
  	  A_FireProjectile("BlasterFX1New",0,1);
      A_SetAngle(angle-15);
  	  A_FireProjectile("BlasterFX1New",0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
  	  A_FireProjectile("BlasterFX1New",0,1);
	 }
	}
    FDBL FG 4
    FDBL A 0 A_ReFire
    Goto Ready
  }
}

ACTOR HornRodFX1New : HornRodFX1 
{ 
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",31)) //2
  DamageType "Magic" 
  SeeSound ""
  States
  {
  Idle:
    FX00 A 0 A_Jump(128,2)
  Spawn:
    FX00 AB 6 Bright
    Loop
  }	
}
ACTOR HornRodFX2New : HornRodFX2 
{ 
  var int user_fuse;
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",32)) //2
  DamageType "Acid"
  DamageType "Magic" 
  +SEEKERMISSILE
  States
  {
  Spawn:
    FX00 C 0 Bright NoDelay A_ScaleVelocity(1.0625)
    FX00 C 0 Bright A_SetUserVar("user_fuse",random(120,160))
    FX00 C 3 Bright
    FX00 D 3 Bright A_SeekerMissile(10,30,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,96,32)
    FX00 E 3 Bright
    FX00 F 3 Bright A_SeekerMissile(10,30,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,96,32)
    Loop
  Death:
    FX00 H 5 Bright // A_AddPlayerRain
    FX00 I 5 Bright A_Explode(16+random(-9,9),32,0)
    FX00 J 4 Bright
    FX00 KLM 3 Bright
    FX00 G 1 A_HideInCeiling
//  Wait
  RainLoop:
    FX00 G 0 // A_SkullRodStorm
	{
     A_SpawnItemEx("RainPillarNew",random(-64,64),random(-64,64),(((ceilingz-floorz)*1)/2)-(random(4,12)),random(-0.25,0.25),random(-0.25,0.25),random(-14,-10),0,SXF_NOCHECKPOSITION,16);
     A_SpawnItemEx("RainPillarNew",random(-64,64),random(-64,64),(((ceilingz-floorz)*1)/2)-(random(4,12)),random(-0.25,0.25),random(-0.25,0.25),random(-14,-10),0,SXF_NOCHECKPOSITION,248);
     A_SetUserVar("user_fuse",user_fuse-1);
    }
    FX00 G 1 A_JumpIf(user_fuse<=0,"End")
    Loop
  End:
    TNT1 A 0 A_FadeOut(1)
    stop
  }
}
ACTOR RainPillarNew : RainPillar replaces RainPillar 
{
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",43)) //5
 DamageType "Magic" 
 Height 5
}

ACTOR HellStaffNew : HereticWeaponBase replaces SkullRod
{
  Weapon.SelectionOrder 200
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoGive1 50
  Weapon.YAdjust 0
  Weapon.AmmoType1 "SkullRodAmmo"
  Weapon.AmmoType2 "SkullRodAmmo"
  Inventory.PickupMessage "$TXT_WPNSKULLROD"
  Tag "$TAG_SKULLROD"

  States
  {
  Spawn:
    WSKL A 0 NoDelay
	{
	 if (CountInv("HellStaffNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualHellStaffNew");
	  A_FadeOut(1,1);
	 }
	}
    WSKL A 1
    Loop
  Ready:
    HROD A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    HROD A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    HROD A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    HROD AB 4
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/hornrodshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireProjectile("HornRodFX1New",0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireProjectile("HornRodFX1New",0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireProjectile("HornRodFX1New",0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("HornRodFX1New",0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireProjectile("HornRodFX1New",0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireProjectile("HornRodFX1New",0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("HornRodFX1New",0,0);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireProjectile("HornRodFX1New",0,0);
      A_SetAngle(angle-15);
 	  A_FireProjectile("HornRodFX1New",0,1);
      A_SetAngle(angle-15);
 	  A_FireProjectile("HornRodFX1New",0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireProjectile("HornRodFX1New",0,1);
	 }
	}
    HROD B 0 A_ReFire
    Goto Ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",1,2) == 0, "Ready")
    HROD C 2
    HROD D 3
    HROD E 2
    HROD F 3
    HROD G 4 // A_FireSkullRodPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/hornrodpowshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  A_FireProjectile("HornRodFX2New",0,0,0,0,1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  A_FireProjectile("HornRodFX2New",0,0,0,0,1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  A_FireProjectile("HornRodFX2New",0,0,0,0,1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("HornRodFX2New",0,1,0,0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  A_FireProjectile("HornRodFX2New",0,0,0,0,1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  A_FireProjectile("HornRodFX2New",0,0,0,0,1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("HornRodFX2New",0,0,0,0,1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  A_FireProjectile("HornRodFX2New",0,0,0,0,1);
      A_SetAngle(angle-15);
	  A_FireProjectile("HornRodFX2New",0,1,0,0,1);
      A_SetAngle(angle-15);
	  A_FireProjectile("HornRodFX2New",0,0,0,0,1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  A_FireProjectile("HornRodFX2New",0,1,0,0,1);
	 }
	}
    HROD F 2
    HROD E 3
    HROD D 2
    HROD C 2 A_ReFire
    Goto Ready
  }
}

ACTOR DualHellStaffNew : HereticWeaponBase
{
  Weapon.SelectionOrder 200
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoGive1 50
  Weapon.YAdjust 0
  Weapon.AmmoType1 "SkullRodAmmo"
  Weapon.AmmoType2 "SkullRodAmmo"
  Inventory.PickupMessage "$TXT_WPNSKULLROD"
  Tag "Dual HellStaves"
  States
  {
  Spawn:
    WSKL A -1
    Stop
  Ready:
    DHRD A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    DHRD A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    DHRD A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    DHRD AB 4
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/hornrodshoot",1);
     A_PlaySound("weapons/hornrodshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireProjectile("HornRodFX1New",3,0,3);
 	  A_FireProjectile("HornRodFX1New",-3,0,-3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireProjectile("HornRodFX1New",3,0,3);
 	  A_FireProjectile("HornRodFX1New",-3,0,-3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireProjectile("HornRodFX1New",3,0,3);
 	  A_FireProjectile("HornRodFX1New",-3,0,-3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("HornRodFX1New",3,1,3);
 	  A_FireProjectile("HornRodFX1New",-3,1,-3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireProjectile("HornRodFX1New",3,0,3);
 	  A_FireProjectile("HornRodFX1New",-3,0,-3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireProjectile("HornRodFX1New",3,0,3);
 	  A_FireProjectile("HornRodFX1New",-3,0,-3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("HornRodFX1New",3,0,3);
 	  A_FireProjectile("HornRodFX1New",-3,0,-3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireProjectile("HornRodFX1New",3,0,3);
 	  A_FireProjectile("HornRodFX1New",-3,0,-3);
      A_SetAngle(angle-15);
 	  A_FireProjectile("HornRodFX1New",3,1,3);
 	  A_FireProjectile("HornRodFX1New",-3,1,-3);
      A_SetAngle(angle-15);
 	  A_FireProjectile("HornRodFX1New",3,0,3);
 	  A_FireProjectile("HornRodFX1New",-3,0,-3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireProjectile("HornRodFX1New",3,1,3);
 	  A_FireProjectile("HornRodFX1New",-3,1,-3);
	 }
	}
    DHRD B 0 A_ReFire
    Goto Ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",2,2) == 0, "Ready")
    DHRD C 2
    DHRD D 3
    DHRD E 2
    DHRD F 3
    DHRD G 4 // A_FireSkullRodPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/hornrodpowshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  A_FireProjectile("HornRodFX2New",3,0,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,0,-3,0,1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  A_FireProjectile("HornRodFX2New",3,0,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,0,-3,0,1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  A_FireProjectile("HornRodFX2New",3,0,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,0,-3,0,1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("HornRodFX2New",3,1,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,1,-3,0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  A_FireProjectile("HornRodFX2New",3,0,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,0,-3,0,1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  A_FireProjectile("HornRodFX2New",3,0,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,0,-3,0,1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("HornRodFX2New",3,0,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,0,-3,0,1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  A_FireProjectile("HornRodFX2New",3,0,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,0,-3,0,1);
      A_SetAngle(angle-15);
	  A_FireProjectile("HornRodFX2New",3,1,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,1,-3,0,1);
      A_SetAngle(angle-15);
	  A_FireProjectile("HornRodFX2New",3,0,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,0,-3,0,1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  A_FireProjectile("HornRodFX2New",3,1,3,0,1);
	  A_FireProjectile("HornRodFX2New",-3,1,-3,0,1);
	 }
	}
    DHRD F 2
    DHRD E 3
    DHRD D 2
    DHRD C 2 A_ReFire
    Goto Ready
  }
}

ACTOR PhoenixFX1NoAOE : PhoenixFX1 // Spread shots of Phoenix Rod, cannot deal self-AOE [necessary due to how Spreader Aura spreads out extra shots]
{
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",33)) //2
  DamageType "Magic"
  DamageType "Fire"
  States
  {
  Death:
    FX08 A 6 Bright A_Explode(128,128,0)
    FX08 BC 5 Bright
    FX08 DEFGH 4 Bright
    Stop
  }
}

ACTOR PhoenixFX1New : PhoenixFX1
{
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",33)) //2
  DamageType "Magic"
  DamageType "Fire"
}
ACTOR PhoenixFX2New : PhoenixFX2
{
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",34)) //2
  DamageType "Magic"
  DamageType "Fire"
  ProjectileKickback 0
  +NODAMAGETHRUST
}

ACTOR PhoenixRodNew : HereticWeaponBase replaces PhoenixRod 
{
  +WEAPON.NOAUTOFIRE
  Weapon.SelectionOrder 2600
  Weapon.Kickback 150
  Weapon.YAdjust 0
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoGive 2
  Weapon.AmmoType1 "PhoenixRodAmmo"
  Weapon.AmmoType2 "PhoenixRodAmmo"
  Inventory.PickupMessage "$TXT_WPNPHOENIxROD"
  Tag "$TAG_PHOENIxROD"

  States
  {
  Spawn:
    WPHX A 0 NoDelay
	{
	 if (CountInv("PhoenixRodNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualPhoenixRodNew");
	  A_FadeOut(1,1);
	 }
	}
    WPHX A 1
    Loop
  Ready:
    PHNX A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    PHNX A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    PHNX A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    PHNX B 5
    PHNX C 7
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireProjectile("PhoenixFX1NoAOE",0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireProjectile("PhoenixFX1NoAOE",0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireProjectile("PhoenixFX1NoAOE",0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("PhoenixFX1New",0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireProjectile("PhoenixFX1NoAOE",0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireProjectile("PhoenixFX1NoAOE",0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("PhoenixFX1NoAOE",0,0);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireProjectile("PhoenixFX1NoAOE",0,0);
      A_SetAngle(angle-15);
 	  A_FireProjectile("PhoenixFX1New",0,1);
      A_SetAngle(angle-15);
 	  A_FireProjectile("PhoenixFX1NoAOE",0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireProjectile("PhoenixFX1New",0,1);
	 }
     A_Recoil(ACS_NamedExecuteWithResult("GetRecoil",1));
	}
    PHNX DB 4
    PHNX B 0 A_ReFire
    Goto Ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",1,2) == 0, "Ready")
    PHNX B 3 // A_InitPhoenixPL2
	{
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	}
  AltHold:
    PHNX C 1 // A_FirePhoenixPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      A_SetAngle(angle-15);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      A_SetAngle(angle-15);
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireProjectile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
	 }
	 A_PlaySound("weapons/phoenixpowshoot",1,1.0,1);
     ACS_NamedExecuteWithResult("FlameCount",1,-1);
	}
    PHNX B 0 A_JumpIf(ACS_NamedExecuteWithResult("FlameCount",2) < 1, "AltPowerdown")
    PHNX B 4 A_ReFire
  AltPowerdown:
    PHNX B 4 // A_ShutdownPhoenixPL2
	{
	 A_TakeInventory("PhoenixRodAmmo",1,TIF_NOTAKEINFINITE,AAPTR_PLAYER1);
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	 A_StopSound(1);
	}
    Goto Ready
  }
}

ACTOR DualPhoenixRodNew : HereticWeaponBase
{
  +WEAPON.NOAUTOFIRE
  Weapon.SelectionOrder 2600
  Weapon.Kickback 150
  Weapon.YAdjust 0
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoGive 2
  Weapon.AmmoType1 "PhoenixRodAmmo"
  Weapon.AmmoType2 "PhoenixRodAmmo"
  Inventory.PickupMessage "$TXT_WPNPHOENIxROD"
  Tag "Dual Phoenix Rods"

  States
  {
  Spawn:
    WPHX A -1
    Stop
  Ready:
    PHND A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    PHND A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    PHND A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    PHND B 5
    PHND C 7
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireProjectile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireProjectile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireProjectile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireProjectile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireProjectile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireProjectile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("PhoenixFX1New",3,1,3);
 	  A_FireProjectile("PhoenixFX1New",-3,1,-3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireProjectile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireProjectile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireProjectile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireProjectile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireProjectile("PhoenixFX1NoAOE",-3,0,-3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireProjectile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireProjectile("PhoenixFX1NoAOE",-3,0,-3);
      A_SetAngle(angle-15);
 	  A_FireProjectile("PhoenixFX1New",3,1,3);
 	  A_FireProjectile("PhoenixFX1New",-3,1,-3);
      A_SetAngle(angle-15);
 	  A_FireProjectile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireProjectile("PhoenixFX1NoAOE",-3,0,-3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireProjectile("PhoenixFX1New",3,1,3);
 	  A_FireProjectile("PhoenixFX1New",-3,1,-3);
	 }
     A_Recoil(ACS_NamedExecuteWithResult("GetRecoil",2));
	}
    PHND DB 4
    PHND B 0 A_ReFire
    Goto Ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",2,2) == 0, "Ready")
    PHND B 3 // A_InitPhoenixPL2
	{
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	}
  AltHold:
    PHND C 1 // A_FirePhoenixPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      A_SetAngle(angle-15);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      A_SetAngle(angle-15);
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireProjectile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireProjectile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
	 }
	 A_PlaySound("weapons/phoenixpowshoot",1,1.0,1);
     ACS_NamedExecuteWithResult("FlameCount",1,-1);
	}
    PHND B 0 A_JumpIf(ACS_NamedExecuteWithResult("FlameCount",2) < 1, "AltPowerdown")
    PHND B 4 A_ReFire
  AltPowerdown:
    PHND B 4 // A_ShutdownPhoenixPL2
	{
	 A_TakeInventory("PhoenixRodAmmo",2,TIF_NOTAKEINFINITE,AAPTR_PLAYER1);
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	 A_StopSound(1);
	}
    Goto Ready
  }
}

ACTOR MaceFX1New : MaceFX1
{
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",35)) //2
  DamageType "Magic"
  SeeSound ""
  var int user_special1;
  States
  {
  Spawn:
    FX02 A 0 NoDelay A_SetUserVar("user_special1",16)
  Idle:
    FX02 AB 4
	{
     if (user_special1 > 0)
	 {
	  A_SetUserVar("user_special1",user_special1-4);
	 }
	 else
     if (user_special1 == 0)
	 {
	  A_SetUserVar("user_special1",-4); A_Recoil(-7); A_ChangeFlag("NOGRAVITY",0); A_SetGravity(0.125); A_SetFloatSpeed(2); 
	 }
	 else
     if (user_special1 <= -4)
	 {
	  A_ChangeFlag("NOGRAVITY",0); A_SetGravity(0.125); A_SetFloatSpeed(2); 
	 }
	}
    Loop
  Death:
    FX02 F 4 Bright A_MaceBallImpact
    FX02 GHIJ 4 Bright
    Stop
  }
}
ACTOR MaceFX2New : MaceFX2 
{ 
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",36)) //2
 DamageType "Magic" 
}
ACTOR MaceFX3New : MaceFX3
{ 
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",37)) //2
 DamageType "Magic" 
}
ACTOR MaceFX4New : MaceFX4
{ 
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",38)) //2
 DamageType "Magic" 
}

ACTOR MaceSpawnerNew : MaceSpawner replaces MaceSpawner
{
  +NOSECTOR
  +NOBLOCKMAP
  States
  {
  Spawn:
    TNT1 A 1
    TNT1 A -1 A_SpawnItemEx("FiremaceNew")
    Stop
  }
}

ACTOR FiremaceNew : HereticWeaponBase replaces Mace
{
  Weapon.SelectionOrder 1400
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoGive1 50
  Weapon.YAdjust 0
  Weapon.AmmoType1 "MaceAmmo"
  Weapon.AmmoType2 "MaceAmmo"
  Inventory.PickupMessage "$TXT_WPNMACE"
  Tag "$TAG_MACE"

  States
  {
  Spawn:
    WMCE A 0 NoDelay
	{
	 if (CountInv("FiremaceNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualFiremaceNew");
	  A_FadeOut(1,1);
	 }
	}
    WMCE A 1
    Loop
  Ready:
    MACE A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    MACE A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    MACE A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    MACE B 4
  Hold:
    MACE CDEF 3
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/maceshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,0,0,0,0,2); }
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,0,0,0,0,2); }
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,0,0,0,0,2); }
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),1,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,1,0,0,0,2); }
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,0,0,0,0,2); }
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,0,0,0,0,2); }
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,0,0,0,0,2); }
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,0,0,0,0,2); }
      A_SetAngle(angle-15);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),1,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,1,0,0,0,2); }
      A_SetAngle(angle-15);
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,0,0,0,0,2); }
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  if (random(1,100) <= 89) { A_FireProjectile("MaceFX1New",random(-4.21875,4.21875),1,0,0,0,0); } else { A_FireProjectile("MaceFX2New",0,1,0,0,0,2); }
	 }
	}
    MACE C 4 A_ReFire
    MACE DEFB 4
    Goto Ready
  AltFire:
  AltHold:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",1,2) == 0, "Ready")
    MACE B 4
    MACE D 4 // A_FireMacePL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/maceshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  A_FireProjectile("MaceFX4New",0,0,0,0,1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  A_FireProjectile("MaceFX4New",0,0,0,0,1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  A_FireProjectile("MaceFX4New",0,0,0,0,1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("MaceFX4New",0,1,0,0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  A_FireProjectile("MaceFX4New",0,0,0,0,1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  A_FireProjectile("MaceFX4New",0,0,0,0,1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("MaceFX4New",0,0,0,0,1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  A_FireProjectile("MaceFX4New",0,0,0,0,1);
      A_SetAngle(angle-15);
	  A_FireProjectile("MaceFX4New",0,1,0,0,1);
      A_SetAngle(angle-15);
	  A_FireProjectile("MaceFX4New",0,0,0,0,1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  A_FireProjectile("MaceFX4New",0,1,0,0,1);
	 }
	}
    MACE B 4
    MACE A 8 A_ReFire
    Goto Ready
  }
}

ACTOR DualFiremaceNew : HereticWeaponBase
{
  Weapon.SelectionOrder 1400
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoGive1 50
  Weapon.YAdjust 0
  Weapon.AmmoType1 "MaceAmmo"
  Weapon.AmmoType2 "MaceAmmo"
  Inventory.PickupMessage "$TXT_WPNMACE"
  Tag "Dual Firemaces"

  States
  {
  Spawn:
    WMCE A -1
    Stop
  Ready:
    DMAC A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    DMAC A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    DMAC A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    DMAC B 4
  Hold:
    DMAC CDEF 3
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/maceshoot",1);
     A_PlaySound("weapons/maceshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),1,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),1,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),1,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),1,random(0,-2),0,0,2); 
	  }
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      A_SetAngle(angle-15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),1,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),1,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),1,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),1,random(0,-2),0,0,2); 
	  }
      A_SetAngle(angle-15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  if (random(1,100) <= 89) 
	  { 
	   A_FireProjectile("MaceFX1New",random(-6.328125,2.109375),1,random(-3,1),0,0,0); 
	   A_FireProjectile("MaceFX1New",random(-2.109375,6.328125),1,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireProjectile("MaceFX2New",random(2,0),1,random(2,0),0,0,2); 
	   A_FireProjectile("MaceFX2New",random(0,-2),1,random(0,-2),0,0,2); 
	  }
	 }
	}
    DMAC C 4 A_ReFire
    DMAC DEFB 4
    Goto Ready
  AltFire:
  AltHold:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",2,2) == 0, "Ready")
    DMAC B 4
    DMAC D 4 // A_FireMacePL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/maceshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("MaceFX4New",random(4,0),1,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),1,random(0,-4),0,0,1); 
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      A_SetAngle(angle-15);
      A_FireProjectile("MaceFX4New",random(4,0),1,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),1,random(0,-4),0,0,1); 
      A_SetAngle(angle-15);
      A_FireProjectile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("MaceFX4New",random(4,0),1,random(4,0),0,0,1); 
      A_FireProjectile("MaceFX4New",random(0,-4),1,random(0,-4),0,0,1); 
	 }
	}
    DMAC B 4
    DMAC A 8 A_ReFire
    Goto Ready
  }
}

actor SuperCrossbowNew : HereticWeaponBase 25102
{
  spawnid 33
  obituary "%o was splattered by %k's super crossbow."
  radius 20
  height 16
  inventory.pickupmessage "SUPER ETHEREAL CROSSBOW"
  weapon.selectionorder 400
  Weapon.AmmoType1 "CrossbowAmmo"
  Weapon.AmmoType2 "CrossbowAmmo"
  weapon.kickback 150
  weapon.AmmoUse1 2
  weapon.AmmoUse2 2
  weapon.AmmoGive 8
  Tag "Super Ethereal Crossbow"
  states
  {
  Spawn:
    WBOW B 0 NoDelay
	{
	 if (CountInv("SuperCrossbowNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualSuperCrossbowNew");
	  A_FadeOut(1,1);
	 }
	}
    WBOW B 1
    Loop
  Ready: 
    CRB2 ABC 6 A_WeaponReady(WRF_ALLOWUSER1)
    loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    CRB2 ABC 1 { A_Lower; A_Lower; }
    loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    CRB2 ABC 1 { A_Raise; A_Raise; }
    loop
  Fire:
    CRB2 A 3
	CRB2 D 4
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/bowshoot",1);
     A_PlaySound("weapons/bowshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX1New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("CrossbowFX1New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("CrossbowFX1New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX1New", 0,2,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("CrossbowFX1New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("CrossbowFX1New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX1New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX1New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX1New", 0,2,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX1New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("CrossbowFX1New", 0,2,  7,  0);
      A_FireProjectile("CrossbowFX1New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX3New", 4,0,-14,  0);
      A_FireProjectile("CrossbowFX3New",-4,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0,  0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0,  0,-10);
	 }
	}
    CRB2 E 10
    CRB2 F 12 
    CRB2 G 9 
    CRB2 H 1 
    CRB2 H 5 A_ReFire
    goto Ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",1,2) == 0, "Ready")
    CRB2 A 3
    CRB2 D 5
	{
	 A_PlaySound("weapons/bowshoot");
	 A_PlaySound("weapons/bowshoot");
	 A_PlaySound("weapons/bowshoot");
	 A_PlaySound("weapons/bowshoot");

	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX2New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("CrossbowFX2New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("CrossbowFX2New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX2New", 0,2,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("CrossbowFX2New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("CrossbowFX2New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX2New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX2New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX2New", 0,2,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX2New", 0,0,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("CrossbowFX2New", 0,2,  7,  0);
      A_FireProjectile("CrossbowFX2New", 1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New", 1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 0,0, -7,  0);
      A_FireProjectile("CrossbowFX2New",-1,0,  0,  5);
      A_FireProjectile("CrossbowFX2New",-1,0,  0, -5);
      A_FireProjectile("CrossbowFX2New", 2,0,-14,  0);
      A_FireProjectile("CrossbowFX2New",-2,0, 14,  0);
      A_FireProjectile("CrossbowFX3New", 2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0, 10);
      A_FireProjectile("CrossbowFX3New", 2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New",-2,0, 0,-10);
      A_FireProjectile("CrossbowFX3New", 1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0,  5);
      A_FireProjectile("CrossbowFX3New", 1,0, 0, -5);
      A_FireProjectile("CrossbowFX3New",-1,0, 0, -5);
	 }
	}
    CRB2 E 6
    CRB2 F 6 
    CRB2 G 5 
    CRB2 H 3 A_ReFire
    goto Ready
  }
}

actor DualSuperCrossbowNew : HereticWeaponBase
{
  spawnid 33
  obituary "%o was splattered by %k's super crossbows."
  radius 20
  height 16
  inventory.pickupmessage "SUPER ETHEREAL CROSSBOW"
  weapon.selectionorder 400
  Weapon.AmmoType1 "CrossbowAmmo"
  Weapon.AmmoType2 "CrossbowAmmo"
  weapon.kickback 150
  weapon.AmmoUse1 2
  weapon.AmmoUse2 2
  weapon.AmmoGive 8
  Tag "Dual Super Ethereal Crossbows"
  states
  {
  Spawn:
    WBOW B -1
    stop
  Ready: 
    SCRD ABC 6 A_WeaponReady(WRF_ALLOWUSER1)
    loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
    SCRD ABC 1 { A_Lower; A_Lower; }
    loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
    SCRD ABC 1 { A_Raise; A_Raise; }
    loop
  Fire:
    SCRD A 3
	SCRD D 4
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/bowshoot",1);
     A_PlaySound("weapons/bowshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX1New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("CrossbowFX1New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("CrossbowFX1New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX1New", 0-6,2,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("CrossbowFX1New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("CrossbowFX1New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX1New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX1New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX1New", 0-6,2,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX1New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("CrossbowFX1New", 0-6,2,  7-3,  0);
      A_FireProjectile("CrossbowFX1New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX3New", 4-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX3New",-4-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
	 }
	}
	SCRD E 4
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/bowshoot",1);
     A_PlaySound("weapons/bowshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX1New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("CrossbowFX1New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("CrossbowFX1New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX1New", 0+6,2,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("CrossbowFX1New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("CrossbowFX1New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX1New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX1New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX1New", 0+6,2,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX1New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("CrossbowFX1New", 0+6,2,  7+3,  0);
      A_FireProjectile("CrossbowFX1New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX3New", 4+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX3New",-4+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
	 }
	}
    SCRD F 10
    SCRD G 12 
    SCRD H 6 
    SCRD H 3 A_ReFire
    goto Ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",2,2) == 0, "Ready")
    SCRD A 3
    SCRD D 5
	{
	 A_PlaySound("weapons/bowshoot");
	 A_PlaySound("weapons/bowshoot");
	 A_PlaySound("weapons/bowshoot");
	 A_PlaySound("weapons/bowshoot");
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX2New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("CrossbowFX2New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("CrossbowFX2New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX2New", 0-6,2,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("CrossbowFX2New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("CrossbowFX2New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX2New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX2New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX2New", 0-6,2,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX2New", 0-6,0,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("CrossbowFX2New", 0-6,2,  7-3,  0);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 0-6,0, -7-3,  0);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX2New",-1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX2New", 2-6,0,-14-3,  0);
      A_FireProjectile("CrossbowFX2New",-2-6,0, 14-3,  0);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3, 10);
      A_FireProjectile("CrossbowFX3New", 2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New",-2-6,0,  0-3,-10);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3,  5);
      A_FireProjectile("CrossbowFX3New", 1-6,0,  0-3, -5);
      A_FireProjectile("CrossbowFX3New",-1-6,0,  0-3, -5);
	 }
	}
    SCRD E 5
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/bowshoot");
	 A_PlaySound("weapons/bowshoot");
	 A_PlaySound("weapons/bowshoot");
	 A_PlaySound("weapons/bowshoot");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX2New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("CrossbowFX2New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("CrossbowFX2New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX2New", 0+6,2,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("CrossbowFX2New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("CrossbowFX2New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("CrossbowFX2New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("CrossbowFX2New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX2New", 0+6,2,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      A_SetAngle(angle-15);
      A_FireProjectile("CrossbowFX2New", 0+6,0,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("CrossbowFX2New", 0+6,2,  7+3,  0);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 0+6,0, -7+3,  0);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX2New",-1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX2New", 2+6,0,-14+3,  0);
      A_FireProjectile("CrossbowFX2New",-2+6,0, 14+3,  0);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3, 10);
      A_FireProjectile("CrossbowFX3New", 2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New",-2+6,0,  0+3,-10);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3,  5);
      A_FireProjectile("CrossbowFX3New", 1+6,0,  0+3, -5);
      A_FireProjectile("CrossbowFX3New",-1+6,0,  0+3, -5);
	 }
	}
    SCRD F 6
    SCRD G 6 
    SCRD H 3 
    SCRD H 2 A_ReFire
    goto Ready
  }
}


ACTOR Sorcerer2FX1Player : Sorcerer2FX1 replaces Sorcerer2FX1
{
  Radius 10
  Height 6
  Speed 20
  FastSpeed 28
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",39)) //20
  DamageType "Thunder"
  DamageType "Magic"
  Projectile
  -ACTIVATEIMPACT
  -ACTIVATEPCROSS
  RenderStyle Add

  States
  {
  Spawn:
    FX16 ABC 3 Bright A_BlueSpark
    Loop
  Death:
    FX16 G 5 Bright A_Explode(random(104,152),128,0)
    FX16 HIJKL 5 Bright
    Stop
  }
}

actor Sorcerer2FX3
{
  Radius 10
  Height 6
  Speed 6
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",40)) //10
  DamageType "Magic"
  PROJECTILE
  Renderstyle Add

  States
  {
  Spawn:
	FX11 ABABABAB 5 bright
	goto Summon
  Summon:
	FX11 A 0
	{ 
	 A_SpawnItem("TeleportFog",0,0,0,0);
	 A_SpawnItem("FWizard",0,0,0,0);
	}
	stop
  Death:
	FX11 CDEFG 5 BRIGHT
	Stop
  }
}

actor DSparilStaff : HereticWeaponBase
{
  Weapon.Ammouse1 5
  Weapon.Ammouse2 15
  Weapon.Ammogive 50
  Weapon.Ammotype1 "BlasterAmmo"
  Weapon.Ammotype2 "BlasterAmmo"
  Inventory.Pickupmessage "staff of d'sparil"
  Obituary "%o was no match for %k's staff of D'Sparil"
  Tag "Staff of D'Sparil"
  States
  {
  Spawn:
    DSTA A 0 NoDelay
	{
	 if (CountInv("DSparilStaff",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualDSparilStaff");
	  A_FadeOut(1,1);
	 }
	}
	DSTA A 1
	Loop
  Ready:
	DSTF A 1 A_WeaponReady(WRF_ALLOWUSER1)
	Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
	DSTF A 1 { A_Lower; A_Lower; }
	Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
	DSTF A 1 { A_Raise; A_Raise; }
	Loop
  Fire:
	DSTF B 4 bright A_PlayWeaponSound("dsparil/attack")
	DSTF C 4 bright
	DSTF D 4 bright
	DSTF E 4 bright
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("Sorcerer2FX1Player",0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("Sorcerer2FX1Player",0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("Sorcerer2FX1Player",0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("Sorcerer2FX1Player",0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("Sorcerer2FX1Player",0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("Sorcerer2FX1Player",0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("Sorcerer2FX1Player",0,0);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("Sorcerer2FX1Player",0,0);
      A_SetAngle(angle-15);
      A_FireProjectile("Sorcerer2FX1Player",0,1);
      A_SetAngle(angle-15);
      A_FireProjectile("Sorcerer2FX1Player",0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("Sorcerer2FX1Player",0,1);
	 }
	}
	DSTF F 4 bright
	DSTF A 4 A_ReFire
	goto ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",1,2) == 0, "Ready")
	DSTF B 4 bright A_PlayWeaponSound("dsparil/attack")
	DSTF C 4 bright
	DSTF D 4 bright
	DSTF E 4 bright
	{ 
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  A_FireProjectile("Sorcerer2FX3",25,0,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  A_FireProjectile("Sorcerer2FX3",25,0,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  A_FireProjectile("Sorcerer2FX3",25,0,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("Sorcerer2FX3",25,1,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  A_FireProjectile("Sorcerer2FX3",25,0,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  A_FireProjectile("Sorcerer2FX3",25,0,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("Sorcerer2FX3",25,0,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  A_FireProjectile("Sorcerer2FX3",25,0,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      A_SetAngle(angle-15);
	  A_FireProjectile("Sorcerer2FX3",25,1,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      A_SetAngle(angle-15);
	  A_FireProjectile("Sorcerer2FX3",25,0,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  A_FireProjectile("Sorcerer2FX3",25,1,0);
  	  A_FireProjectile("Sorcerer2FX3",-25,0,0);
	 }
	}
	DSTF F 4 bright
	DSTF A 4 A_ReFire
	goto Ready
  }
}

actor DualDSparilStaff : HereticWeaponBase
{
  Weapon.Ammouse1 5
  Weapon.Ammouse2 15
  Weapon.Ammogive 50
  Weapon.Ammotype1 "BlasterAmmo"
  Weapon.Ammotype2 "BlasterAmmo"
  Inventory.Pickupmessage "staff of d'sparil"
  Obituary "%o was no match for %k's staves of D'Sparil"
  Tag "Dual Staves of D'Sparil"
  States
  {
  Spawn:
	DSTF A -1
	Stop
  Ready:
	DSTD A 1 A_WeaponReady(WRF_ALLOWUSER1)
	Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
    }
	DSTD A 1 { A_Lower; A_Lower; }
	Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
    }
	DSTD A 1 { A_Raise; A_Raise; }
	Loop
  Fire:
	DSTD B 4 bright A_PlayWeaponSound("dsparil/attack")
	DSTD C 4 bright 
	DSTD D 4 bright A_PlayWeaponSound("dsparil/attack")
	DSTD E 4 bright
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("Sorcerer2FX1Player",-3,0,-3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("Sorcerer2FX1Player",-3,0,-3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("Sorcerer2FX1Player",-3,0,-3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("Sorcerer2FX1Player",-3,1,-3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("Sorcerer2FX1Player",-3,0,-3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("Sorcerer2FX1Player",-3,0,-3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("Sorcerer2FX1Player",-3,0,-3);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("Sorcerer2FX1Player",-3,0,-3);
      A_SetAngle(angle-15);
      A_FireProjectile("Sorcerer2FX1Player",-3,1,-3);
      A_SetAngle(angle-15);
      A_FireProjectile("Sorcerer2FX1Player",-3,0,-3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("Sorcerer2FX1Player",-3,1,-3);
	 }
	}
	DSTD F 4 bright 
	DSTD G 4 bright
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireProjectile("Sorcerer2FX1Player",3,0,3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireProjectile("Sorcerer2FX1Player",3,0,3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireProjectile("Sorcerer2FX1Player",3,0,3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("Sorcerer2FX1Player",3,1,3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireProjectile("Sorcerer2FX1Player",3,0,3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireProjectile("Sorcerer2FX1Player",3,0,3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireProjectile("Sorcerer2FX1Player",3,0,3);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireProjectile("Sorcerer2FX1Player",3,0,3);
      A_SetAngle(angle-15);
      A_FireProjectile("Sorcerer2FX1Player",3,1,3);
      A_SetAngle(angle-15);
      A_FireProjectile("Sorcerer2FX1Player",3,0,3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireProjectile("Sorcerer2FX1Player",3,1,3);
	 }
	}
	DSTD H 4 bright
	DSTD A 4 A_ReFire
	goto ready
  AltFire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",2,2) == 0, "Ready")
	DSTD B 4 bright A_PlayWeaponSound("dsparil/attack")
	DSTD C 4 bright
	DSTD D 4 bright A_PlayWeaponSound("dsparil/attack")
	DSTD E 4 bright
	{ 
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  A_FireProjectile("Sorcerer2FX3",25+3,0,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  A_FireProjectile("Sorcerer2FX3",25+3,0,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  A_FireProjectile("Sorcerer2FX3",25+3,0,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("Sorcerer2FX3",25+3,1,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  A_FireProjectile("Sorcerer2FX3",25+3,0,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  A_FireProjectile("Sorcerer2FX3",25+3,0,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("Sorcerer2FX3",25+3,0,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  A_FireProjectile("Sorcerer2FX3",25+3,0,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      A_SetAngle(angle-15);
	  A_FireProjectile("Sorcerer2FX3",25+3,1,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      A_SetAngle(angle-15);
	  A_FireProjectile("Sorcerer2FX3",25+3,0,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  A_FireProjectile("Sorcerer2FX3",25+3,1,3);
  	  A_FireProjectile("Sorcerer2FX3",-25+3,0,3);
	 }
	}
	DSTD F 4 bright
	DSTD G 4 bright
	{ 
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  A_FireProjectile("Sorcerer2FX3",25-3,0,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  A_FireProjectile("Sorcerer2FX3",25-3,0,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  A_FireProjectile("Sorcerer2FX3",25-3,0,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("Sorcerer2FX3",25-3,1,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  A_FireProjectile("Sorcerer2FX3",25-3,0,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  A_FireProjectile("Sorcerer2FX3",25-3,0,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  A_FireProjectile("Sorcerer2FX3",25-3,0,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  A_FireProjectile("Sorcerer2FX3",25-3,0,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      A_SetAngle(angle-15);
	  A_FireProjectile("Sorcerer2FX3",25-3,1,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      A_SetAngle(angle-15);
	  A_FireProjectile("Sorcerer2FX3",25-3,0,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  A_FireProjectile("Sorcerer2FX3",25-3,1,-3);
  	  A_FireProjectile("Sorcerer2FX3",-25-3,0,-3);
	 }
	}
	DSTD H 4 bright
	DSTD A 4 bright A_ReFire
	goto Ready
  }
}

