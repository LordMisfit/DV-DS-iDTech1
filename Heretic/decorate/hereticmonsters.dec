// Heretic Monsters
ACTOR MaulotaurNew : MaulotaurBase replaces Minotaur
{
	Tag "Maulotaur"
	Health 3000
	Radius 28
	Height 100
	Mass 800
	Speed 16
	Damage 7
	Painchance 25
	Painchance "Fist", 38 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 63 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 38 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.3 // 2.4
	MeleeRange 96
	Monster
	+DROPOFF
	+FLOORCLIP
	+BOSS
	+NORADIUSDMG
	+DONTMORPH
	+NOTARGET
	+BOSSDEATH
	+AVOIDMELEE
	SeeSound "minotaur/sight"
	AttackSound "minotaur/attack1"
	PainSound "minotaur/pain"
	DeathSound "minotaur/death"
	ActiveSound "minotaur/active"
	DropItem "ArtiSuperHealth", 51
	DropItem "ArtiSuperHealth", 51
	DropItem "ArtiSuperHealth", 51
	DropItem "ArtiSuperHealth", 51
	DropItem "PhoenixRodAmmo", 168, 2
	DropItem "PhoenixRodHefty", 17, 10
	DropItem "PhoenixRodAmmo", 84, 2
	DropItem "PhoenixRodHefty", 8, 10
	DropItem "PhoenixRodAmmo", 42, 2
	DropItem "PhoenixRodHefty", 4, 10
	DropItem "PhoenixRodAmmo", 21, 2
	DropItem "PhoenixRodHefty", 2, 10

	States
	{
		Spawn:
			MNTR A 0 NoDelay 
			MNTR AB 10 A_MinotaurLook
			goto Spawn+1
		Roam:
			MNTR A 0
			MNTR ABCD 5
			{
				A_SetInventory("MaulotaurChargeDefense",0);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 45) { A_SetTics(4); }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_MinotaurRoam;
			}
			Loop
		See:
			MNTR A 0
			MNTR ABCD 5 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 45) { A_SetTics(4); }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				A_MinotaurChase("Melee","Missile",0,1,3,1,1);
			}
			Loop
		Melee:
			TNT1 A 0 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
			}
			MNTR V 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
			}
			MNTR W 7
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
			}
			MNTR X 12 
			{
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 67) { A_SetTics(9); }
				else if (levelbehavior && user_monsterlevel > 45) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 23) { A_SetTics(11); }
				A_MinotaurAtk1(4*random(1,8), -16);
			}
			Goto See
		Missile:
			TNT1 A 0 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
			}
			MNTR V 10
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				if (random(1,256) <= 170) { A_MinotaurDecide; }
			}
			MNTR Y 4
			{
				if (levelbehavior && user_monsterlevel > 80) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }
				A_FaceTarget;
			}
			MNTR Z 9 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(8); }
				A_MinotaurAtk2("MinotaurFX1","MinotaurFX1Crisis",5*random(1,8),3*random(1,8));
			}
			Goto See
		Hammer:
			TNT1 A 0 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
			}
			MNTR V 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
			}
			MNTR W 7
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
			}
			MNTR X 12 
			{
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 67) { A_SetTics(9); }
				else if (levelbehavior && user_monsterlevel > 45) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 23) { A_SetTics(11); }
				A_MinotaurAtk3(4*random(1,8), -16, "MinotaurFX2New", "MinotaurFX2Crisis");
			}
			Goto See
		HammerLoop:
			TNT1 A 0 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
			}
			MNTR X 12
			{
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 67) { A_SetTics(9); }
				else if (levelbehavior && user_monsterlevel > 45) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 23) { A_SetTics(11); }
			}
			Goto Hammer
		Charge:
			TNT1 A 0 
			{
				SetDamage(7+(user_monsterlevel/45));
				A_MonsterCrisisCheck; // Minotaur Charge
				if (user_canusecrisisatk == 1) 
				{
					A_PlayCrisisAtkSound;
					SetDamage((7+(user_monsterlevel/45))*CrisisMultiplier);
				}
			}
			MNTR U 2 A_MinotaurCharge
			Loop
		Pain:
			MNTR E 3
			MNTR E 6 A_DVDSPain
			Goto See
		Pain.Fist:
			MNTR E 3
			MNTR E 6 A_DVDSPain
			MNTR EE 3
			Goto See
		Pain.Kick:
			MNTR E 3
			MNTR E 6 A_DVDSPain
			MNTR EEEE 3
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			MNTR F 6 A_MinotaurDeath
			MNTR G 5
			MNTR H 6 A_Scream
			MNTR I 5
			MNTR J 6
			MNTR K 5
			MNTR L 6
			MNTR M 5 A_NoBlocking
			MNTR N 6
			MNTR O 5
			MNTR P 6
			MNTR Q 5
			MNTR R 6
			MNTR S 5 
			MNTR T -1 A_DVDSBossDeath
			Stop
		FadeOut:
			MNTR E 6
			MNTR E 2 A_Scream
			MNTR E 5 A_SpawnItemEx("MinotaurSmokeExit")
			MNTR E 5
			MNTR E 5 A_NoBlocking
			MNTR E 5
			MNTR E 5 A_SetTranslucent(0.66, 0)
			MNTR E 5 A_SetTranslucent(0.33, 0)
			MNTR E 0 
			MNTR E 10 A_DVDSBossDeath
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			MNTR E 5 A_GenericFreezeDeath
			MNTR E 1 A_FreezeDeathChunks
			wait
		Raise:
			MNTR S 5 
			MNTR R 6 
			MNTR Q 5 
			MNTR P 6 
			MNTR O 5 
			MNTR N 6 
			MNTR M 5 
			MNTR L 6 
			MNTR K 5 
			MNTR J 6 
			MNTR I 5 
			MNTR H 6 
			MNTR G 5 
			MNTR F 6 
			goto See
	}
}
actor FMaulotaur : MaulotaurNew
{
	-COUNTKILL 
	+FRIENDLY +THRUSPECIES +DONTHARMSPECIES
	Species "FriendlyMonsters"
	dropitem "NoItemSpawn", 1
}

ACTOR SnakeNew : AetheriusMonsterZSC // replaces Snake
{
	Tag "Ophidian"
	Health 280
	Radius 22
	Height 70
	Speed 10
	Painchance 48
	Painchance "Fist", 72 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 120 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 72 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.8 // 6.4
	Monster
	+FLOORCLIP
	+DONTHARMSPECIES
	AttackSound "snake/attack"
	SeeSound "snake/sight"
	PainSound "snake/pain"
	DeathSound "snake/death"
	ActiveSound "snake/active"
	Obituary "$OB_SNAKE"
	DropItem "PhoenixRodAmmo", 84
	DropItem "PhoenixRodAmmo", 84
	DropItem "PhoenixRodHefty", 8
	DropItem "PhoenixRodHefty", 8
	Species "Ophidian"
	var float user_varience;

	States
	{
		Spawn:
			SNKE A 0 NoDelay 
			SNKE AB 10 A_Look
			goto Spawn+1
		See:
			SNKE A 0
			SNKE ABCD 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			Loop
		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			SNKE FF 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			SNKE FFF 4
			{
				A_CheckIfTargetDead("See");

				if (levelbehavior && user_monsterlevel > 80) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }

				A_MonsterCrisisCheck; // Single Projectile
				if (A_JumpIfCloser(256,"")) { user_varience = 1.0; }
				else if (A_JumpIfCloser(512,"")) { user_varience = 2.0; }
				else if (A_JumpIfCloser(1024,"")) { user_varience = 3.0; }
				else if (A_JumpIfCloser(2048,"")) { user_varience = 4.0; }
				else { user_varience = 5.0; }
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("SnakeProjANew", "SnakeProjACrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("SnakeProjANew", "SnakeProjACrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				if (levelbehavior && user_monsterlevel > 60) { A_CrisisSpawnProjectile("SnakeProjANew", "SnakeProjACrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				A_CrisisSpawnProjectile("SnakeProjANew", "SnakeProjACrisis", 32, 0, 0, CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, 0);
				if (levelbehavior && user_monsterlevel > 60) { A_CrisisSpawnProjectile("SnakeProjANew", "SnakeProjACrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("SnakeProjANew", "SnakeProjACrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("SnakeProjANew", "SnakeProjACrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
			}
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			SNKE FFF 5
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			SNKE F 4 
			{
				if (levelbehavior && user_monsterlevel > 80) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(3); }

				A_MonsterCrisisCheck; // Single Projectile
				if (A_JumpIfCloser(256,"")) { user_varience = 1.0; }
				else if (A_JumpIfCloser(512,"")) { user_varience = 2.0; }
				else if (A_JumpIfCloser(1024,"")) { user_varience = 3.0; }
				else if (A_JumpIfCloser(2048,"")) { user_varience = 4.0; }
				else { user_varience = 5.0; }
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("SnakeProjBNew", "SnakeProjBCrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("SnakeProjBNew", "SnakeProjBCrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				if (levelbehavior && user_monsterlevel > 60) { A_CrisisSpawnProjectile("SnakeProjBNew", "SnakeProjBCrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				A_CrisisSpawnProjectile("SnakeProjBNew", "SnakeProjBCrisis", 32, 0, 0, CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, 0);
				if (levelbehavior && user_monsterlevel > 60) { A_CrisisSpawnProjectile("SnakeProjBNew", "SnakeProjBCrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("SnakeProjBNew", "SnakeProjBCrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("SnakeProjBNew", "SnakeProjBCrisis", 32, 0, frandom(user_varience,-user_varience), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(user_varience,-user_varience)); }
			}
			Goto See
		Pain:
			SNKE E 3
			SNKE E 3 A_DVDSPain
			Goto See
		Pain.Fist:
			SNKE E 3
			SNKE E 3 A_DVDSPain
			SNKE EE 3
			Goto See
		Pain.Kick:
			SNKE E 3
			SNKE E 3 A_DVDSPain
			SNKE EEEE 3
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SNKE G 5
			SNKE H 5 A_Scream
			SNKE IJKL 5
			SNKE M 5 A_NoBlocking
			SNKE NO 5 
			SNKE P -1
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			SNKE E 5 A_GenericFreezeDeath
			SNKE E 1 A_FreezeDeathChunks
			wait
		Raise:
			SNKE P 5 
			SNKE ONMLKJIHG 5 
			goto See
	}
}
actor FSnake : SnakeNew
{
	-COUNTKILL 
	+FRIENDLY +THRUSPECIES +DONTHARMSPECIES
	Species "FriendlyMonsters"
	dropitem "NoItemSpawn", 1
}

// Hell Guard
actor HellGuard : AetheriusMonsterZSC
{
	//$Category "ZDoom Monster pack"
	Tag "Abyssal Guard"

	Health 420 // 300
	Radius 24
	Height 64
	Speed 12 // 8
	PainChance 50
	Painchance "Fist", 75 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 125 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 75 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.8 // 6.4
	Mass 750 // 500
	MONSTER 
	+FLOORCLIP
	SeeSound "hellguard/sight"
	PainSound "hellguard/pain"
	DeathSound "hellguard/death"
	ActiveSound "hellguard/idle"
	Obituary "%o was fried to cinders by an abyssal guard."
	MeleeDamage 12 // 8
	Species "Ophidian"
	+DONTHARMSPECIES
	DropItem "PhoenixRodAmmo", 132, 5
	DropItem "PhoenixRodHefty", 13, 25
	DropItem "PhoenixRodAmmo", 44, 5
	DropItem "PhoenixRodHefty", 4, 25
	DropItem "PhoenixRodAmmo", 15, 5
	DropItem "PhoenixRodHefty", 2, 25

	States
	{
		Spawn:
			HLGD A 0 NoDelay 
			HLGD AB 10 A_Look
			goto Spawn+1
		See:
			TNT1 A 0
			HLGD AABBCCDD 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			Loop
		Missile:
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			HLGD E 8 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;
			}
			HLGD F 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }

				A_MonsterCrisisCheck; // Single Projectile
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0));
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
			}
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			HLGD E 4
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				if (levelbehavior && user_monsterlevel > 120) { A_FaceTarget; } else { A_SetTics(0); }
			}
			HLGD F 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				if (levelbehavior && user_monsterlevel > 120) 
				{
					A_MonsterCrisisCheck; // Single Projectile
					if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
					if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
					A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0));
					if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
					if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				}
				else 
				{
					A_SetTics(0); 
				}
			}
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			HLGD E 4
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				A_FaceTarget;
			}
			HLGD F 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }

				A_MonsterCrisisCheck; // Single Projectile
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0));
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
			}
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			HLGD E 4
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				if (levelbehavior && user_monsterlevel > 120) { A_FaceTarget; } else { A_SetTics(0); }
			}
			HLGD F 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				if (levelbehavior && user_monsterlevel > 120) 
				{
					A_MonsterCrisisCheck; // Single Projectile
					if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
					if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
					A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0));
					if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
					if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				}
				else 
				{
					A_SetTics(0); 
				}
			}
			TNT1 A 0
			{
				A_CheckIfTargetDead("See");
			}
			HLGD E 4
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				A_FaceTarget;
			}
			HLGD F 4 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }

				A_MonsterCrisisCheck; // Single Projectile
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0));
				if (levelbehavior && user_monsterlevel > 120) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
				if (levelbehavior && user_monsterlevel > 180) { A_CrisisSpawnProjectile("HellGuardBall", "HellGuardBallCrisis", 28, -8, (frandom(-4.0,4.0)*2.0), CMF_OFFSETPITCH|CMF_BADPITCH|CMF_CHECKTARGETDEAD, frandom(-3.0,3.0)); }
			}
			Goto See
		Pain:
			HLGD G 2
			HLGD G 2 A_DVDSPain
			Goto See
		Pain.Fist:
			HLGD G 2
			HLGD G 2 A_DVDSPain
			HLGD GG 2
			Goto See
		Pain.Kick:
			HLGD G 2
			HLGD G 2 A_DVDSPain
			HLGD GGGG 2
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			HLGD H 6
			HLGD I 6 A_Scream
			HLGD J 6
			HLGD K 6 A_Fall
			HLGD L 6
			HLGD M 6 
			HLGD N -1
			Stop
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			HLGD G 5 A_GenericFreezeDeath
			HLGD G 1 A_FreezeDeathChunks
			wait
		Raise:
			HLGD O 8 
			HLGD NMLKJI 8
			Goto See
	}
}
actor Serpathor : AetheriusMonsterZSC
{
	//$Category Monsters
	Tag "Serpathor"
	Health 650
	Radius 20
	Height 64
	ProjectilePassHeight 92
	Speed 12 // 10
	PainChance 48
	Painchance "Fist", 72 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 120 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 72 // Fist attacks have a +50% chance of stunning an enemy
	PainChance "Fire", 12
	DamageFactor "Crush", 0.8 // 6.4
	DamageFactor "Fire", 0.25
	Mass 900 // 500
	Reactiontime 8
	MONSTER 
	+FLOORCLIP
	+DONTHARMCLASS
	+AVOIDMELEE
	+MISSILEMORE
	AttackSound "snake/attack"
	SeeSound "snake/sight"
	PainSound "snake/pain"
	DeathSound "snake/death"
	ActiveSound "snake/active"
	Species "Ophidian"
	+DONTHARMSPECIES
	Obituary "%o was stoned by a Serpathor."
	DropItem "PhoenixRodAmmo", 84, 5
	DropItem "PhoenixRod", 28, 1
	States
	{
		Spawn:
			SBTC AB 10 A_Look
			Loop
		See:
			SBTC AABBCCDD 2 
			{
				user_shotsfired = 0;
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(1); } 

				if (levelbehavior && user_monsterlevel > 180) 
				{ 
					if (random(1,8) == 1) { user_shotsfiredmax = 6; } else { user_shotsfiredmax = 5; }
				}
				else
				if (levelbehavior && user_monsterlevel > 135) 
				{ 
					if (random(1,8) == 1) { user_shotsfiredmax = 5; } else { user_shotsfiredmax = 4; }
				}
				else
				if (levelbehavior && user_monsterlevel > 90) 
				{ 
					if (random(1,8) == 1) { user_shotsfiredmax = 4; } else { user_shotsfiredmax = 3; }
				}
				else
				if (levelbehavior && user_monsterlevel > 45) 
				{ 
					if (random(1,8) == 1) { user_shotsfiredmax = 3; } else { user_shotsfiredmax = 2; }
				}
				else
				{
					if (random(1,8) == 1) { user_shotsfiredmax = 2; } else { user_shotsfiredmax = 1; }
				}

				user_fastchasetimermax = 8;
				if (levelbehavior && user_monsterlevel > 225) { user_fastchasetimermax = 5; }
				else if (levelbehavior && user_monsterlevel > 150) { user_fastchasetimermax = 6; }
				else if (levelbehavior && user_monsterlevel > 75) { user_fastchasetimermax = 7; }
				user_fastchasetimer++;
				if (user_fastchasetimer >= user_fastchasetimermax) 
				{
					A_DVDSChase("Melee","Missile",CHF_FASTCHASE|CHF_NIGHTMAREFAST,1,3,1,1);
					user_fastchasetimer = 0; 
				}
				else
				{
					A_DVDSChase("Melee","Missile",0,1,3,1,1);
				}
			}
			Loop
		Missile:
			SBTC E 0 A_Jump(128,"MedusaBlast")
			SBTC E 0 A_StartSound("snake/sight", CHAN_VOICE)
			SBTC EE 5 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(4); }
				A_FaceTarget;
			}
		MissileFire:
			SBTC E 4 
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(2); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(3); }
				
				A_MonsterCrisisCheck;
				A_CrisisSpawnProjectile("SerpathorPhoenixFX1", "SerpathorPhoenixFX1Crisis", 32, 0, 0, CMF_CHECKTARGETDEAD);
			}
			SBTC EE 5 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(4); }
				A_FaceTarget;
			}
			SBTC E 0
			{
				user_shotsfired += 1;
				if (user_shotsfired >= user_shotsfiredmax) { if (random(1,8) > 1) { return state("See"); } return state(""); }
				return state("");
			}
			loop //Goto See
		MedusaBlast:
			SBTC AF 8 Bright 
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;
			}
			SBTC G 8 Bright
			{
				if (levelbehavior && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(7); }

				A_StartSound("weapons/blastershoot");
				A_MonsterCrisisCheck;
				A_CrisisSpawnProjectile("MedusaBeam", "MedusaBeamCrisis", 64, 8);
				A_CrisisSpawnProjectile("MedusaBeam", "MedusaBeamCrisis", 64, -8);
			}
			SBTC F 5
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 90) { A_SetTics(4); }
				A_FaceTarget;
			}
			Goto Missile+1
		Pain:
			SBTC H 3
			SBTC H 3 A_DVDSPain(1,random(18,22),8,0,0,75)
			Goto See
		Pain.Fire:
			SBTC H 3 A_DVDSPain(1,random(18,22),8,0,0,25)
			Goto See
		Pain.Fist:
			SBTC H 3
			SBTC H 3 A_DVDSPain(1,random(18,22),8,0,0,150)
			SBTC HH 3
			Goto See
		Pain.Kick:
			SBTC H 3
			SBTC H 3 A_DVDSPain(1,random(18,22),8,0,0,225)
			SBTC HHHH 3
			Goto See

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SBTC I 5 A_Scream
			SBTC JKLM 5
			SBTC N 5 A_NoBlocking
			SBTC OPQR 5
			SBTC R -1
			Stop

		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			SBTC H 5 A_GenericFreezeDeath
			SBTC H 1 A_FreezeDeathChunks
			wait

		Raise:
			SBTC RQPONMLKJI 5
			goto See
	}
}

ACTOR DSparilMountedNew : DSparilBase replaces Sorcerer1
{
	Tag "$DSPARIL1TAG"
	Health 24000
	Radius 28
	Height 100
	Mass 800
	Speed 16
	Painchance 56
	Painchance "Fist", 84 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 140 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 84 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.0625 // 0.5
	meleerange 82
	Monster
	+BOSS
	+DONTMORPH
	+NORADIUSDMG
	+NOTARGET
	+NOICEDEATH
	+FLOORCLIP
	+DONTGIB
	+AVOIDMELEE
	+NOFEAR
	SeeSound "dsparilserpent/sight"
	AttackSound "dsparilserpent/attack"
	PainSound "dsparilserpent/pain"
	DeathSound "dsparilserpent/death"
	ActiveSound "dsparilserpent/active"
	Obituary "$OB_DSPARIL1"
	HitObituary "$OB_DSPARIL1HIT"

	States
	{
		Pain.Charm: Goto See
		Spawn:
			SRCR A 0 NoDelay 
			SRCR AB 10 A_Look
			goto Spawn+1
		See:
			SRCR A 0
			SRCR ABCD 5 
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 45) { A_SetTics(4); }
				A_Sor1Chase;
			}
			Loop
		Missile:
			TNT1 A 0
			SRCR Q 7 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
			}
			SRCR R 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
			SRCR S 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_Srcr1Attack(8*random(1,8), "SorcererFX1New", "SorcererFX1Crisis");
			}
			Goto See
		Missile2:
			TNT1 A 0
			SRCR S 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
			}
			SRCR Q 7 
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
			}
			SRCR R 6
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
			SRCR S 10 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(9); }
				A_Srcr1Attack(8*random(1,8), "SorcererFX1New", "SorcererFX1Crisis");
			}
			Goto See
		Pain:
			SRCR Q 6 A_Sor1Pain
			Goto See
		Pain.Fist:
			SRCR Q 6 A_Sor1Pain
			SRCR Q 6
			Goto See
		Pain.Kick:
			SRCR Q 6 A_Sor1Pain
			SRCR QQ 6
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SRCR E 7
			SRCR F 7 A_Scream
			SRCR G 7
			SRCR HIJK 6 
			SRCR L 25 A_StartSound("dsparil/zap", CHAN_BODY, CHANF_DEFAULT, 1, ATTN_NONE)
			SRCR MN 5
			SRCR O 4
			SRCR L 20 A_StartSound("dsparil/zap", CHAN_BODY, CHANF_DEFAULT, 1, ATTN_NONE)
			SRCR MN 5
			SRCR O 4
			SRCR L 12
			SRCR P -1 A_SorcererRise
		Ice:
			goto Death
	}
}

ACTOR DSparilUnmountedNew : DSparilBase replaces Sorcerer2
{
	Tag "D'Sparil"
	Health 56000
	Radius 16
	Height 70
	Mass 300
	Speed 14
	Painchance 32
	Painchance "Fist", 48 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 80 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 48 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.0625 // 0.5
	MeleeRange 92
	Monster
	+DROPOFF
	+BOSS
	+DONTMORPH
	+FULLVOLACTIVE
	+NORADIUSDMG
	+NOTARGET
	+NOICEDEATH
	+FLOORCLIP
	+BOSSDEATH
	+AVOIDMELEE
	+NOFEAR
	SeeSound "dsparil/sight"
	AttackSound "dsparil/attack"
	PainSound "dsparil/pain"
	ActiveSound "dsparil/active"
	Obituary "$OB_DSPARIL2"
	HitObituary "$OB_DSPARIL2HIT"
	var int user_chaseteleportchance;
	var int user_chaseteleportchance2;

	States
	{
		Pain.Charm: Goto See
		Spawn:
			SOR2 A 0 NoDelay 
			SOR2 MN 10 A_Look
			goto Spawn+1
		See:
			SOR2 A 0
			SOR2 MNOP 4
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; A_SetTics(3); }

				user_chaseteleportchance = 512;
				if (levelbehavior && user_monsterlevel > 480) { user_chaseteleportchance = 256; }
				else if (levelbehavior && user_monsterlevel > 420) { user_chaseteleportchance = 288; }
				else if (levelbehavior && user_monsterlevel > 360) { user_chaseteleportchance = 320; }
				else if (levelbehavior && user_monsterlevel > 300) { user_chaseteleportchance = 352; }
				else if (levelbehavior && user_monsterlevel > 240) { user_chaseteleportchance = 384; }
				else if (levelbehavior && user_monsterlevel > 180) { user_chaseteleportchance = 416; }
				else if (levelbehavior && user_monsterlevel > 120) { user_chaseteleportchance = 448; }
				else if (levelbehavior && user_monsterlevel > 60) { user_chaseteleportchance = 480; }
				
				user_chaseteleportchance2 = 1;
				if (health <= user_HPCritRange) { user_chaseteleportchance2 = 8; }
				else if (health <= user_HPLowRange) { user_chaseteleportchance2 = 4; }
				else if (health <= (user_MaxHP/2)) { user_chaseteleportchance2 = 2; }
				else { user_chaseteleportchance2 = 1; }
				if (random(1,user_chaseteleportchance) <= user_chaseteleportchance2) { DSparilTeleport; } else { A_Sor2Chase; }
			}
			Loop
		Rise:
			SOR2 A 0 
			SOR2 A 0 
			SOR2 AB 4
			SOR2 C 4 A_StartSound("dsparil/rise", CHAN_BODY, CHANF_DEFAULT, 1, ATTN_NONE)
			SOR2 DEF 4
			SOR2 G 12 A_StartSound("dsparil/sight", CHAN_BODY, CHANF_DEFAULT, 1, ATTN_NONE)
			Goto See
		Pain:
			SOR2 Q 3
			SOR2 Q 6 A_Sor2Pain
			Goto See
		Pain.Fist:
			SOR2 Q 3
			SOR2 Q 6 A_Sor2Pain
			SOR2 Q 3
			Goto See
		Pain.Kick:
			SOR2 Q 3
			SOR2 Q 6 A_Sor2Pain
			SOR2 QQ 3
			Goto See
		Missile:
			TNT1 A 0
			SOR2 R 9 
			{
				if (levelbehavior && user_monsterlevel > 160) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(8); }
				A_Srcr2Decide;
			}
			SOR2 S 9 
			{
				if (levelbehavior && user_monsterlevel > 160) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(7); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(8); }
				A_FaceTarget;
			}
			SOR2 T 20 
			{
				if (levelbehavior && user_monsterlevel > 200) { A_SetTics(10); }
				else if (levelbehavior && user_monsterlevel > 180) { A_SetTics(11); }
				else if (levelbehavior && user_monsterlevel > 160) { A_SetTics(12); }
				else if (levelbehavior && user_monsterlevel > 140) { A_SetTics(13); }
				else if (levelbehavior && user_monsterlevel > 120) { A_SetTics(14); }
				else if (levelbehavior && user_monsterlevel > 100) { A_SetTics(15); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(16); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(17); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(18); }
				else if (levelbehavior && user_monsterlevel > 20) { A_SetTics(19); }
				A_Srcr2Attack(20*random(1,8),"Sorcerer2FX1New","Sorcerer2FX1Crisis","Sorcerer2FX2New","Sorcerer2FX2Crisis");
			}
			Goto See
		Teleport:
			TNT1 A 0 // makes sure D'Sparil is as stealth as possible when proceeding to teleport if flagged as stealth
			SOR2 LKJIHG 6
			Goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SDTH A 8 A_Sor2DthInit
			SDTH B 8
			SDTH C 8 A_StartSound("dsparil/scream", CHAN_BODY, CHANF_DEFAULT, 1, ATTN_NONE)
		DeathLoop:
			SDTH DE 7
			SDTH F 7 A_Sor2DthLoop
			SDTH G 6 A_StartSound("dsparil/explode", CHAN_BODY, CHANF_DEFAULT, 1, ATTN_NONE)
			SDTH H 6 A_SpawnItemEx("DSparilStaff",0,0,0,random(-12,12),random(-12,12),random(-12,12))
			SDTH I 18
			SDTH J 6 A_NoBlocking
			SDTH K 6 A_StartSound("dsparil/bones", CHAN_BODY, CHANF_DEFAULT, 1, ATTN_NONE)
			SDTH LMN 6 
			SDTH O -1 A_DVDSBossDeath
			Stop
		Ice:
			goto Death
	}
}

actor PodNew : Pod replaces Pod
{
	Tag "Explosive Pod"
	DamageType "Explosive"
	DamageFactor "Dashing", 0
	Painchance "Dashing", 0
}

// Greater Disciple
ACTOR GreaterDisciple : AetheriusMonsterZSC
{ 
	Tag "Greater Disciple"
	Health 300 
	PainChance 140
	Painchance "Fist", 210 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 210 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 0.8 // 6.4
	Speed 8
	Scale 0.90
	Radius 20 
	Height 56 
	Mass 320 
	MONSTER
	+FLOORCLIP
	+DONTHURTSPECIES
	+FLOAT
	+NOGRAVITY
	Obituary "%o was smote by a Greater Discple."
	SeeSound "monster/dissit" 
	PainSound "monster/dispai" 
	DeathSound "monster/disdth" 
	ActiveSound "monster/disact"
	States 
	{ 
		Spawn: 
			DISC A 0 NoDelay 
			DISC AB 10 A_Look 
			goto Spawn+1
		See: 
			DISC A 0
			DISC AAABBB 2
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(1); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			DISC A 0
			{
				A_GDTeleport("Blur");
			}
			Loop
		Blur:
			DISC A 1
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }

				A_StartSound("monster/blur");
				A_DVDSChase("Melee","Missile",CHF_FASTCHASE);
			}
			DISC AAABBBBAAAABBBB 1
			{
				A_SpawnItemEx("DSFX3",0.0,0.0,0.0,0.0,0.0,0.0,0.0,SXF_TRANSFERALPHA);
				A_DVDSChase("Melee","Missile",CHF_FASTCHASE);
			}
			Goto See
		Missile:
			TNT1 A 0
			DISC A 1 A_Jump(192,"Missile2")
		MissileBlur:
			DISC A 1
			{
				A_FaceTarget;
				A_SkullAttack;
				A_StartSound("monster/blur");
			}
			DISC AAAAAAAAAAA 1 
			{
				A_FaceTarget;
				A_SkullAttack;
				A_SpawnItemEx("DSFX3",0.0,0.0,0.0,0.0,0.0,0.0,0.0,SXF_TRANSFERALPHA);
			}
			Goto See
		Missile2:
			DISC C 0 Bright A_Jump(128,"Missile3")
			DISC C 1 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(0); }
				A_StartSound("monster/disat1");
			}
			DISC CC 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			DISC D 8 Bright
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(7); }

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("DiscipleShot1","DiscipleShot1Crisis",36,0,-4,0);
				A_CrisisSpawnProjectile("DiscipleShot1","DiscipleShot1Crisis",36,0,4,0);
				A_CrisisSpawnProjectile("DiscipleShot1","DiscipleShot1Crisis",36,0,-8,0);
				A_CrisisSpawnProjectile("DiscipleShot1","DiscipleShot1Crisis",36,0,8,0);
				A_CrisisSpawnProjectile("DiscipleShot1","DiscipleShot1Crisis",36,0,0,0);
			}
			DISC D 0 Bright A_Jump(64,"Missile3")
			Goto See
		Missile3:
			DISC E 1 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(0); }
				A_StartSound("monster/disat2");
			}
			DISC EE 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			DISC F 8 Bright 
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(7); }

				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("DiscipleShot2","DiscipleShot2Crisis",36,0,0,0);
			}
			DISC E 1 Bright
			{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(0); }
				A_StartSound("monster/disat2");
			}
			DISC EE 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			DISC F 8 Bright 
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(7); }

				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("DiscipleShot2","DiscipleShot2Crisis",36,0,0,0);
			}
			DISC E 1 Bright
		{
				if (levelbehavior && user_monsterlevel > 180) { A_SetTics(0); }
				A_StartSound("monster/disat2");
			}
			DISC EE 5 Bright
			{
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(3); }
				else if (levelbehavior && user_monsterlevel > 60) { A_SetTics(4); }
				A_FaceTarget;
			}
			DISC F 8 Bright 
			{
				A_FaceTarget;
				if (levelbehavior && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior && user_monsterlevel > 80) { A_SetTics(6); }
				else if (levelbehavior && user_monsterlevel > 40) { A_SetTics(7); }

				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("DiscipleShot2","DiscipleShot2Crisis",36,0,0,0);
			}
			Goto See
		Pain: 
			DISC G 2 
			DISC G 2 A_DVDSPain 
			Goto See 
		Pain.Fist: 
			DISC G 2 
			DISC G 2 A_DVDSPain 
			DISC GG 2 
			Goto See 
		Pain.Kick: 
			DISC G 2 
			DISC G 2 A_DVDSPain 
			DISC GGGG 2 
			Goto See 

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			DISC H 8 Bright A_Scream 
			DISC I 5 Bright
			DISC J 5 Bright
			DISC K 5 Bright A_NoBlocking 
			DISC LMN 4 Bright 
			DISC O -1 
			Stop
		Raise: 
			DISC O 5 
			DISC NMLKJIH 5
			Goto See 
		XDeath:
			goto Death
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			DISC G 5 A_GenericFreezeDeath
			DISC G 1 A_FreezeDeathChunks
			wait
	} 
}
actor FGreaterDisciple : GreaterDisciple
{
	-COUNTKILL 
	+FRIENDLY +THRUSPECIES +DONTHARMSPECIES
	Species "FriendlyMonsters"
	dropitem "NoItemSpawn", 1
}

// Apprentice of D'Sparil
actor ApprenticeSheenMode : PowerProtection
{
	damagefactor "normal", 0.25
	radiusdamagefactor 0.25
	inventory.icon ""
	Powerup.Duration 2147483646
}

ACTOR HereticApprenticeNew : AetheriusMonsterZSC
{
	//$Angled
	//$Color 12
	//$Category "TCOTD:A Monsters/Raven Style"
	Tag "Apprentice of D'Sparil"
	
	Tag "Apprentice"

	Health 500
	Radius 20
	Height 56
	Speed 8
	PainChance 100
	Painchance "Fist", 150 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 250 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 150 // Fist attacks have a +50% chance of stunning an enemy

	DamageFactor 0.8
	RadiusDamageFactor 0.8
	DamageFactor "Explosive", 0.8

	DamageFactor "Magic", 0.8
	DamageFactor "Crush", 0.8 // 6.4
	MONSTER 
	+FLOORCLIP
	+NOGRAVITY
	+FLOAT
	SeeSound "wizard2/sight"
	PainSound "wizard2/pain"
	DeathSound "wizard2/death"
	ActiveSound "wizard2/active"
	OBITUARY "%o was spooked by an Apprentice of D'Sparil"

	states
	{
		Spawn:
			APDP A 0 NoDelay 
			APDP AB 10 A_Look
			goto Spawn+1
		See:
			APDP A 0
			APDP A 0 // A_UnsetInvulnerable
			{
				bNOPAIN = false;
				A_SetInventory("ApprenticeSheenMode",0);
				A_SetTranslucent(1,0);
			}
			APDP AABB 3
			{
				if (levelbehavior && user_monsterlevel > 60) { bAVOIDMELEE = true; }
				if (levelbehavior && user_monsterlevel > 90) { A_SetTics(2); }
				A_DVDSChase("Melee","Missile",0,1,3,1,1);
			}
			Loop
		Missile:
			TNT1 A 0
			APDP C 2 A_SetTranslucent(frandom(0.34,0.67),0)
			APDP C 2 A_SetTranslucent(1.0,0)
			APDP C 2 A_SetTranslucent(frandom(0.34,0.67),0)
			APDP C 2 A_SetTranslucent(1.0,0)
			APDP C 2 A_SetTranslucent(frandom(0.34,0.67),0)
			APDP C 2 A_SetTranslucent(1.0,0)
			APDP C 2 A_SetTranslucent(frandom(0.34,0.67),0)
			APDP C 2 A_SetTranslucent(1.0,0)
			APDP C 0 A_Jump(128,"Missile2")
			APDP C 0 A_Jump(64,"Missile3")
			APDP D 6
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(5); }
				A_FaceTarget;
				A_StartSound("wizard/attack");

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,-10,-4);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,0,0);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,10,4);
			}
			Goto See
		Missile2:
			APDP CCCCCCCCC 1 { A_SetTranslucent(alpha-0.1,0); A_FaceTarget; }
			APDP D 1 // A_SetInvulnerable
			{
				bNOPAIN = true;
				A_SetInventory("ApprenticeSheenMode",1);
				A_SetTranslucent(0.1,0);
			}
			APDP CCCCCCCCCCCCCCCC 1 { A_DVDSWander(0,1,3,1,1); A_FaceTarget; }
			APDP CCCC 2 { A_SetTranslucent(alpha+0.08,0); A_FaceTarget; }
			APDP D 6
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(5); }
				A_FaceTarget;
				A_StartSound("wizard/attack");

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,-10,-4);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,0,0);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,10,4);
			}
			APDP CCCC 2 { A_SetTranslucent(alpha-0.08,0); A_FaceTarget; }
			APDP CCCCCCCCCCCCCCCC 1 { A_DVDSWander(0,1,3,1,1); A_FaceTarget; }
			APDP CCCC 2 { A_SetTranslucent(alpha+0.08,0); A_FaceTarget; }
			APDP D 6
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(5); }
				A_FaceTarget;
				A_StartSound("wizard/attack");

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,-10,-4);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,0,0);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,10,4);
			}
			APDP CCCC 2 { A_SetTranslucent(alpha-0.08,0); A_FaceTarget; }
			APDP CCCCCCCCCCCCCCCC 1 { A_DVDSWander(0,1,3,1,1); A_FaceTarget; }
			APDP CCCC 2 { A_SetTranslucent(alpha+0.08,0); A_FaceTarget; }
			APDP D 6
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(5); }
				A_FaceTarget;
				A_StartSound("wizard/attack");

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,-10,-4);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,0,0);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,10,4);
			}
			APDP CCCC 2 { A_SetTranslucent(alpha-0.08,0); A_FaceTarget; }
			APDP CCCCCCCCCCCCCCCC 1 { A_DVDSWander(0,1,3,1,1); A_FaceTarget; }
			APDP CCCC 2 { A_SetTranslucent(alpha+0.08,0); A_FaceTarget; }
			APDP D 6
			{
				if (levelbehavior && user_monsterlevel > 150) { A_SetTics(4); }
				else if (levelbehavior && user_monsterlevel > 75) { A_SetTics(5); }
				A_FaceTarget;
				A_StartSound("wizard/attack");

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,-10,-4);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,0,0);
				A_CrisisSpawnProjectile("FireBlast","FireBlastCrisis",30,10,4);
			}
			APDP CCCC 2 { A_SetTranslucent(alpha-0.08,0); A_FaceTarget; }
			APDP CCCCCCCCCCCCCCCC 1 { A_DVDSWander(0,1,3,1,1); A_FaceTarget; }
			APDP BABABABAB 1 { A_SetTranslucent(alpha+0.1,0); A_FaceTarget; }
			APDP A 1 // A_UnsetInvulnerable
			{
				A_FaceTarget;
				bNOPAIN = false;
				A_SetInventory("ApprenticeSheenMode",0);
				A_SetTranslucent(1.0,0);
			}
			Goto See
		Missile3:
			APDP D 4
			{
				A_FaceTarget;
				A_StartSound("wizard/attack");

				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("SuperFireBlast","SuperFireBlastCrisis",15,0,0);
			}
			Goto See
		Pain:
			APDP E 0 // A_UnsetInvulnerable
			{
				bNOPAIN = false;
				A_SetInventory("ApprenticeSheenMode",0);
				A_SetTranslucent(1,0);
			}
			APDP E 2
			APDP E 2 A_DVDSPain
			Goto See
		Pain.Fist:
			APDP E 0 // A_UnsetInvulnerable
			{
				bNOPAIN = false;
				A_SetInventory("ApprenticeSheenMode",0);
				A_SetTranslucent(1,0);
			}
			APDP E 2
			APDP E 2 A_DVDSPain
			APDP EE 2
			Goto See
		Pain.Kick:
			APDP E 0 // A_UnsetInvulnerable
			{
				bNOPAIN = false;
				A_SetInventory("ApprenticeSheenMode",0);
				A_SetTranslucent(1,0);
			}
			APDP E 2
			APDP E 2 A_DVDSPain
			APDP EEEE 2
			Goto See

		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			APDP E 0 // A_UnsetInvulnerable
			{
				bNOPAIN = false;
				A_SetInventory("ApprenticeSheenMode",0);
				A_SetTranslucent(1,0);
			}
			APDP E 4
			APDP F 4
			APDP G 3 A_Scream
			APDP H 3 A_SpawnProjectile("AoDGhost",8,0,0)
			APDP I 3 A_Fall
			APDP JKL 2
			TNT1 A 0 
			APDP M -1
			Stop
		Raise:
			APDP M 8 
			APDP L 8 
			APDP KJI 6 
			Goto See
		XDeath:
			goto Death
		Ice:
			"####" # 0 A_DVDSIceDeath(-2,0,1)
			APDP E 5 A_GenericFreezeDeath
			APDP E 1 A_FreezeDeathChunks
			wait
	}
}
actor FHereticApprentice : HereticApprenticeNew
{
	-COUNTKILL 
	+FRIENDLY +THRUSPECIES +DONTHARMSPECIES
	Species "FriendlyMonsters"
	dropitem "NoItemSpawn", 1
}

Actor AoDGhost : AetheriusBaseZSC
{
  Radius 1
  Height 1
  Speed 0
  Projectile
  RenderStyle "Translucent"
  Alpha 0.75
  +NoClip
  SeeSound "AoD/Ghost"
  States
  {
  Spawn:
  Death:
    AODG ABCDEF 5 Bright
    AODG G 5 Bright A_Fadeout
    Stop
  }
}